/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { atsInterviewsCreate } from "../funcs/atsInterviewsCreate.js";
import { atsInterviewsList } from "../funcs/atsInterviewsList.js";
import { atsInterviewsRetrieve } from "../funcs/atsInterviewsRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Interviews extends ClientSDK {
    /**
     * List  Interviews
     */
    async list(
        request: operations.ListAtsInterviewRequest,
        options?: RequestOptions
    ): Promise<PageIterator<operations.ListAtsInterviewResponse>> {
        return unwrapResultIterator(atsInterviewsList(this, request, options));
    }

    /**
     * Create Interviews
     *
     * @remarks
     * Create Interviews in any supported Ats software
     */
    async create(
        request: operations.CreateAtsInterviewRequest,
        options?: RequestOptions
    ): Promise<components.UnifiedAtsInterviewOutput> {
        return unwrapAsync(atsInterviewsCreate(this, request, options));
    }

    /**
     * Retrieve Interviews
     *
     * @remarks
     * Retrieve Interviews from any connected Ats software
     */
    async retrieve(
        request: operations.RetrieveAtsInterviewRequest,
        options?: RequestOptions
    ): Promise<components.UnifiedAtsInterviewOutput> {
        return unwrapAsync(atsInterviewsRetrieve(this, request, options));
    }
}
