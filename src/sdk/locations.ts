/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { hrisLocationsList } from "../funcs/hrisLocationsList.js";
import { hrisLocationsRetrieve } from "../funcs/hrisLocationsRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Locations extends ClientSDK {
    /**
     * List Locations
     */
    async list(
        request: operations.ListHrisLocationsRequest,
        options?: RequestOptions
    ): Promise<PageIterator<operations.ListHrisLocationsResponse>> {
        return unwrapResultIterator(hrisLocationsList(this, request, options));
    }

    /**
     * Retrieve Location
     *
     * @remarks
     * Retrieve a Location from any connected Hris software
     */
    async retrieve(
        request: operations.RetrieveHrisLocationRequest,
        options?: RequestOptions
    ): Promise<components.UnifiedHrisLocationOutput> {
        return unwrapAsync(hrisLocationsRetrieve(this, request, options));
    }
}
