/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { hrisGroupsList } from "../funcs/hrisGroupsList.js";
import { hrisGroupsRetrieve } from "../funcs/hrisGroupsRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Groups extends ClientSDK {
    /**
     * List Groups
     */
    async list(
        request: operations.ListHrisGroupsRequest,
        options?: RequestOptions
    ): Promise<PageIterator<operations.ListHrisGroupsResponse>> {
        return unwrapResultIterator(hrisGroupsList(this, request, options));
    }

    /**
     * Retrieve Group
     *
     * @remarks
     * Retrieve a Group from any connected Hris software
     */
    async retrieve(
        request: operations.RetrieveHrisGroupRequest,
        options?: RequestOptions
    ): Promise<components.UnifiedHrisGroupOutput> {
        return unwrapAsync(hrisGroupsRetrieve(this, request, options));
    }
}
