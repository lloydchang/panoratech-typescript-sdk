/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { atsApplicationsCreate } from "../funcs/atsApplicationsCreate.js";
import { atsApplicationsList } from "../funcs/atsApplicationsList.js";
import { atsApplicationsRetrieve } from "../funcs/atsApplicationsRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Applications extends ClientSDK {
    /**
     * List  Applications
     */
    async list(
        request: operations.ListAtsApplicationRequest,
        options?: RequestOptions
    ): Promise<PageIterator<operations.ListAtsApplicationResponse>> {
        return unwrapResultIterator(atsApplicationsList(this, request, options));
    }

    /**
     * Create Applications
     *
     * @remarks
     * Create Applications in any supported Ats software
     */
    async create(
        request: operations.CreateAtsApplicationRequest,
        options?: RequestOptions
    ): Promise<components.UnifiedAtsApplicationOutput> {
        return unwrapAsync(atsApplicationsCreate(this, request, options));
    }

    /**
     * Retrieve Applications
     *
     * @remarks
     * Retrieve Applications from any connected Ats software
     */
    async retrieve(
        request: operations.RetrieveAtsApplicationRequest,
        options?: RequestOptions
    ): Promise<components.UnifiedAtsApplicationOutput> {
        return unwrapAsync(atsApplicationsRetrieve(this, request, options));
    }
}
