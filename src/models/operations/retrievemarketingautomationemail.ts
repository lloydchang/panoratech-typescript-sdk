/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type RetrieveMarketingautomationEmailRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * id of the email you want to retrieve.
     */
    id: string;
    /**
     * Set to true to include data from the original Marketingautomation software.
     */
    remoteData?: boolean | undefined;
};

export type RetrieveMarketingautomationEmailResponse = {
    httpMeta: components.HTTPMetadata;
    unifiedMarketingautomationEmailOutput?:
        | components.UnifiedMarketingautomationEmailOutput
        | undefined;
};

/** @internal */
export const RetrieveMarketingautomationEmailRequest$inboundSchema: z.ZodType<
    RetrieveMarketingautomationEmailRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        id: z.string(),
        remote_data: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
        });
    });

/** @internal */
export type RetrieveMarketingautomationEmailRequest$Outbound = {
    "x-connection-token": string;
    id: string;
    remote_data?: boolean | undefined;
};

/** @internal */
export const RetrieveMarketingautomationEmailRequest$outboundSchema: z.ZodType<
    RetrieveMarketingautomationEmailRequest$Outbound,
    z.ZodTypeDef,
    RetrieveMarketingautomationEmailRequest
> = z
    .object({
        xConnectionToken: z.string(),
        id: z.string(),
        remoteData: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetrieveMarketingautomationEmailRequest$ {
    /** @deprecated use `RetrieveMarketingautomationEmailRequest$inboundSchema` instead. */
    export const inboundSchema = RetrieveMarketingautomationEmailRequest$inboundSchema;
    /** @deprecated use `RetrieveMarketingautomationEmailRequest$outboundSchema` instead. */
    export const outboundSchema = RetrieveMarketingautomationEmailRequest$outboundSchema;
    /** @deprecated use `RetrieveMarketingautomationEmailRequest$Outbound` instead. */
    export type Outbound = RetrieveMarketingautomationEmailRequest$Outbound;
}

/** @internal */
export const RetrieveMarketingautomationEmailResponse$inboundSchema: z.ZodType<
    RetrieveMarketingautomationEmailResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        HttpMeta: components.HTTPMetadata$inboundSchema,
        UnifiedMarketingautomationEmailOutput:
            components.UnifiedMarketingautomationEmailOutput$inboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            HttpMeta: "httpMeta",
            UnifiedMarketingautomationEmailOutput: "unifiedMarketingautomationEmailOutput",
        });
    });

/** @internal */
export type RetrieveMarketingautomationEmailResponse$Outbound = {
    HttpMeta: components.HTTPMetadata$Outbound;
    UnifiedMarketingautomationEmailOutput?:
        | components.UnifiedMarketingautomationEmailOutput$Outbound
        | undefined;
};

/** @internal */
export const RetrieveMarketingautomationEmailResponse$outboundSchema: z.ZodType<
    RetrieveMarketingautomationEmailResponse$Outbound,
    z.ZodTypeDef,
    RetrieveMarketingautomationEmailResponse
> = z
    .object({
        httpMeta: components.HTTPMetadata$outboundSchema,
        unifiedMarketingautomationEmailOutput:
            components.UnifiedMarketingautomationEmailOutput$outboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            httpMeta: "HttpMeta",
            unifiedMarketingautomationEmailOutput: "UnifiedMarketingautomationEmailOutput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetrieveMarketingautomationEmailResponse$ {
    /** @deprecated use `RetrieveMarketingautomationEmailResponse$inboundSchema` instead. */
    export const inboundSchema = RetrieveMarketingautomationEmailResponse$inboundSchema;
    /** @deprecated use `RetrieveMarketingautomationEmailResponse$outboundSchema` instead. */
    export const outboundSchema = RetrieveMarketingautomationEmailResponse$outboundSchema;
    /** @deprecated use `RetrieveMarketingautomationEmailResponse$Outbound` instead. */
    export type Outbound = RetrieveMarketingautomationEmailResponse$Outbound;
}
