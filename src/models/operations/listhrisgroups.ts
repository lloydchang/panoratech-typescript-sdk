/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type ListHrisGroupsRequest = {
  /**
   * The connection token
   */
  xConnectionToken: string;
  /**
   * Set to true to include data from the original software.
   */
  remoteData?: boolean | undefined;
  /**
   * Set to get the number of records.
   */
  limit?: number | undefined;
  /**
   * Set to get the number of records after this cursor.
   */
  cursor?: string | undefined;
};

export type ListHrisGroupsResponseBody = {
  prevCursor: string | null;
  nextCursor: string | null;
  data: Array<components.UnifiedHrisGroupOutput>;
};

export type ListHrisGroupsResponse = {
  result: ListHrisGroupsResponseBody;
};

/** @internal */
export const ListHrisGroupsRequest$inboundSchema: z.ZodType<
  ListHrisGroupsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "x-connection-token": z.string(),
  remote_data: z.boolean().optional(),
  limit: z.number().default(50),
  cursor: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "x-connection-token": "xConnectionToken",
    "remote_data": "remoteData",
  });
});

/** @internal */
export type ListHrisGroupsRequest$Outbound = {
  "x-connection-token": string;
  remote_data?: boolean | undefined;
  limit: number;
  cursor?: string | undefined;
};

/** @internal */
export const ListHrisGroupsRequest$outboundSchema: z.ZodType<
  ListHrisGroupsRequest$Outbound,
  z.ZodTypeDef,
  ListHrisGroupsRequest
> = z.object({
  xConnectionToken: z.string(),
  remoteData: z.boolean().optional(),
  limit: z.number().default(50),
  cursor: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    xConnectionToken: "x-connection-token",
    remoteData: "remote_data",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListHrisGroupsRequest$ {
  /** @deprecated use `ListHrisGroupsRequest$inboundSchema` instead. */
  export const inboundSchema = ListHrisGroupsRequest$inboundSchema;
  /** @deprecated use `ListHrisGroupsRequest$outboundSchema` instead. */
  export const outboundSchema = ListHrisGroupsRequest$outboundSchema;
  /** @deprecated use `ListHrisGroupsRequest$Outbound` instead. */
  export type Outbound = ListHrisGroupsRequest$Outbound;
}

/** @internal */
export const ListHrisGroupsResponseBody$inboundSchema: z.ZodType<
  ListHrisGroupsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  prev_cursor: z.nullable(z.string()),
  next_cursor: z.nullable(z.string()),
  data: z.array(components.UnifiedHrisGroupOutput$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "prev_cursor": "prevCursor",
    "next_cursor": "nextCursor",
  });
});

/** @internal */
export type ListHrisGroupsResponseBody$Outbound = {
  prev_cursor: string | null;
  next_cursor: string | null;
  data: Array<components.UnifiedHrisGroupOutput$Outbound>;
};

/** @internal */
export const ListHrisGroupsResponseBody$outboundSchema: z.ZodType<
  ListHrisGroupsResponseBody$Outbound,
  z.ZodTypeDef,
  ListHrisGroupsResponseBody
> = z.object({
  prevCursor: z.nullable(z.string()),
  nextCursor: z.nullable(z.string()),
  data: z.array(components.UnifiedHrisGroupOutput$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    prevCursor: "prev_cursor",
    nextCursor: "next_cursor",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListHrisGroupsResponseBody$ {
  /** @deprecated use `ListHrisGroupsResponseBody$inboundSchema` instead. */
  export const inboundSchema = ListHrisGroupsResponseBody$inboundSchema;
  /** @deprecated use `ListHrisGroupsResponseBody$outboundSchema` instead. */
  export const outboundSchema = ListHrisGroupsResponseBody$outboundSchema;
  /** @deprecated use `ListHrisGroupsResponseBody$Outbound` instead. */
  export type Outbound = ListHrisGroupsResponseBody$Outbound;
}

/** @internal */
export const ListHrisGroupsResponse$inboundSchema: z.ZodType<
  ListHrisGroupsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: z.lazy(() => ListHrisGroupsResponseBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type ListHrisGroupsResponse$Outbound = {
  Result: ListHrisGroupsResponseBody$Outbound;
};

/** @internal */
export const ListHrisGroupsResponse$outboundSchema: z.ZodType<
  ListHrisGroupsResponse$Outbound,
  z.ZodTypeDef,
  ListHrisGroupsResponse
> = z.object({
  result: z.lazy(() => ListHrisGroupsResponseBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListHrisGroupsResponse$ {
  /** @deprecated use `ListHrisGroupsResponse$inboundSchema` instead. */
  export const inboundSchema = ListHrisGroupsResponse$inboundSchema;
  /** @deprecated use `ListHrisGroupsResponse$outboundSchema` instead. */
  export const outboundSchema = ListHrisGroupsResponse$outboundSchema;
  /** @deprecated use `ListHrisGroupsResponse$Outbound` instead. */
  export type Outbound = ListHrisGroupsResponse$Outbound;
}
