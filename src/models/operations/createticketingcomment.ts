/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type CreateTicketingCommentRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original Ticketing software.
     */
    remoteData?: boolean | undefined;
    unifiedTicketingCommentInput: components.UnifiedTicketingCommentInput;
};

export type CreateTicketingCommentResponse = {
    httpMeta: components.HTTPMetadata;
    unifiedTicketingCommentOutput?: components.UnifiedTicketingCommentOutput | undefined;
};

/** @internal */
export const CreateTicketingCommentRequest$inboundSchema: z.ZodType<
    CreateTicketingCommentRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        UnifiedTicketingCommentInput: components.UnifiedTicketingCommentInput$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
            UnifiedTicketingCommentInput: "unifiedTicketingCommentInput",
        });
    });

/** @internal */
export type CreateTicketingCommentRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    UnifiedTicketingCommentInput: components.UnifiedTicketingCommentInput$Outbound;
};

/** @internal */
export const CreateTicketingCommentRequest$outboundSchema: z.ZodType<
    CreateTicketingCommentRequest$Outbound,
    z.ZodTypeDef,
    CreateTicketingCommentRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        unifiedTicketingCommentInput: components.UnifiedTicketingCommentInput$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
            unifiedTicketingCommentInput: "UnifiedTicketingCommentInput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTicketingCommentRequest$ {
    /** @deprecated use `CreateTicketingCommentRequest$inboundSchema` instead. */
    export const inboundSchema = CreateTicketingCommentRequest$inboundSchema;
    /** @deprecated use `CreateTicketingCommentRequest$outboundSchema` instead. */
    export const outboundSchema = CreateTicketingCommentRequest$outboundSchema;
    /** @deprecated use `CreateTicketingCommentRequest$Outbound` instead. */
    export type Outbound = CreateTicketingCommentRequest$Outbound;
}

/** @internal */
export const CreateTicketingCommentResponse$inboundSchema: z.ZodType<
    CreateTicketingCommentResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        HttpMeta: components.HTTPMetadata$inboundSchema,
        UnifiedTicketingCommentOutput:
            components.UnifiedTicketingCommentOutput$inboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            HttpMeta: "httpMeta",
            UnifiedTicketingCommentOutput: "unifiedTicketingCommentOutput",
        });
    });

/** @internal */
export type CreateTicketingCommentResponse$Outbound = {
    HttpMeta: components.HTTPMetadata$Outbound;
    UnifiedTicketingCommentOutput?: components.UnifiedTicketingCommentOutput$Outbound | undefined;
};

/** @internal */
export const CreateTicketingCommentResponse$outboundSchema: z.ZodType<
    CreateTicketingCommentResponse$Outbound,
    z.ZodTypeDef,
    CreateTicketingCommentResponse
> = z
    .object({
        httpMeta: components.HTTPMetadata$outboundSchema,
        unifiedTicketingCommentOutput:
            components.UnifiedTicketingCommentOutput$outboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            httpMeta: "HttpMeta",
            unifiedTicketingCommentOutput: "UnifiedTicketingCommentOutput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTicketingCommentResponse$ {
    /** @deprecated use `CreateTicketingCommentResponse$inboundSchema` instead. */
    export const inboundSchema = CreateTicketingCommentResponse$inboundSchema;
    /** @deprecated use `CreateTicketingCommentResponse$outboundSchema` instead. */
    export const outboundSchema = CreateTicketingCommentResponse$outboundSchema;
    /** @deprecated use `CreateTicketingCommentResponse$Outbound` instead. */
    export type Outbound = CreateTicketingCommentResponse$Outbound;
}
