/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type VerifyEventResponseBody = {
    /**
     * Dynamic event payload
     */
    data?: { [k: string]: any } | undefined;
};

export type VerifyEventResponse = {
    httpMeta: components.HTTPMetadata;
    object?: VerifyEventResponseBody | undefined;
};

/** @internal */
export const VerifyEventResponseBody$inboundSchema: z.ZodType<
    VerifyEventResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    data: z.record(z.any()).optional(),
});

/** @internal */
export type VerifyEventResponseBody$Outbound = {
    data?: { [k: string]: any } | undefined;
};

/** @internal */
export const VerifyEventResponseBody$outboundSchema: z.ZodType<
    VerifyEventResponseBody$Outbound,
    z.ZodTypeDef,
    VerifyEventResponseBody
> = z.object({
    data: z.record(z.any()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VerifyEventResponseBody$ {
    /** @deprecated use `VerifyEventResponseBody$inboundSchema` instead. */
    export const inboundSchema = VerifyEventResponseBody$inboundSchema;
    /** @deprecated use `VerifyEventResponseBody$outboundSchema` instead. */
    export const outboundSchema = VerifyEventResponseBody$outboundSchema;
    /** @deprecated use `VerifyEventResponseBody$Outbound` instead. */
    export type Outbound = VerifyEventResponseBody$Outbound;
}

/** @internal */
export const VerifyEventResponse$inboundSchema: z.ZodType<
    VerifyEventResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        HttpMeta: components.HTTPMetadata$inboundSchema,
        object: z.lazy(() => VerifyEventResponseBody$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            HttpMeta: "httpMeta",
        });
    });

/** @internal */
export type VerifyEventResponse$Outbound = {
    HttpMeta: components.HTTPMetadata$Outbound;
    object?: VerifyEventResponseBody$Outbound | undefined;
};

/** @internal */
export const VerifyEventResponse$outboundSchema: z.ZodType<
    VerifyEventResponse$Outbound,
    z.ZodTypeDef,
    VerifyEventResponse
> = z
    .object({
        httpMeta: components.HTTPMetadata$outboundSchema,
        object: z.lazy(() => VerifyEventResponseBody$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            httpMeta: "HttpMeta",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VerifyEventResponse$ {
    /** @deprecated use `VerifyEventResponse$inboundSchema` instead. */
    export const inboundSchema = VerifyEventResponse$inboundSchema;
    /** @deprecated use `VerifyEventResponse$outboundSchema` instead. */
    export const outboundSchema = VerifyEventResponse$outboundSchema;
    /** @deprecated use `VerifyEventResponse$Outbound` instead. */
    export type Outbound = VerifyEventResponse$Outbound;
}
