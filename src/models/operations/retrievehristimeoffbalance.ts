/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type RetrieveHrisTimeoffbalanceRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * id of the timeoffbalance you want to retrieve.
     */
    id: string;
    /**
     * Set to true to include data from the original Hris software.
     */
    remoteData?: boolean | undefined;
};

export type RetrieveHrisTimeoffbalanceResponse = {
    httpMeta: components.HTTPMetadata;
    unifiedHrisTimeoffbalanceOutput?: components.UnifiedHrisTimeoffbalanceOutput | undefined;
};

/** @internal */
export const RetrieveHrisTimeoffbalanceRequest$inboundSchema: z.ZodType<
    RetrieveHrisTimeoffbalanceRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        id: z.string(),
        remote_data: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
        });
    });

/** @internal */
export type RetrieveHrisTimeoffbalanceRequest$Outbound = {
    "x-connection-token": string;
    id: string;
    remote_data?: boolean | undefined;
};

/** @internal */
export const RetrieveHrisTimeoffbalanceRequest$outboundSchema: z.ZodType<
    RetrieveHrisTimeoffbalanceRequest$Outbound,
    z.ZodTypeDef,
    RetrieveHrisTimeoffbalanceRequest
> = z
    .object({
        xConnectionToken: z.string(),
        id: z.string(),
        remoteData: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetrieveHrisTimeoffbalanceRequest$ {
    /** @deprecated use `RetrieveHrisTimeoffbalanceRequest$inboundSchema` instead. */
    export const inboundSchema = RetrieveHrisTimeoffbalanceRequest$inboundSchema;
    /** @deprecated use `RetrieveHrisTimeoffbalanceRequest$outboundSchema` instead. */
    export const outboundSchema = RetrieveHrisTimeoffbalanceRequest$outboundSchema;
    /** @deprecated use `RetrieveHrisTimeoffbalanceRequest$Outbound` instead. */
    export type Outbound = RetrieveHrisTimeoffbalanceRequest$Outbound;
}

/** @internal */
export const RetrieveHrisTimeoffbalanceResponse$inboundSchema: z.ZodType<
    RetrieveHrisTimeoffbalanceResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        HttpMeta: components.HTTPMetadata$inboundSchema,
        UnifiedHrisTimeoffbalanceOutput:
            components.UnifiedHrisTimeoffbalanceOutput$inboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            HttpMeta: "httpMeta",
            UnifiedHrisTimeoffbalanceOutput: "unifiedHrisTimeoffbalanceOutput",
        });
    });

/** @internal */
export type RetrieveHrisTimeoffbalanceResponse$Outbound = {
    HttpMeta: components.HTTPMetadata$Outbound;
    UnifiedHrisTimeoffbalanceOutput?:
        | components.UnifiedHrisTimeoffbalanceOutput$Outbound
        | undefined;
};

/** @internal */
export const RetrieveHrisTimeoffbalanceResponse$outboundSchema: z.ZodType<
    RetrieveHrisTimeoffbalanceResponse$Outbound,
    z.ZodTypeDef,
    RetrieveHrisTimeoffbalanceResponse
> = z
    .object({
        httpMeta: components.HTTPMetadata$outboundSchema,
        unifiedHrisTimeoffbalanceOutput:
            components.UnifiedHrisTimeoffbalanceOutput$outboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            httpMeta: "HttpMeta",
            unifiedHrisTimeoffbalanceOutput: "UnifiedHrisTimeoffbalanceOutput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetrieveHrisTimeoffbalanceResponse$ {
    /** @deprecated use `RetrieveHrisTimeoffbalanceResponse$inboundSchema` instead. */
    export const inboundSchema = RetrieveHrisTimeoffbalanceResponse$inboundSchema;
    /** @deprecated use `RetrieveHrisTimeoffbalanceResponse$outboundSchema` instead. */
    export const outboundSchema = RetrieveHrisTimeoffbalanceResponse$outboundSchema;
    /** @deprecated use `RetrieveHrisTimeoffbalanceResponse$Outbound` instead. */
    export type Outbound = RetrieveHrisTimeoffbalanceResponse$Outbound;
}
