/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type ListHrisEmployeeRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original software.
     */
    remoteData?: boolean | undefined;
    /**
     * Set to get the number of records.
     */
    limit?: number | undefined;
    /**
     * Set to get the number of records after this cursor.
     */
    cursor?: string | undefined;
};

export type ListHrisEmployeeResponseBody = {
    prevCursor: string;
    nextCursor: string;
    data: Array<components.UnifiedHrisEmployeeOutput>;
};

export type ListHrisEmployeeResponse = {
    httpMeta: components.HTTPMetadata;
    object?: ListHrisEmployeeResponseBody | undefined;
};

/** @internal */
export const ListHrisEmployeeRequest$inboundSchema: z.ZodType<
    ListHrisEmployeeRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        limit: z.number().default(50),
        cursor: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
        });
    });

/** @internal */
export type ListHrisEmployeeRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    limit: number;
    cursor?: string | undefined;
};

/** @internal */
export const ListHrisEmployeeRequest$outboundSchema: z.ZodType<
    ListHrisEmployeeRequest$Outbound,
    z.ZodTypeDef,
    ListHrisEmployeeRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        limit: z.number().default(50),
        cursor: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListHrisEmployeeRequest$ {
    /** @deprecated use `ListHrisEmployeeRequest$inboundSchema` instead. */
    export const inboundSchema = ListHrisEmployeeRequest$inboundSchema;
    /** @deprecated use `ListHrisEmployeeRequest$outboundSchema` instead. */
    export const outboundSchema = ListHrisEmployeeRequest$outboundSchema;
    /** @deprecated use `ListHrisEmployeeRequest$Outbound` instead. */
    export type Outbound = ListHrisEmployeeRequest$Outbound;
}

/** @internal */
export const ListHrisEmployeeResponseBody$inboundSchema: z.ZodType<
    ListHrisEmployeeResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        prev_cursor: z.string(),
        next_cursor: z.string(),
        data: z.array(components.UnifiedHrisEmployeeOutput$inboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            prev_cursor: "prevCursor",
            next_cursor: "nextCursor",
        });
    });

/** @internal */
export type ListHrisEmployeeResponseBody$Outbound = {
    prev_cursor: string;
    next_cursor: string;
    data: Array<components.UnifiedHrisEmployeeOutput$Outbound>;
};

/** @internal */
export const ListHrisEmployeeResponseBody$outboundSchema: z.ZodType<
    ListHrisEmployeeResponseBody$Outbound,
    z.ZodTypeDef,
    ListHrisEmployeeResponseBody
> = z
    .object({
        prevCursor: z.string(),
        nextCursor: z.string(),
        data: z.array(components.UnifiedHrisEmployeeOutput$outboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            prevCursor: "prev_cursor",
            nextCursor: "next_cursor",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListHrisEmployeeResponseBody$ {
    /** @deprecated use `ListHrisEmployeeResponseBody$inboundSchema` instead. */
    export const inboundSchema = ListHrisEmployeeResponseBody$inboundSchema;
    /** @deprecated use `ListHrisEmployeeResponseBody$outboundSchema` instead. */
    export const outboundSchema = ListHrisEmployeeResponseBody$outboundSchema;
    /** @deprecated use `ListHrisEmployeeResponseBody$Outbound` instead. */
    export type Outbound = ListHrisEmployeeResponseBody$Outbound;
}

/** @internal */
export const ListHrisEmployeeResponse$inboundSchema: z.ZodType<
    ListHrisEmployeeResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        HttpMeta: components.HTTPMetadata$inboundSchema,
        object: z.lazy(() => ListHrisEmployeeResponseBody$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            HttpMeta: "httpMeta",
        });
    });

/** @internal */
export type ListHrisEmployeeResponse$Outbound = {
    HttpMeta: components.HTTPMetadata$Outbound;
    object?: ListHrisEmployeeResponseBody$Outbound | undefined;
};

/** @internal */
export const ListHrisEmployeeResponse$outboundSchema: z.ZodType<
    ListHrisEmployeeResponse$Outbound,
    z.ZodTypeDef,
    ListHrisEmployeeResponse
> = z
    .object({
        httpMeta: components.HTTPMetadata$outboundSchema,
        object: z.lazy(() => ListHrisEmployeeResponseBody$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            httpMeta: "HttpMeta",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListHrisEmployeeResponse$ {
    /** @deprecated use `ListHrisEmployeeResponse$inboundSchema` instead. */
    export const inboundSchema = ListHrisEmployeeResponse$inboundSchema;
    /** @deprecated use `ListHrisEmployeeResponse$outboundSchema` instead. */
    export const outboundSchema = ListHrisEmployeeResponse$outboundSchema;
    /** @deprecated use `ListHrisEmployeeResponse$Outbound` instead. */
    export type Outbound = ListHrisEmployeeResponse$Outbound;
}
