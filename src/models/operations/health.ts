/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type HealthResponse = {
    httpMeta: components.HTTPMetadata;
};

/** @internal */
export const HealthResponse$inboundSchema: z.ZodType<HealthResponse, z.ZodTypeDef, unknown> = z
    .object({
        HttpMeta: components.HTTPMetadata$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            HttpMeta: "httpMeta",
        });
    });

/** @internal */
export type HealthResponse$Outbound = {
    HttpMeta: components.HTTPMetadata$Outbound;
};

/** @internal */
export const HealthResponse$outboundSchema: z.ZodType<
    HealthResponse$Outbound,
    z.ZodTypeDef,
    HealthResponse
> = z
    .object({
        httpMeta: components.HTTPMetadata$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            httpMeta: "HttpMeta",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HealthResponse$ {
    /** @deprecated use `HealthResponse$inboundSchema` instead. */
    export const inboundSchema = HealthResponse$inboundSchema;
    /** @deprecated use `HealthResponse$outboundSchema` instead. */
    export const outboundSchema = HealthResponse$outboundSchema;
    /** @deprecated use `HealthResponse$Outbound` instead. */
    export type Outbound = HealthResponse$Outbound;
}
