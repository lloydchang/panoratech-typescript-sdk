/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type ListAtsRejectReasonsRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * Set to true to include data from the original software.
     */
    remoteData?: boolean | undefined;
    /**
     * Set to get the number of records.
     */
    limit?: number | undefined;
    /**
     * Set to get the number of records after this cursor.
     */
    cursor?: string | undefined;
};

export type ListAtsRejectReasonsResponseBody = {
    prevCursor: string;
    nextCursor: string;
    data: Array<components.UnifiedAtsRejectreasonOutput>;
};

export type ListAtsRejectReasonsResponse = {
    httpMeta: components.HTTPMetadata;
    object?: ListAtsRejectReasonsResponseBody | undefined;
};

/** @internal */
export const ListAtsRejectReasonsRequest$inboundSchema: z.ZodType<
    ListAtsRejectReasonsRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        remote_data: z.boolean().optional(),
        limit: z.number().default(50),
        cursor: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
        });
    });

/** @internal */
export type ListAtsRejectReasonsRequest$Outbound = {
    "x-connection-token": string;
    remote_data?: boolean | undefined;
    limit: number;
    cursor?: string | undefined;
};

/** @internal */
export const ListAtsRejectReasonsRequest$outboundSchema: z.ZodType<
    ListAtsRejectReasonsRequest$Outbound,
    z.ZodTypeDef,
    ListAtsRejectReasonsRequest
> = z
    .object({
        xConnectionToken: z.string(),
        remoteData: z.boolean().optional(),
        limit: z.number().default(50),
        cursor: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAtsRejectReasonsRequest$ {
    /** @deprecated use `ListAtsRejectReasonsRequest$inboundSchema` instead. */
    export const inboundSchema = ListAtsRejectReasonsRequest$inboundSchema;
    /** @deprecated use `ListAtsRejectReasonsRequest$outboundSchema` instead. */
    export const outboundSchema = ListAtsRejectReasonsRequest$outboundSchema;
    /** @deprecated use `ListAtsRejectReasonsRequest$Outbound` instead. */
    export type Outbound = ListAtsRejectReasonsRequest$Outbound;
}

/** @internal */
export const ListAtsRejectReasonsResponseBody$inboundSchema: z.ZodType<
    ListAtsRejectReasonsResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        prev_cursor: z.string(),
        next_cursor: z.string(),
        data: z.array(components.UnifiedAtsRejectreasonOutput$inboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            prev_cursor: "prevCursor",
            next_cursor: "nextCursor",
        });
    });

/** @internal */
export type ListAtsRejectReasonsResponseBody$Outbound = {
    prev_cursor: string;
    next_cursor: string;
    data: Array<components.UnifiedAtsRejectreasonOutput$Outbound>;
};

/** @internal */
export const ListAtsRejectReasonsResponseBody$outboundSchema: z.ZodType<
    ListAtsRejectReasonsResponseBody$Outbound,
    z.ZodTypeDef,
    ListAtsRejectReasonsResponseBody
> = z
    .object({
        prevCursor: z.string(),
        nextCursor: z.string(),
        data: z.array(components.UnifiedAtsRejectreasonOutput$outboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            prevCursor: "prev_cursor",
            nextCursor: "next_cursor",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAtsRejectReasonsResponseBody$ {
    /** @deprecated use `ListAtsRejectReasonsResponseBody$inboundSchema` instead. */
    export const inboundSchema = ListAtsRejectReasonsResponseBody$inboundSchema;
    /** @deprecated use `ListAtsRejectReasonsResponseBody$outboundSchema` instead. */
    export const outboundSchema = ListAtsRejectReasonsResponseBody$outboundSchema;
    /** @deprecated use `ListAtsRejectReasonsResponseBody$Outbound` instead. */
    export type Outbound = ListAtsRejectReasonsResponseBody$Outbound;
}

/** @internal */
export const ListAtsRejectReasonsResponse$inboundSchema: z.ZodType<
    ListAtsRejectReasonsResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        HttpMeta: components.HTTPMetadata$inboundSchema,
        object: z.lazy(() => ListAtsRejectReasonsResponseBody$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            HttpMeta: "httpMeta",
        });
    });

/** @internal */
export type ListAtsRejectReasonsResponse$Outbound = {
    HttpMeta: components.HTTPMetadata$Outbound;
    object?: ListAtsRejectReasonsResponseBody$Outbound | undefined;
};

/** @internal */
export const ListAtsRejectReasonsResponse$outboundSchema: z.ZodType<
    ListAtsRejectReasonsResponse$Outbound,
    z.ZodTypeDef,
    ListAtsRejectReasonsResponse
> = z
    .object({
        httpMeta: components.HTTPMetadata$outboundSchema,
        object: z.lazy(() => ListAtsRejectReasonsResponseBody$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            httpMeta: "HttpMeta",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAtsRejectReasonsResponse$ {
    /** @deprecated use `ListAtsRejectReasonsResponse$inboundSchema` instead. */
    export const inboundSchema = ListAtsRejectReasonsResponse$inboundSchema;
    /** @deprecated use `ListAtsRejectReasonsResponse$outboundSchema` instead. */
    export const outboundSchema = ListAtsRejectReasonsResponse$outboundSchema;
    /** @deprecated use `ListAtsRejectReasonsResponse$Outbound` instead. */
    export type Outbound = ListAtsRejectReasonsResponse$Outbound;
}
