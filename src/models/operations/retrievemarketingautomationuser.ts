/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type RetrieveMarketingAutomationUserRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * id of the user you want to retrieve.
     */
    id: string;
    /**
     * Set to true to include data from the original Marketingautomation software.
     */
    remoteData?: boolean | undefined;
};

export type RetrieveMarketingAutomationUserResponse = {
    httpMeta: components.HTTPMetadata;
    unifiedMarketingautomationUserOutput?:
        | components.UnifiedMarketingautomationUserOutput
        | undefined;
};

/** @internal */
export const RetrieveMarketingAutomationUserRequest$inboundSchema: z.ZodType<
    RetrieveMarketingAutomationUserRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-connection-token": z.string(),
        id: z.string(),
        remote_data: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            "x-connection-token": "xConnectionToken",
            remote_data: "remoteData",
        });
    });

/** @internal */
export type RetrieveMarketingAutomationUserRequest$Outbound = {
    "x-connection-token": string;
    id: string;
    remote_data?: boolean | undefined;
};

/** @internal */
export const RetrieveMarketingAutomationUserRequest$outboundSchema: z.ZodType<
    RetrieveMarketingAutomationUserRequest$Outbound,
    z.ZodTypeDef,
    RetrieveMarketingAutomationUserRequest
> = z
    .object({
        xConnectionToken: z.string(),
        id: z.string(),
        remoteData: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            xConnectionToken: "x-connection-token",
            remoteData: "remote_data",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetrieveMarketingAutomationUserRequest$ {
    /** @deprecated use `RetrieveMarketingAutomationUserRequest$inboundSchema` instead. */
    export const inboundSchema = RetrieveMarketingAutomationUserRequest$inboundSchema;
    /** @deprecated use `RetrieveMarketingAutomationUserRequest$outboundSchema` instead. */
    export const outboundSchema = RetrieveMarketingAutomationUserRequest$outboundSchema;
    /** @deprecated use `RetrieveMarketingAutomationUserRequest$Outbound` instead. */
    export type Outbound = RetrieveMarketingAutomationUserRequest$Outbound;
}

/** @internal */
export const RetrieveMarketingAutomationUserResponse$inboundSchema: z.ZodType<
    RetrieveMarketingAutomationUserResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        HttpMeta: components.HTTPMetadata$inboundSchema,
        UnifiedMarketingautomationUserOutput:
            components.UnifiedMarketingautomationUserOutput$inboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            HttpMeta: "httpMeta",
            UnifiedMarketingautomationUserOutput: "unifiedMarketingautomationUserOutput",
        });
    });

/** @internal */
export type RetrieveMarketingAutomationUserResponse$Outbound = {
    HttpMeta: components.HTTPMetadata$Outbound;
    UnifiedMarketingautomationUserOutput?:
        | components.UnifiedMarketingautomationUserOutput$Outbound
        | undefined;
};

/** @internal */
export const RetrieveMarketingAutomationUserResponse$outboundSchema: z.ZodType<
    RetrieveMarketingAutomationUserResponse$Outbound,
    z.ZodTypeDef,
    RetrieveMarketingAutomationUserResponse
> = z
    .object({
        httpMeta: components.HTTPMetadata$outboundSchema,
        unifiedMarketingautomationUserOutput:
            components.UnifiedMarketingautomationUserOutput$outboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            httpMeta: "HttpMeta",
            unifiedMarketingautomationUserOutput: "UnifiedMarketingautomationUserOutput",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetrieveMarketingAutomationUserResponse$ {
    /** @deprecated use `RetrieveMarketingAutomationUserResponse$inboundSchema` instead. */
    export const inboundSchema = RetrieveMarketingAutomationUserResponse$inboundSchema;
    /** @deprecated use `RetrieveMarketingAutomationUserResponse$outboundSchema` instead. */
    export const outboundSchema = RetrieveMarketingAutomationUserResponse$outboundSchema;
    /** @deprecated use `RetrieveMarketingAutomationUserResponse$Outbound` instead. */
    export type Outbound = RetrieveMarketingAutomationUserResponse$Outbound;
}
