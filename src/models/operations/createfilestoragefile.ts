/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type CreateFilestorageFileRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    remoteData: boolean;
    unifiedFilestorageFileInput: components.UnifiedFilestorageFileInput;
};

export type CreateFilestorageFileResponse = {
    httpMeta: components.HTTPMetadata;
    unifiedFilestorageFileOutput?: components.UnifiedFilestorageFileOutput | undefined;
};

/** @internal */
export namespace CreateFilestorageFileRequest$ {
    export const inboundSchema: z.ZodType<CreateFilestorageFileRequest, z.ZodTypeDef, unknown> = z
        .object({
            "x-connection-token": z.string(),
            remote_data: z.boolean(),
            UnifiedFilestorageFileInput: components.UnifiedFilestorageFileInput$.inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                "x-connection-token": "xConnectionToken",
                remote_data: "remoteData",
                UnifiedFilestorageFileInput: "unifiedFilestorageFileInput",
            });
        });

    export type Outbound = {
        "x-connection-token": string;
        remote_data: boolean;
        UnifiedFilestorageFileInput: components.UnifiedFilestorageFileInput$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateFilestorageFileRequest> = z
        .object({
            xConnectionToken: z.string(),
            remoteData: z.boolean(),
            unifiedFilestorageFileInput: components.UnifiedFilestorageFileInput$.outboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                xConnectionToken: "x-connection-token",
                remoteData: "remote_data",
                unifiedFilestorageFileInput: "UnifiedFilestorageFileInput",
            });
        });
}

/** @internal */
export namespace CreateFilestorageFileResponse$ {
    export const inboundSchema: z.ZodType<CreateFilestorageFileResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            UnifiedFilestorageFileOutput:
                components.UnifiedFilestorageFileOutput$.inboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                HttpMeta: "httpMeta",
                UnifiedFilestorageFileOutput: "unifiedFilestorageFileOutput",
            });
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        UnifiedFilestorageFileOutput?:
            | components.UnifiedFilestorageFileOutput$.Outbound
            | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateFilestorageFileResponse> =
        z
            .object({
                httpMeta: components.HTTPMetadata$.outboundSchema,
                unifiedFilestorageFileOutput:
                    components.UnifiedFilestorageFileOutput$.outboundSchema.optional(),
            })
            .transform((v) => {
                return remap$(v, {
                    httpMeta: "HttpMeta",
                    unifiedFilestorageFileOutput: "UnifiedFilestorageFileOutput",
                });
            });
}
