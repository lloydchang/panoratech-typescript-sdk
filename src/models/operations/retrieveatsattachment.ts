/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type RetrieveAtsAttachmentRequest = {
    /**
     * The connection token
     */
    xConnectionToken: string;
    /**
     * id of the attachment you want to retrieve.
     */
    id: string;
    /**
     * Set to true to include data from the original Ats software.
     */
    remoteData?: boolean | undefined;
};

export type RetrieveAtsAttachmentResponse = {
    httpMeta: components.HTTPMetadata;
    unifiedAtsAttachmentOutput?: components.UnifiedAtsAttachmentOutput | undefined;
};

/** @internal */
export namespace RetrieveAtsAttachmentRequest$ {
    export const inboundSchema: z.ZodType<RetrieveAtsAttachmentRequest, z.ZodTypeDef, unknown> = z
        .object({
            "x-connection-token": z.string(),
            id: z.string(),
            remote_data: z.boolean().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                "x-connection-token": "xConnectionToken",
                remote_data: "remoteData",
            });
        });

    export type Outbound = {
        "x-connection-token": string;
        id: string;
        remote_data?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RetrieveAtsAttachmentRequest> = z
        .object({
            xConnectionToken: z.string(),
            id: z.string(),
            remoteData: z.boolean().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                xConnectionToken: "x-connection-token",
                remoteData: "remote_data",
            });
        });
}

/** @internal */
export namespace RetrieveAtsAttachmentResponse$ {
    export const inboundSchema: z.ZodType<RetrieveAtsAttachmentResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            UnifiedAtsAttachmentOutput:
                components.UnifiedAtsAttachmentOutput$.inboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                HttpMeta: "httpMeta",
                UnifiedAtsAttachmentOutput: "unifiedAtsAttachmentOutput",
            });
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        UnifiedAtsAttachmentOutput?: components.UnifiedAtsAttachmentOutput$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RetrieveAtsAttachmentResponse> =
        z
            .object({
                httpMeta: components.HTTPMetadata$.outboundSchema,
                unifiedAtsAttachmentOutput:
                    components.UnifiedAtsAttachmentOutput$.outboundSchema.optional(),
            })
            .transform((v) => {
                return remap$(v, {
                    httpMeta: "HttpMeta",
                    unifiedAtsAttachmentOutput: "UnifiedAtsAttachmentOutput",
                });
            });
}
