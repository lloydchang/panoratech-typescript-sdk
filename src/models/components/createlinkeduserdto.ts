/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type CreateLinkedUserDto = {
    linkedUserOriginId: string;
    alias: string;
    idProject: string;
};

/** @internal */
export const CreateLinkedUserDto$inboundSchema: z.ZodType<
    CreateLinkedUserDto,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        linked_user_origin_id: z.string(),
        alias: z.string(),
        id_project: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            linked_user_origin_id: "linkedUserOriginId",
            id_project: "idProject",
        });
    });

/** @internal */
export type CreateLinkedUserDto$Outbound = {
    linked_user_origin_id: string;
    alias: string;
    id_project: string;
};

/** @internal */
export const CreateLinkedUserDto$outboundSchema: z.ZodType<
    CreateLinkedUserDto$Outbound,
    z.ZodTypeDef,
    CreateLinkedUserDto
> = z
    .object({
        linkedUserOriginId: z.string(),
        alias: z.string(),
        idProject: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            linkedUserOriginId: "linked_user_origin_id",
            idProject: "id_project",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateLinkedUserDto$ {
    /** @deprecated use `CreateLinkedUserDto$inboundSchema` instead. */
    export const inboundSchema = CreateLinkedUserDto$inboundSchema;
    /** @deprecated use `CreateLinkedUserDto$outboundSchema` instead. */
    export const outboundSchema = CreateLinkedUserDto$outboundSchema;
    /** @deprecated use `CreateLinkedUserDto$Outbound` instead. */
    export type Outbound = CreateLinkedUserDto$Outbound;
}
