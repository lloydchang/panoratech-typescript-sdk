/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type UnifiedTicketingContactOutputFieldMappings = {};

export type UnifiedTicketingContactOutputRemoteData = {};

export type UnifiedTicketingContactOutputCreatedAt = {};

export type UnifiedTicketingContactOutputModifiedAt = {};

export type UnifiedTicketingContactOutput = {
    /**
     * The name of the contact
     */
    name: string;
    /**
     * The email address of the contact
     */
    emailAddress: string;
    /**
     * The phone number of the contact
     */
    phoneNumber?: string | undefined;
    /**
     * The details of the contact
     */
    details?: string | undefined;
    fieldMappings: UnifiedTicketingContactOutputFieldMappings;
    /**
     * The UUID of the contact
     */
    id?: string | undefined;
    /**
     * The id of the contact in the context of the 3rd Party
     */
    remoteId?: string | undefined;
    remoteData: UnifiedTicketingContactOutputRemoteData;
    createdAt: UnifiedTicketingContactOutputCreatedAt;
    modifiedAt: UnifiedTicketingContactOutputModifiedAt;
};

/** @internal */
export namespace UnifiedTicketingContactOutputFieldMappings$ {
    export const inboundSchema: z.ZodType<
        UnifiedTicketingContactOutputFieldMappings,
        z.ZodTypeDef,
        unknown
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UnifiedTicketingContactOutputFieldMappings
    > = z.object({});
}

/** @internal */
export namespace UnifiedTicketingContactOutputRemoteData$ {
    export const inboundSchema: z.ZodType<
        UnifiedTicketingContactOutputRemoteData,
        z.ZodTypeDef,
        unknown
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UnifiedTicketingContactOutputRemoteData
    > = z.object({});
}

/** @internal */
export namespace UnifiedTicketingContactOutputCreatedAt$ {
    export const inboundSchema: z.ZodType<
        UnifiedTicketingContactOutputCreatedAt,
        z.ZodTypeDef,
        unknown
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UnifiedTicketingContactOutputCreatedAt
    > = z.object({});
}

/** @internal */
export namespace UnifiedTicketingContactOutputModifiedAt$ {
    export const inboundSchema: z.ZodType<
        UnifiedTicketingContactOutputModifiedAt,
        z.ZodTypeDef,
        unknown
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UnifiedTicketingContactOutputModifiedAt
    > = z.object({});
}

/** @internal */
export namespace UnifiedTicketingContactOutput$ {
    export const inboundSchema: z.ZodType<UnifiedTicketingContactOutput, z.ZodTypeDef, unknown> = z
        .object({
            name: z.string(),
            email_address: z.string(),
            phone_number: z.string().optional(),
            details: z.string().optional(),
            field_mappings: z.lazy(() => UnifiedTicketingContactOutputFieldMappings$.inboundSchema),
            id: z.string().optional(),
            remote_id: z.string().optional(),
            remote_data: z.lazy(() => UnifiedTicketingContactOutputRemoteData$.inboundSchema),
            created_at: z.lazy(() => UnifiedTicketingContactOutputCreatedAt$.inboundSchema),
            modified_at: z.lazy(() => UnifiedTicketingContactOutputModifiedAt$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                email_address: "emailAddress",
                phone_number: "phoneNumber",
                field_mappings: "fieldMappings",
                remote_id: "remoteId",
                remote_data: "remoteData",
                created_at: "createdAt",
                modified_at: "modifiedAt",
            });
        });

    export type Outbound = {
        name: string;
        email_address: string;
        phone_number?: string | undefined;
        details?: string | undefined;
        field_mappings: UnifiedTicketingContactOutputFieldMappings$.Outbound;
        id?: string | undefined;
        remote_id?: string | undefined;
        remote_data: UnifiedTicketingContactOutputRemoteData$.Outbound;
        created_at: UnifiedTicketingContactOutputCreatedAt$.Outbound;
        modified_at: UnifiedTicketingContactOutputModifiedAt$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnifiedTicketingContactOutput> =
        z
            .object({
                name: z.string(),
                emailAddress: z.string(),
                phoneNumber: z.string().optional(),
                details: z.string().optional(),
                fieldMappings: z.lazy(
                    () => UnifiedTicketingContactOutputFieldMappings$.outboundSchema
                ),
                id: z.string().optional(),
                remoteId: z.string().optional(),
                remoteData: z.lazy(() => UnifiedTicketingContactOutputRemoteData$.outboundSchema),
                createdAt: z.lazy(() => UnifiedTicketingContactOutputCreatedAt$.outboundSchema),
                modifiedAt: z.lazy(() => UnifiedTicketingContactOutputModifiedAt$.outboundSchema),
            })
            .transform((v) => {
                return remap$(v, {
                    emailAddress: "email_address",
                    phoneNumber: "phone_number",
                    fieldMappings: "field_mappings",
                    remoteId: "remote_id",
                    remoteData: "remote_data",
                    createdAt: "created_at",
                    modifiedAt: "modified_at",
                });
            });
}
