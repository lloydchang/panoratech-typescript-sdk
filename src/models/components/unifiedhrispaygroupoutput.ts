/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

/**
 * The custom field mappings of the object between the remote 3rd party & Panora
 */
export type UnifiedHrisPaygroupOutputFieldMappings = {};

/**
 * The remote data of the pay group in the context of the 3rd Party
 */
export type UnifiedHrisPaygroupOutputRemoteData = {};

export type UnifiedHrisPaygroupOutput = {
    /**
     * The name of the pay group
     */
    payGroupName?: string | null | undefined;
    /**
     * The custom field mappings of the object between the remote 3rd party & Panora
     */
    fieldMappings?: UnifiedHrisPaygroupOutputFieldMappings | null | undefined;
    /**
     * The UUID of the pay group record
     */
    id?: string | null | undefined;
    /**
     * The remote ID of the pay group in the context of the 3rd Party
     */
    remoteId?: string | null | undefined;
    /**
     * The remote data of the pay group in the context of the 3rd Party
     */
    remoteData?: UnifiedHrisPaygroupOutputRemoteData | null | undefined;
    /**
     * The date when the pay group was created in the 3rd party system
     */
    remoteCreatedAt?: Date | null | undefined;
    /**
     * The created date of the pay group record
     */
    createdAt?: Date | null | undefined;
    /**
     * The last modified date of the pay group record
     */
    modifiedAt?: Date | null | undefined;
    /**
     * Indicates if the pay group was deleted in the remote system
     */
    remoteWasDeleted?: boolean | null | undefined;
};

/** @internal */
export const UnifiedHrisPaygroupOutputFieldMappings$inboundSchema: z.ZodType<
    UnifiedHrisPaygroupOutputFieldMappings,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UnifiedHrisPaygroupOutputFieldMappings$Outbound = {};

/** @internal */
export const UnifiedHrisPaygroupOutputFieldMappings$outboundSchema: z.ZodType<
    UnifiedHrisPaygroupOutputFieldMappings$Outbound,
    z.ZodTypeDef,
    UnifiedHrisPaygroupOutputFieldMappings
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisPaygroupOutputFieldMappings$ {
    /** @deprecated use `UnifiedHrisPaygroupOutputFieldMappings$inboundSchema` instead. */
    export const inboundSchema = UnifiedHrisPaygroupOutputFieldMappings$inboundSchema;
    /** @deprecated use `UnifiedHrisPaygroupOutputFieldMappings$outboundSchema` instead. */
    export const outboundSchema = UnifiedHrisPaygroupOutputFieldMappings$outboundSchema;
    /** @deprecated use `UnifiedHrisPaygroupOutputFieldMappings$Outbound` instead. */
    export type Outbound = UnifiedHrisPaygroupOutputFieldMappings$Outbound;
}

/** @internal */
export const UnifiedHrisPaygroupOutputRemoteData$inboundSchema: z.ZodType<
    UnifiedHrisPaygroupOutputRemoteData,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UnifiedHrisPaygroupOutputRemoteData$Outbound = {};

/** @internal */
export const UnifiedHrisPaygroupOutputRemoteData$outboundSchema: z.ZodType<
    UnifiedHrisPaygroupOutputRemoteData$Outbound,
    z.ZodTypeDef,
    UnifiedHrisPaygroupOutputRemoteData
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisPaygroupOutputRemoteData$ {
    /** @deprecated use `UnifiedHrisPaygroupOutputRemoteData$inboundSchema` instead. */
    export const inboundSchema = UnifiedHrisPaygroupOutputRemoteData$inboundSchema;
    /** @deprecated use `UnifiedHrisPaygroupOutputRemoteData$outboundSchema` instead. */
    export const outboundSchema = UnifiedHrisPaygroupOutputRemoteData$outboundSchema;
    /** @deprecated use `UnifiedHrisPaygroupOutputRemoteData$Outbound` instead. */
    export type Outbound = UnifiedHrisPaygroupOutputRemoteData$Outbound;
}

/** @internal */
export const UnifiedHrisPaygroupOutput$inboundSchema: z.ZodType<
    UnifiedHrisPaygroupOutput,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        pay_group_name: z.nullable(z.string()).optional(),
        field_mappings: z
            .nullable(z.lazy(() => UnifiedHrisPaygroupOutputFieldMappings$inboundSchema))
            .optional(),
        id: z.nullable(z.string()).optional(),
        remote_id: z.nullable(z.string()).optional(),
        remote_data: z
            .nullable(z.lazy(() => UnifiedHrisPaygroupOutputRemoteData$inboundSchema))
            .optional(),
        remote_created_at: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        created_at: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        modified_at: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        remote_was_deleted: z.nullable(z.boolean()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            pay_group_name: "payGroupName",
            field_mappings: "fieldMappings",
            remote_id: "remoteId",
            remote_data: "remoteData",
            remote_created_at: "remoteCreatedAt",
            created_at: "createdAt",
            modified_at: "modifiedAt",
            remote_was_deleted: "remoteWasDeleted",
        });
    });

/** @internal */
export type UnifiedHrisPaygroupOutput$Outbound = {
    pay_group_name?: string | null | undefined;
    field_mappings?: UnifiedHrisPaygroupOutputFieldMappings$Outbound | null | undefined;
    id?: string | null | undefined;
    remote_id?: string | null | undefined;
    remote_data?: UnifiedHrisPaygroupOutputRemoteData$Outbound | null | undefined;
    remote_created_at?: string | null | undefined;
    created_at?: string | null | undefined;
    modified_at?: string | null | undefined;
    remote_was_deleted?: boolean | null | undefined;
};

/** @internal */
export const UnifiedHrisPaygroupOutput$outboundSchema: z.ZodType<
    UnifiedHrisPaygroupOutput$Outbound,
    z.ZodTypeDef,
    UnifiedHrisPaygroupOutput
> = z
    .object({
        payGroupName: z.nullable(z.string()).optional(),
        fieldMappings: z
            .nullable(z.lazy(() => UnifiedHrisPaygroupOutputFieldMappings$outboundSchema))
            .optional(),
        id: z.nullable(z.string()).optional(),
        remoteId: z.nullable(z.string()).optional(),
        remoteData: z
            .nullable(z.lazy(() => UnifiedHrisPaygroupOutputRemoteData$outboundSchema))
            .optional(),
        remoteCreatedAt: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        createdAt: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        modifiedAt: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        remoteWasDeleted: z.nullable(z.boolean()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            payGroupName: "pay_group_name",
            fieldMappings: "field_mappings",
            remoteId: "remote_id",
            remoteData: "remote_data",
            remoteCreatedAt: "remote_created_at",
            createdAt: "created_at",
            modifiedAt: "modified_at",
            remoteWasDeleted: "remote_was_deleted",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisPaygroupOutput$ {
    /** @deprecated use `UnifiedHrisPaygroupOutput$inboundSchema` instead. */
    export const inboundSchema = UnifiedHrisPaygroupOutput$inboundSchema;
    /** @deprecated use `UnifiedHrisPaygroupOutput$outboundSchema` instead. */
    export const outboundSchema = UnifiedHrisPaygroupOutput$outboundSchema;
    /** @deprecated use `UnifiedHrisPaygroupOutput$Outbound` instead. */
    export type Outbound = UnifiedHrisPaygroupOutput$Outbound;
}
