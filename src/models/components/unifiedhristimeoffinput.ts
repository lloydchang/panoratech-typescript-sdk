/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

/**
 * The status of the time off request
 */
export enum UnifiedHrisTimeoffInputStatus {
    Requested = "REQUESTED",
    Approved = "APPROVED",
    Declined = "DECLINED",
    Cancelled = "CANCELLED",
    Deleted = "DELETED",
}

/**
 * The units used for the time off (e.g., Days, Hours)
 */
export enum UnifiedHrisTimeoffInputUnits {
    Hours = "HOURS",
    Days = "DAYS",
}

/**
 * The type of time off request
 */
export enum UnifiedHrisTimeoffInputRequestType {
    Vacation = "VACATION",
    Sick = "SICK",
    Personal = "PERSONAL",
    JuryDuty = "JURY_DUTY",
    Volunteer = "VOLUNTEER",
    Bereavement = "BEREAVEMENT",
}

/**
 * The custom field mappings of the object between the remote 3rd party & Panora
 */
export type UnifiedHrisTimeoffInputFieldMappings = {};

export type UnifiedHrisTimeoffInput = {
    /**
     * The UUID of the employee taking time off
     */
    employee?: string | null | undefined;
    /**
     * The UUID of the approver for the time off request
     */
    approver?: string | null | undefined;
    /**
     * The status of the time off request
     */
    status?: UnifiedHrisTimeoffInputStatus | null | undefined;
    /**
     * A note from the employee about the time off request
     */
    employeeNote?: string | null | undefined;
    /**
     * The units used for the time off (e.g., Days, Hours)
     */
    units?: UnifiedHrisTimeoffInputUnits | null | undefined;
    /**
     * The amount of time off requested
     */
    amount?: number | null | undefined;
    /**
     * The type of time off request
     */
    requestType?: UnifiedHrisTimeoffInputRequestType | null | undefined;
    /**
     * The start time of the time off
     */
    startTime?: Date | null | undefined;
    /**
     * The end time of the time off
     */
    endTime?: Date | null | undefined;
    /**
     * The custom field mappings of the object between the remote 3rd party & Panora
     */
    fieldMappings?: UnifiedHrisTimeoffInputFieldMappings | null | undefined;
};

/** @internal */
export const UnifiedHrisTimeoffInputStatus$inboundSchema: z.ZodNativeEnum<
    typeof UnifiedHrisTimeoffInputStatus
> = z.nativeEnum(UnifiedHrisTimeoffInputStatus);

/** @internal */
export const UnifiedHrisTimeoffInputStatus$outboundSchema: z.ZodNativeEnum<
    typeof UnifiedHrisTimeoffInputStatus
> = UnifiedHrisTimeoffInputStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisTimeoffInputStatus$ {
    /** @deprecated use `UnifiedHrisTimeoffInputStatus$inboundSchema` instead. */
    export const inboundSchema = UnifiedHrisTimeoffInputStatus$inboundSchema;
    /** @deprecated use `UnifiedHrisTimeoffInputStatus$outboundSchema` instead. */
    export const outboundSchema = UnifiedHrisTimeoffInputStatus$outboundSchema;
}

/** @internal */
export const UnifiedHrisTimeoffInputUnits$inboundSchema: z.ZodNativeEnum<
    typeof UnifiedHrisTimeoffInputUnits
> = z.nativeEnum(UnifiedHrisTimeoffInputUnits);

/** @internal */
export const UnifiedHrisTimeoffInputUnits$outboundSchema: z.ZodNativeEnum<
    typeof UnifiedHrisTimeoffInputUnits
> = UnifiedHrisTimeoffInputUnits$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisTimeoffInputUnits$ {
    /** @deprecated use `UnifiedHrisTimeoffInputUnits$inboundSchema` instead. */
    export const inboundSchema = UnifiedHrisTimeoffInputUnits$inboundSchema;
    /** @deprecated use `UnifiedHrisTimeoffInputUnits$outboundSchema` instead. */
    export const outboundSchema = UnifiedHrisTimeoffInputUnits$outboundSchema;
}

/** @internal */
export const UnifiedHrisTimeoffInputRequestType$inboundSchema: z.ZodNativeEnum<
    typeof UnifiedHrisTimeoffInputRequestType
> = z.nativeEnum(UnifiedHrisTimeoffInputRequestType);

/** @internal */
export const UnifiedHrisTimeoffInputRequestType$outboundSchema: z.ZodNativeEnum<
    typeof UnifiedHrisTimeoffInputRequestType
> = UnifiedHrisTimeoffInputRequestType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisTimeoffInputRequestType$ {
    /** @deprecated use `UnifiedHrisTimeoffInputRequestType$inboundSchema` instead. */
    export const inboundSchema = UnifiedHrisTimeoffInputRequestType$inboundSchema;
    /** @deprecated use `UnifiedHrisTimeoffInputRequestType$outboundSchema` instead. */
    export const outboundSchema = UnifiedHrisTimeoffInputRequestType$outboundSchema;
}

/** @internal */
export const UnifiedHrisTimeoffInputFieldMappings$inboundSchema: z.ZodType<
    UnifiedHrisTimeoffInputFieldMappings,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UnifiedHrisTimeoffInputFieldMappings$Outbound = {};

/** @internal */
export const UnifiedHrisTimeoffInputFieldMappings$outboundSchema: z.ZodType<
    UnifiedHrisTimeoffInputFieldMappings$Outbound,
    z.ZodTypeDef,
    UnifiedHrisTimeoffInputFieldMappings
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisTimeoffInputFieldMappings$ {
    /** @deprecated use `UnifiedHrisTimeoffInputFieldMappings$inboundSchema` instead. */
    export const inboundSchema = UnifiedHrisTimeoffInputFieldMappings$inboundSchema;
    /** @deprecated use `UnifiedHrisTimeoffInputFieldMappings$outboundSchema` instead. */
    export const outboundSchema = UnifiedHrisTimeoffInputFieldMappings$outboundSchema;
    /** @deprecated use `UnifiedHrisTimeoffInputFieldMappings$Outbound` instead. */
    export type Outbound = UnifiedHrisTimeoffInputFieldMappings$Outbound;
}

/** @internal */
export const UnifiedHrisTimeoffInput$inboundSchema: z.ZodType<
    UnifiedHrisTimeoffInput,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        employee: z.nullable(z.string()).optional(),
        approver: z.nullable(z.string()).optional(),
        status: z.nullable(UnifiedHrisTimeoffInputStatus$inboundSchema).optional(),
        employee_note: z.nullable(z.string()).optional(),
        units: z.nullable(UnifiedHrisTimeoffInputUnits$inboundSchema).optional(),
        amount: z.nullable(z.number()).optional(),
        request_type: z.nullable(UnifiedHrisTimeoffInputRequestType$inboundSchema).optional(),
        start_time: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        end_time: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        field_mappings: z
            .nullable(z.lazy(() => UnifiedHrisTimeoffInputFieldMappings$inboundSchema))
            .optional(),
    })
    .transform((v) => {
        return remap$(v, {
            employee_note: "employeeNote",
            request_type: "requestType",
            start_time: "startTime",
            end_time: "endTime",
            field_mappings: "fieldMappings",
        });
    });

/** @internal */
export type UnifiedHrisTimeoffInput$Outbound = {
    employee?: string | null | undefined;
    approver?: string | null | undefined;
    status?: string | null | undefined;
    employee_note?: string | null | undefined;
    units?: string | null | undefined;
    amount?: number | null | undefined;
    request_type?: string | null | undefined;
    start_time?: string | null | undefined;
    end_time?: string | null | undefined;
    field_mappings?: UnifiedHrisTimeoffInputFieldMappings$Outbound | null | undefined;
};

/** @internal */
export const UnifiedHrisTimeoffInput$outboundSchema: z.ZodType<
    UnifiedHrisTimeoffInput$Outbound,
    z.ZodTypeDef,
    UnifiedHrisTimeoffInput
> = z
    .object({
        employee: z.nullable(z.string()).optional(),
        approver: z.nullable(z.string()).optional(),
        status: z.nullable(UnifiedHrisTimeoffInputStatus$outboundSchema).optional(),
        employeeNote: z.nullable(z.string()).optional(),
        units: z.nullable(UnifiedHrisTimeoffInputUnits$outboundSchema).optional(),
        amount: z.nullable(z.number()).optional(),
        requestType: z.nullable(UnifiedHrisTimeoffInputRequestType$outboundSchema).optional(),
        startTime: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        endTime: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        fieldMappings: z
            .nullable(z.lazy(() => UnifiedHrisTimeoffInputFieldMappings$outboundSchema))
            .optional(),
    })
    .transform((v) => {
        return remap$(v, {
            employeeNote: "employee_note",
            requestType: "request_type",
            startTime: "start_time",
            endTime: "end_time",
            fieldMappings: "field_mappings",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisTimeoffInput$ {
    /** @deprecated use `UnifiedHrisTimeoffInput$inboundSchema` instead. */
    export const inboundSchema = UnifiedHrisTimeoffInput$inboundSchema;
    /** @deprecated use `UnifiedHrisTimeoffInput$outboundSchema` instead. */
    export const outboundSchema = UnifiedHrisTimeoffInput$outboundSchema;
    /** @deprecated use `UnifiedHrisTimeoffInput$Outbound` instead. */
    export type Outbound = UnifiedHrisTimeoffInput$Outbound;
}
