/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

/**
 * The custom field mappings of the object between the remote 3rd party & Panora
 */
export type UnifiedHrisBenefitOutputFieldMappings = {};

/**
 * The remote data of the benefit in the context of the 3rd Party
 */
export type UnifiedHrisBenefitOutputRemoteData = {};

export type UnifiedHrisBenefitOutput = {
    /**
     * The name of the benefit provider
     */
    providerName?: string | null | undefined;
    /**
     * The UUID of the associated employee
     */
    employeeId?: string | null | undefined;
    /**
     * The employee contribution amount
     */
    employeeContribution?: number | null | undefined;
    /**
     * The company contribution amount
     */
    companyContribution?: number | null | undefined;
    /**
     * The start date of the benefit
     */
    startDate?: Date | null | undefined;
    /**
     * The end date of the benefit
     */
    endDate?: Date | null | undefined;
    /**
     * The UUID of the associated employer benefit
     */
    employerBenefitId?: string | null | undefined;
    /**
     * The custom field mappings of the object between the remote 3rd party & Panora
     */
    fieldMappings?: UnifiedHrisBenefitOutputFieldMappings | null | undefined;
    /**
     * The UUID of the benefit record
     */
    id?: string | null | undefined;
    /**
     * The remote ID of the benefit in the context of the 3rd Party
     */
    remoteId?: string | null | undefined;
    /**
     * The remote data of the benefit in the context of the 3rd Party
     */
    remoteData?: UnifiedHrisBenefitOutputRemoteData | null | undefined;
    /**
     * The date when the benefit was created in the 3rd party system
     */
    remoteCreatedAt?: Date | null | undefined;
    /**
     * The created date of the benefit record
     */
    createdAt?: Date | null | undefined;
    /**
     * The last modified date of the benefit record
     */
    modifiedAt?: Date | null | undefined;
    /**
     * Indicates if the benefit was deleted in the remote system
     */
    remoteWasDeleted?: boolean | null | undefined;
};

/** @internal */
export const UnifiedHrisBenefitOutputFieldMappings$inboundSchema: z.ZodType<
    UnifiedHrisBenefitOutputFieldMappings,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UnifiedHrisBenefitOutputFieldMappings$Outbound = {};

/** @internal */
export const UnifiedHrisBenefitOutputFieldMappings$outboundSchema: z.ZodType<
    UnifiedHrisBenefitOutputFieldMappings$Outbound,
    z.ZodTypeDef,
    UnifiedHrisBenefitOutputFieldMappings
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisBenefitOutputFieldMappings$ {
    /** @deprecated use `UnifiedHrisBenefitOutputFieldMappings$inboundSchema` instead. */
    export const inboundSchema = UnifiedHrisBenefitOutputFieldMappings$inboundSchema;
    /** @deprecated use `UnifiedHrisBenefitOutputFieldMappings$outboundSchema` instead. */
    export const outboundSchema = UnifiedHrisBenefitOutputFieldMappings$outboundSchema;
    /** @deprecated use `UnifiedHrisBenefitOutputFieldMappings$Outbound` instead. */
    export type Outbound = UnifiedHrisBenefitOutputFieldMappings$Outbound;
}

/** @internal */
export const UnifiedHrisBenefitOutputRemoteData$inboundSchema: z.ZodType<
    UnifiedHrisBenefitOutputRemoteData,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UnifiedHrisBenefitOutputRemoteData$Outbound = {};

/** @internal */
export const UnifiedHrisBenefitOutputRemoteData$outboundSchema: z.ZodType<
    UnifiedHrisBenefitOutputRemoteData$Outbound,
    z.ZodTypeDef,
    UnifiedHrisBenefitOutputRemoteData
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisBenefitOutputRemoteData$ {
    /** @deprecated use `UnifiedHrisBenefitOutputRemoteData$inboundSchema` instead. */
    export const inboundSchema = UnifiedHrisBenefitOutputRemoteData$inboundSchema;
    /** @deprecated use `UnifiedHrisBenefitOutputRemoteData$outboundSchema` instead. */
    export const outboundSchema = UnifiedHrisBenefitOutputRemoteData$outboundSchema;
    /** @deprecated use `UnifiedHrisBenefitOutputRemoteData$Outbound` instead. */
    export type Outbound = UnifiedHrisBenefitOutputRemoteData$Outbound;
}

/** @internal */
export const UnifiedHrisBenefitOutput$inboundSchema: z.ZodType<
    UnifiedHrisBenefitOutput,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        provider_name: z.nullable(z.string()).optional(),
        employee_id: z.nullable(z.string()).optional(),
        employee_contribution: z.nullable(z.number()).optional(),
        company_contribution: z.nullable(z.number()).optional(),
        start_date: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        end_date: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        employer_benefit_id: z.nullable(z.string()).optional(),
        field_mappings: z
            .nullable(z.lazy(() => UnifiedHrisBenefitOutputFieldMappings$inboundSchema))
            .optional(),
        id: z.nullable(z.string()).optional(),
        remote_id: z.nullable(z.string()).optional(),
        remote_data: z
            .nullable(z.lazy(() => UnifiedHrisBenefitOutputRemoteData$inboundSchema))
            .optional(),
        remote_created_at: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        created_at: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        modified_at: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        remote_was_deleted: z.nullable(z.boolean()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            provider_name: "providerName",
            employee_id: "employeeId",
            employee_contribution: "employeeContribution",
            company_contribution: "companyContribution",
            start_date: "startDate",
            end_date: "endDate",
            employer_benefit_id: "employerBenefitId",
            field_mappings: "fieldMappings",
            remote_id: "remoteId",
            remote_data: "remoteData",
            remote_created_at: "remoteCreatedAt",
            created_at: "createdAt",
            modified_at: "modifiedAt",
            remote_was_deleted: "remoteWasDeleted",
        });
    });

/** @internal */
export type UnifiedHrisBenefitOutput$Outbound = {
    provider_name?: string | null | undefined;
    employee_id?: string | null | undefined;
    employee_contribution?: number | null | undefined;
    company_contribution?: number | null | undefined;
    start_date?: string | null | undefined;
    end_date?: string | null | undefined;
    employer_benefit_id?: string | null | undefined;
    field_mappings?: UnifiedHrisBenefitOutputFieldMappings$Outbound | null | undefined;
    id?: string | null | undefined;
    remote_id?: string | null | undefined;
    remote_data?: UnifiedHrisBenefitOutputRemoteData$Outbound | null | undefined;
    remote_created_at?: string | null | undefined;
    created_at?: string | null | undefined;
    modified_at?: string | null | undefined;
    remote_was_deleted?: boolean | null | undefined;
};

/** @internal */
export const UnifiedHrisBenefitOutput$outboundSchema: z.ZodType<
    UnifiedHrisBenefitOutput$Outbound,
    z.ZodTypeDef,
    UnifiedHrisBenefitOutput
> = z
    .object({
        providerName: z.nullable(z.string()).optional(),
        employeeId: z.nullable(z.string()).optional(),
        employeeContribution: z.nullable(z.number()).optional(),
        companyContribution: z.nullable(z.number()).optional(),
        startDate: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        endDate: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        employerBenefitId: z.nullable(z.string()).optional(),
        fieldMappings: z
            .nullable(z.lazy(() => UnifiedHrisBenefitOutputFieldMappings$outboundSchema))
            .optional(),
        id: z.nullable(z.string()).optional(),
        remoteId: z.nullable(z.string()).optional(),
        remoteData: z
            .nullable(z.lazy(() => UnifiedHrisBenefitOutputRemoteData$outboundSchema))
            .optional(),
        remoteCreatedAt: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        createdAt: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        modifiedAt: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        remoteWasDeleted: z.nullable(z.boolean()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            providerName: "provider_name",
            employeeId: "employee_id",
            employeeContribution: "employee_contribution",
            companyContribution: "company_contribution",
            startDate: "start_date",
            endDate: "end_date",
            employerBenefitId: "employer_benefit_id",
            fieldMappings: "field_mappings",
            remoteId: "remote_id",
            remoteData: "remote_data",
            remoteCreatedAt: "remote_created_at",
            createdAt: "created_at",
            modifiedAt: "modified_at",
            remoteWasDeleted: "remote_was_deleted",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisBenefitOutput$ {
    /** @deprecated use `UnifiedHrisBenefitOutput$inboundSchema` instead. */
    export const inboundSchema = UnifiedHrisBenefitOutput$inboundSchema;
    /** @deprecated use `UnifiedHrisBenefitOutput$outboundSchema` instead. */
    export const outboundSchema = UnifiedHrisBenefitOutput$outboundSchema;
    /** @deprecated use `UnifiedHrisBenefitOutput$Outbound` instead. */
    export type Outbound = UnifiedHrisBenefitOutput$Outbound;
}
