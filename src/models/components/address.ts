/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type Address = {
    /**
     * The street
     */
    street1: string;
    /**
     * More information about the street
     */
    street2: string;
    /**
     * The city
     */
    city: string;
    /**
     * The state
     */
    state: string;
    /**
     * The postal code
     */
    postalCode: string;
    /**
     * The country
     */
    country: string;
    /**
     * The address type. Authorized values are either PERSONAL or WORK.
     */
    addressType: string;
    /**
     * The owner type of the address
     */
    ownerType: string;
};

/** @internal */
export namespace Address$ {
    export const inboundSchema: z.ZodType<Address, z.ZodTypeDef, unknown> = z
        .object({
            street_1: z.string(),
            street_2: z.string(),
            city: z.string(),
            state: z.string(),
            postal_code: z.string(),
            country: z.string(),
            address_type: z.string(),
            owner_type: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                street_1: "street1",
                street_2: "street2",
                postal_code: "postalCode",
                address_type: "addressType",
                owner_type: "ownerType",
            });
        });

    export type Outbound = {
        street_1: string;
        street_2: string;
        city: string;
        state: string;
        postal_code: string;
        country: string;
        address_type: string;
        owner_type: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Address> = z
        .object({
            street1: z.string(),
            street2: z.string(),
            city: z.string(),
            state: z.string(),
            postalCode: z.string(),
            country: z.string(),
            addressType: z.string(),
            ownerType: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                street1: "street_1",
                street2: "street_2",
                postalCode: "postal_code",
                addressType: "address_type",
                ownerType: "owner_type",
            });
        });
}
