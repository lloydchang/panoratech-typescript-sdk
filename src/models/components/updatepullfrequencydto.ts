/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdatePullFrequencyDto = {
  /**
   * Frequency in seconds
   */
  crm: number;
  /**
   * Frequency in seconds
   */
  accounting: number;
  /**
   * Frequency in seconds
   */
  filestorage: number;
  /**
   * Frequency in seconds
   */
  ecommerce: number;
  /**
   * Frequency in seconds
   */
  ticketing: number;
};

/** @internal */
export const UpdatePullFrequencyDto$inboundSchema: z.ZodType<
  UpdatePullFrequencyDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  crm: z.number(),
  accounting: z.number(),
  filestorage: z.number(),
  ecommerce: z.number(),
  ticketing: z.number(),
});

/** @internal */
export type UpdatePullFrequencyDto$Outbound = {
  crm: number;
  accounting: number;
  filestorage: number;
  ecommerce: number;
  ticketing: number;
};

/** @internal */
export const UpdatePullFrequencyDto$outboundSchema: z.ZodType<
  UpdatePullFrequencyDto$Outbound,
  z.ZodTypeDef,
  UpdatePullFrequencyDto
> = z.object({
  crm: z.number(),
  accounting: z.number(),
  filestorage: z.number(),
  ecommerce: z.number(),
  ticketing: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePullFrequencyDto$ {
  /** @deprecated use `UpdatePullFrequencyDto$inboundSchema` instead. */
  export const inboundSchema = UpdatePullFrequencyDto$inboundSchema;
  /** @deprecated use `UpdatePullFrequencyDto$outboundSchema` instead. */
  export const outboundSchema = UpdatePullFrequencyDto$outboundSchema;
  /** @deprecated use `UpdatePullFrequencyDto$Outbound` instead. */
  export type Outbound = UpdatePullFrequencyDto$Outbound;
}

export function updatePullFrequencyDtoToJSON(
  updatePullFrequencyDto: UpdatePullFrequencyDto,
): string {
  return JSON.stringify(
    UpdatePullFrequencyDto$outboundSchema.parse(updatePullFrequencyDto),
  );
}

export function updatePullFrequencyDtoFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePullFrequencyDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePullFrequencyDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePullFrequencyDto' from JSON`,
  );
}
