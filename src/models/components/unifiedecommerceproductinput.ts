/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type UnifiedEcommerceProductInputVariants = {};

/**
 * The custom field mappings of the object between the remote 3rd party & Panora
 */
export type UnifiedEcommerceProductInputFieldMappings = {};

export type UnifiedEcommerceProductInput = {
    /**
     * The URL of the product
     */
    productUrl?: string | undefined;
    /**
     * The type of the product
     */
    productType?: string | undefined;
    /**
     * The status of the product. Either ACTIVE, DRAFT OR ARCHIVED.
     */
    productStatus?: string | undefined;
    /**
     * The URLs of the product images
     */
    imagesUrls?: Array<string> | undefined;
    /**
     * The description of the product
     */
    description?: string | undefined;
    /**
     * The vendor of the product
     */
    vendor?: string | undefined;
    /**
     * The variants of the product
     */
    variants?: Array<UnifiedEcommerceProductInputVariants> | undefined;
    /**
     * The tags associated with the product
     */
    tags?: Array<string> | undefined;
    /**
     * The custom field mappings of the object between the remote 3rd party & Panora
     */
    fieldMappings?: UnifiedEcommerceProductInputFieldMappings | undefined;
};

/** @internal */
export const UnifiedEcommerceProductInputVariants$inboundSchema: z.ZodType<
    UnifiedEcommerceProductInputVariants,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UnifiedEcommerceProductInputVariants$Outbound = {};

/** @internal */
export const UnifiedEcommerceProductInputVariants$outboundSchema: z.ZodType<
    UnifiedEcommerceProductInputVariants$Outbound,
    z.ZodTypeDef,
    UnifiedEcommerceProductInputVariants
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceProductInputVariants$ {
    /** @deprecated use `UnifiedEcommerceProductInputVariants$inboundSchema` instead. */
    export const inboundSchema = UnifiedEcommerceProductInputVariants$inboundSchema;
    /** @deprecated use `UnifiedEcommerceProductInputVariants$outboundSchema` instead. */
    export const outboundSchema = UnifiedEcommerceProductInputVariants$outboundSchema;
    /** @deprecated use `UnifiedEcommerceProductInputVariants$Outbound` instead. */
    export type Outbound = UnifiedEcommerceProductInputVariants$Outbound;
}

/** @internal */
export const UnifiedEcommerceProductInputFieldMappings$inboundSchema: z.ZodType<
    UnifiedEcommerceProductInputFieldMappings,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UnifiedEcommerceProductInputFieldMappings$Outbound = {};

/** @internal */
export const UnifiedEcommerceProductInputFieldMappings$outboundSchema: z.ZodType<
    UnifiedEcommerceProductInputFieldMappings$Outbound,
    z.ZodTypeDef,
    UnifiedEcommerceProductInputFieldMappings
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceProductInputFieldMappings$ {
    /** @deprecated use `UnifiedEcommerceProductInputFieldMappings$inboundSchema` instead. */
    export const inboundSchema = UnifiedEcommerceProductInputFieldMappings$inboundSchema;
    /** @deprecated use `UnifiedEcommerceProductInputFieldMappings$outboundSchema` instead. */
    export const outboundSchema = UnifiedEcommerceProductInputFieldMappings$outboundSchema;
    /** @deprecated use `UnifiedEcommerceProductInputFieldMappings$Outbound` instead. */
    export type Outbound = UnifiedEcommerceProductInputFieldMappings$Outbound;
}

/** @internal */
export const UnifiedEcommerceProductInput$inboundSchema: z.ZodType<
    UnifiedEcommerceProductInput,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        product_url: z.string().optional(),
        product_type: z.string().optional(),
        product_status: z.string().optional(),
        images_urls: z.array(z.string()).optional(),
        description: z.string().optional(),
        vendor: z.string().optional(),
        variants: z
            .array(z.lazy(() => UnifiedEcommerceProductInputVariants$inboundSchema))
            .optional(),
        tags: z.array(z.string()).optional(),
        field_mappings: z
            .lazy(() => UnifiedEcommerceProductInputFieldMappings$inboundSchema)
            .optional(),
    })
    .transform((v) => {
        return remap$(v, {
            product_url: "productUrl",
            product_type: "productType",
            product_status: "productStatus",
            images_urls: "imagesUrls",
            field_mappings: "fieldMappings",
        });
    });

/** @internal */
export type UnifiedEcommerceProductInput$Outbound = {
    product_url?: string | undefined;
    product_type?: string | undefined;
    product_status?: string | undefined;
    images_urls?: Array<string> | undefined;
    description?: string | undefined;
    vendor?: string | undefined;
    variants?: Array<UnifiedEcommerceProductInputVariants$Outbound> | undefined;
    tags?: Array<string> | undefined;
    field_mappings?: UnifiedEcommerceProductInputFieldMappings$Outbound | undefined;
};

/** @internal */
export const UnifiedEcommerceProductInput$outboundSchema: z.ZodType<
    UnifiedEcommerceProductInput$Outbound,
    z.ZodTypeDef,
    UnifiedEcommerceProductInput
> = z
    .object({
        productUrl: z.string().optional(),
        productType: z.string().optional(),
        productStatus: z.string().optional(),
        imagesUrls: z.array(z.string()).optional(),
        description: z.string().optional(),
        vendor: z.string().optional(),
        variants: z
            .array(z.lazy(() => UnifiedEcommerceProductInputVariants$outboundSchema))
            .optional(),
        tags: z.array(z.string()).optional(),
        fieldMappings: z
            .lazy(() => UnifiedEcommerceProductInputFieldMappings$outboundSchema)
            .optional(),
    })
    .transform((v) => {
        return remap$(v, {
            productUrl: "product_url",
            productType: "product_type",
            productStatus: "product_status",
            imagesUrls: "images_urls",
            fieldMappings: "field_mappings",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceProductInput$ {
    /** @deprecated use `UnifiedEcommerceProductInput$inboundSchema` instead. */
    export const inboundSchema = UnifiedEcommerceProductInput$inboundSchema;
    /** @deprecated use `UnifiedEcommerceProductInput$outboundSchema` instead. */
    export const outboundSchema = UnifiedEcommerceProductInput$outboundSchema;
    /** @deprecated use `UnifiedEcommerceProductInput$Outbound` instead. */
    export type Outbound = UnifiedEcommerceProductInput$Outbound;
}
