/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import {
    LineItem,
    LineItem$inboundSchema,
    LineItem$Outbound,
    LineItem$outboundSchema,
} from "./lineitem.js";
import * as z from "zod";

/**
 * The status of the order
 */
export enum UnifiedEcommerceOrderInputOrderStatus {
    Pending = "PENDING",
    Unshipped = "UNSHIPPED",
    Shipped = "SHIPPED",
    Canceled = "CANCELED",
}

/**
 * The payment status of the order
 */
export enum UnifiedEcommerceOrderInputPaymentStatus {
    Success = "SUCCESS",
    Fail = "FAIL",
}

/**
 * The currency of the order. Authorized value must be of type CurrencyCode (ISO 4217)
 */
export enum UnifiedEcommerceOrderInputCurrency {
    Aed = "AED",
    Afn = "AFN",
    All = "ALL",
    Amd = "AMD",
    Ang = "ANG",
    Aoa = "AOA",
    Ars = "ARS",
    Aud = "AUD",
    Awg = "AWG",
    Azn = "AZN",
    Bam = "BAM",
    Bbd = "BBD",
    Bdt = "BDT",
    Bgn = "BGN",
    Bhd = "BHD",
    Bif = "BIF",
    Bmd = "BMD",
    Bnd = "BND",
    Bob = "BOB",
    Brl = "BRL",
    Bsd = "BSD",
    Btn = "BTN",
    Bwp = "BWP",
    Byn = "BYN",
    Bzd = "BZD",
    Cad = "CAD",
    Cdf = "CDF",
    Chf = "CHF",
    Clp = "CLP",
    Cny = "CNY",
    Cop = "COP",
    Crc = "CRC",
    Cup = "CUP",
    Cve = "CVE",
    Czk = "CZK",
    Djf = "DJF",
    Dkk = "DKK",
    Dop = "DOP",
    Dzd = "DZD",
    Egp = "EGP",
    Ern = "ERN",
    Etb = "ETB",
    Eur = "EUR",
    Fjd = "FJD",
    Fkp = "FKP",
    Fok = "FOK",
    Gbp = "GBP",
    Gel = "GEL",
    Ggp = "GGP",
    Ghs = "GHS",
    Gip = "GIP",
    Gmd = "GMD",
    Gnf = "GNF",
    Gtq = "GTQ",
    Gyd = "GYD",
    Hkd = "HKD",
    Hnl = "HNL",
    Hrk = "HRK",
    Htg = "HTG",
    Huf = "HUF",
    Idr = "IDR",
    Ils = "ILS",
    Imp = "IMP",
    Inr = "INR",
    Iqd = "IQD",
    Irr = "IRR",
    Isk = "ISK",
    Jep = "JEP",
    Jmd = "JMD",
    Jod = "JOD",
    Jpy = "JPY",
    Kes = "KES",
    Kgs = "KGS",
    Khr = "KHR",
    Kid = "KID",
    Kmf = "KMF",
    Krw = "KRW",
    Kwd = "KWD",
    Kyd = "KYD",
    Kzt = "KZT",
    Lak = "LAK",
    Lbp = "LBP",
    Lkr = "LKR",
    Lrd = "LRD",
    Lsl = "LSL",
    Lyd = "LYD",
    Mad = "MAD",
    Mdl = "MDL",
    Mga = "MGA",
    Mkd = "MKD",
    Mmk = "MMK",
    Mnt = "MNT",
    Mop = "MOP",
    Mru = "MRU",
    Mur = "MUR",
    Mvr = "MVR",
    Mwk = "MWK",
    Mxn = "MXN",
    Myr = "MYR",
    Mzn = "MZN",
    Nad = "NAD",
    Ngn = "NGN",
    Nio = "NIO",
    Nok = "NOK",
    Npr = "NPR",
    Nzd = "NZD",
    Omr = "OMR",
    Pab = "PAB",
    Pen = "PEN",
    Pgk = "PGK",
    Php = "PHP",
    Pkr = "PKR",
    Pln = "PLN",
    Pyg = "PYG",
    Qar = "QAR",
    Ron = "RON",
    Rsd = "RSD",
    Rub = "RUB",
    Rwf = "RWF",
    Sar = "SAR",
    Sbd = "SBD",
    Scr = "SCR",
    Sdg = "SDG",
    Sek = "SEK",
    Sgd = "SGD",
    Shp = "SHP",
    Sle = "SLE",
    Sll = "SLL",
    Sos = "SOS",
    Srd = "SRD",
    Ssp = "SSP",
    Stn = "STN",
    Syp = "SYP",
    Szl = "SZL",
    Thb = "THB",
    Tjs = "TJS",
    Tmt = "TMT",
    Tnd = "TND",
    Top = "TOP",
    Try = "TRY",
    Ttd = "TTD",
    Tvd = "TVD",
    Twd = "TWD",
    Tzs = "TZS",
    Uah = "UAH",
    Ugx = "UGX",
    Usd = "USD",
    Uyu = "UYU",
    Uzs = "UZS",
    Ves = "VES",
    Vnd = "VND",
    Vuv = "VUV",
    Wst = "WST",
    Xaf = "XAF",
    Xcd = "XCD",
    Xdr = "XDR",
    Xof = "XOF",
    Xpf = "XPF",
    Yer = "YER",
    Zar = "ZAR",
    Zmw = "ZMW",
    Zwl = "ZWL",
}

/**
 * The fulfillment status of the order
 */
export enum UnifiedEcommerceOrderInputFulfillmentStatus {
    Pending = "PENDING",
    Fulfilled = "FULFILLED",
    Canceled = "CANCELED",
}

/**
 * The custom field mappings of the object between the remote 3rd party & Panora
 */
export type UnifiedEcommerceOrderInputFieldMappings = {};

export type UnifiedEcommerceOrderInput = {
    /**
     * The status of the order
     */
    orderStatus?: UnifiedEcommerceOrderInputOrderStatus | null | undefined;
    /**
     * The number of the order
     */
    orderNumber?: string | null | undefined;
    /**
     * The payment status of the order
     */
    paymentStatus?: UnifiedEcommerceOrderInputPaymentStatus | null | undefined;
    /**
     * The currency of the order. Authorized value must be of type CurrencyCode (ISO 4217)
     */
    currency?: UnifiedEcommerceOrderInputCurrency | null | undefined;
    /**
     * The total price of the order
     */
    totalPrice?: number | null | undefined;
    /**
     * The total discount on the order
     */
    totalDiscount?: number | null | undefined;
    /**
     * The total shipping cost of the order
     */
    totalShipping?: number | null | undefined;
    /**
     * The total tax on the order
     */
    totalTax?: number | null | undefined;
    /**
     * The fulfillment status of the order
     */
    fulfillmentStatus?: UnifiedEcommerceOrderInputFulfillmentStatus | null | undefined;
    /**
     * The UUID of the customer associated with the order
     */
    customerId?: string | null | undefined;
    /**
     * The items in the order
     */
    items?: Array<LineItem> | null | undefined;
    /**
     * The custom field mappings of the object between the remote 3rd party & Panora
     */
    fieldMappings?: UnifiedEcommerceOrderInputFieldMappings | null | undefined;
};

/** @internal */
export const UnifiedEcommerceOrderInputOrderStatus$inboundSchema: z.ZodNativeEnum<
    typeof UnifiedEcommerceOrderInputOrderStatus
> = z.nativeEnum(UnifiedEcommerceOrderInputOrderStatus);

/** @internal */
export const UnifiedEcommerceOrderInputOrderStatus$outboundSchema: z.ZodNativeEnum<
    typeof UnifiedEcommerceOrderInputOrderStatus
> = UnifiedEcommerceOrderInputOrderStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceOrderInputOrderStatus$ {
    /** @deprecated use `UnifiedEcommerceOrderInputOrderStatus$inboundSchema` instead. */
    export const inboundSchema = UnifiedEcommerceOrderInputOrderStatus$inboundSchema;
    /** @deprecated use `UnifiedEcommerceOrderInputOrderStatus$outboundSchema` instead. */
    export const outboundSchema = UnifiedEcommerceOrderInputOrderStatus$outboundSchema;
}

/** @internal */
export const UnifiedEcommerceOrderInputPaymentStatus$inboundSchema: z.ZodNativeEnum<
    typeof UnifiedEcommerceOrderInputPaymentStatus
> = z.nativeEnum(UnifiedEcommerceOrderInputPaymentStatus);

/** @internal */
export const UnifiedEcommerceOrderInputPaymentStatus$outboundSchema: z.ZodNativeEnum<
    typeof UnifiedEcommerceOrderInputPaymentStatus
> = UnifiedEcommerceOrderInputPaymentStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceOrderInputPaymentStatus$ {
    /** @deprecated use `UnifiedEcommerceOrderInputPaymentStatus$inboundSchema` instead. */
    export const inboundSchema = UnifiedEcommerceOrderInputPaymentStatus$inboundSchema;
    /** @deprecated use `UnifiedEcommerceOrderInputPaymentStatus$outboundSchema` instead. */
    export const outboundSchema = UnifiedEcommerceOrderInputPaymentStatus$outboundSchema;
}

/** @internal */
export const UnifiedEcommerceOrderInputCurrency$inboundSchema: z.ZodNativeEnum<
    typeof UnifiedEcommerceOrderInputCurrency
> = z.nativeEnum(UnifiedEcommerceOrderInputCurrency);

/** @internal */
export const UnifiedEcommerceOrderInputCurrency$outboundSchema: z.ZodNativeEnum<
    typeof UnifiedEcommerceOrderInputCurrency
> = UnifiedEcommerceOrderInputCurrency$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceOrderInputCurrency$ {
    /** @deprecated use `UnifiedEcommerceOrderInputCurrency$inboundSchema` instead. */
    export const inboundSchema = UnifiedEcommerceOrderInputCurrency$inboundSchema;
    /** @deprecated use `UnifiedEcommerceOrderInputCurrency$outboundSchema` instead. */
    export const outboundSchema = UnifiedEcommerceOrderInputCurrency$outboundSchema;
}

/** @internal */
export const UnifiedEcommerceOrderInputFulfillmentStatus$inboundSchema: z.ZodNativeEnum<
    typeof UnifiedEcommerceOrderInputFulfillmentStatus
> = z.nativeEnum(UnifiedEcommerceOrderInputFulfillmentStatus);

/** @internal */
export const UnifiedEcommerceOrderInputFulfillmentStatus$outboundSchema: z.ZodNativeEnum<
    typeof UnifiedEcommerceOrderInputFulfillmentStatus
> = UnifiedEcommerceOrderInputFulfillmentStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceOrderInputFulfillmentStatus$ {
    /** @deprecated use `UnifiedEcommerceOrderInputFulfillmentStatus$inboundSchema` instead. */
    export const inboundSchema = UnifiedEcommerceOrderInputFulfillmentStatus$inboundSchema;
    /** @deprecated use `UnifiedEcommerceOrderInputFulfillmentStatus$outboundSchema` instead. */
    export const outboundSchema = UnifiedEcommerceOrderInputFulfillmentStatus$outboundSchema;
}

/** @internal */
export const UnifiedEcommerceOrderInputFieldMappings$inboundSchema: z.ZodType<
    UnifiedEcommerceOrderInputFieldMappings,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UnifiedEcommerceOrderInputFieldMappings$Outbound = {};

/** @internal */
export const UnifiedEcommerceOrderInputFieldMappings$outboundSchema: z.ZodType<
    UnifiedEcommerceOrderInputFieldMappings$Outbound,
    z.ZodTypeDef,
    UnifiedEcommerceOrderInputFieldMappings
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceOrderInputFieldMappings$ {
    /** @deprecated use `UnifiedEcommerceOrderInputFieldMappings$inboundSchema` instead. */
    export const inboundSchema = UnifiedEcommerceOrderInputFieldMappings$inboundSchema;
    /** @deprecated use `UnifiedEcommerceOrderInputFieldMappings$outboundSchema` instead. */
    export const outboundSchema = UnifiedEcommerceOrderInputFieldMappings$outboundSchema;
    /** @deprecated use `UnifiedEcommerceOrderInputFieldMappings$Outbound` instead. */
    export type Outbound = UnifiedEcommerceOrderInputFieldMappings$Outbound;
}

/** @internal */
export const UnifiedEcommerceOrderInput$inboundSchema: z.ZodType<
    UnifiedEcommerceOrderInput,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        order_status: z.nullable(UnifiedEcommerceOrderInputOrderStatus$inboundSchema).optional(),
        order_number: z.nullable(z.string()).optional(),
        payment_status: z
            .nullable(UnifiedEcommerceOrderInputPaymentStatus$inboundSchema)
            .optional(),
        currency: z.nullable(UnifiedEcommerceOrderInputCurrency$inboundSchema).optional(),
        total_price: z.nullable(z.number()).optional(),
        total_discount: z.nullable(z.number()).optional(),
        total_shipping: z.nullable(z.number()).optional(),
        total_tax: z.nullable(z.number()).optional(),
        fulfillment_status: z
            .nullable(UnifiedEcommerceOrderInputFulfillmentStatus$inboundSchema)
            .optional(),
        customer_id: z.nullable(z.string()).optional(),
        items: z.nullable(z.array(LineItem$inboundSchema)).optional(),
        field_mappings: z
            .nullable(z.lazy(() => UnifiedEcommerceOrderInputFieldMappings$inboundSchema))
            .optional(),
    })
    .transform((v) => {
        return remap$(v, {
            order_status: "orderStatus",
            order_number: "orderNumber",
            payment_status: "paymentStatus",
            total_price: "totalPrice",
            total_discount: "totalDiscount",
            total_shipping: "totalShipping",
            total_tax: "totalTax",
            fulfillment_status: "fulfillmentStatus",
            customer_id: "customerId",
            field_mappings: "fieldMappings",
        });
    });

/** @internal */
export type UnifiedEcommerceOrderInput$Outbound = {
    order_status?: string | null | undefined;
    order_number?: string | null | undefined;
    payment_status?: string | null | undefined;
    currency?: string | null | undefined;
    total_price?: number | null | undefined;
    total_discount?: number | null | undefined;
    total_shipping?: number | null | undefined;
    total_tax?: number | null | undefined;
    fulfillment_status?: string | null | undefined;
    customer_id?: string | null | undefined;
    items?: Array<LineItem$Outbound> | null | undefined;
    field_mappings?: UnifiedEcommerceOrderInputFieldMappings$Outbound | null | undefined;
};

/** @internal */
export const UnifiedEcommerceOrderInput$outboundSchema: z.ZodType<
    UnifiedEcommerceOrderInput$Outbound,
    z.ZodTypeDef,
    UnifiedEcommerceOrderInput
> = z
    .object({
        orderStatus: z.nullable(UnifiedEcommerceOrderInputOrderStatus$outboundSchema).optional(),
        orderNumber: z.nullable(z.string()).optional(),
        paymentStatus: z
            .nullable(UnifiedEcommerceOrderInputPaymentStatus$outboundSchema)
            .optional(),
        currency: z.nullable(UnifiedEcommerceOrderInputCurrency$outboundSchema).optional(),
        totalPrice: z.nullable(z.number()).optional(),
        totalDiscount: z.nullable(z.number()).optional(),
        totalShipping: z.nullable(z.number()).optional(),
        totalTax: z.nullable(z.number()).optional(),
        fulfillmentStatus: z
            .nullable(UnifiedEcommerceOrderInputFulfillmentStatus$outboundSchema)
            .optional(),
        customerId: z.nullable(z.string()).optional(),
        items: z.nullable(z.array(LineItem$outboundSchema)).optional(),
        fieldMappings: z
            .nullable(z.lazy(() => UnifiedEcommerceOrderInputFieldMappings$outboundSchema))
            .optional(),
    })
    .transform((v) => {
        return remap$(v, {
            orderStatus: "order_status",
            orderNumber: "order_number",
            paymentStatus: "payment_status",
            totalPrice: "total_price",
            totalDiscount: "total_discount",
            totalShipping: "total_shipping",
            totalTax: "total_tax",
            fulfillmentStatus: "fulfillment_status",
            customerId: "customer_id",
            fieldMappings: "field_mappings",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceOrderInput$ {
    /** @deprecated use `UnifiedEcommerceOrderInput$inboundSchema` instead. */
    export const inboundSchema = UnifiedEcommerceOrderInput$inboundSchema;
    /** @deprecated use `UnifiedEcommerceOrderInput$outboundSchema` instead. */
    export const outboundSchema = UnifiedEcommerceOrderInput$outboundSchema;
    /** @deprecated use `UnifiedEcommerceOrderInput$Outbound` instead. */
    export type Outbound = UnifiedEcommerceOrderInput$Outbound;
}
