/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  LineItem,
  LineItem$inboundSchema,
  LineItem$Outbound,
  LineItem$outboundSchema,
} from "./lineitem.js";

/**
 * The custom field mappings of the object between the remote 3rd party & Panora
 */
export type UnifiedAccountingPurchaseorderOutputFieldMappings = {};

/**
 * The remote data of the purchase order in the context of the 3rd Party
 */
export type UnifiedAccountingPurchaseorderOutputRemoteData = {};

export type UnifiedAccountingPurchaseorderOutput = {
  /**
   * The status of the purchase order
   */
  status?: string | null | undefined;
  /**
   * The issue date of the purchase order
   */
  issueDate?: Date | null | undefined;
  /**
   * The purchase order number
   */
  purchaseOrderNumber?: string | null | undefined;
  /**
   * The delivery date for the purchase order
   */
  deliveryDate?: Date | null | undefined;
  /**
   * The UUID of the delivery address
   */
  deliveryAddress?: string | null | undefined;
  /**
   * The UUID of the customer
   */
  customer?: string | null | undefined;
  /**
   * The UUID of the vendor
   */
  vendor?: string | null | undefined;
  /**
   * A memo or note for the purchase order
   */
  memo?: string | null | undefined;
  /**
   * The UUID of the company
   */
  companyId?: string | null | undefined;
  /**
   * The total amount of the purchase order in cents
   */
  totalAmount?: number | null | undefined;
  /**
   * The currency of the purchase order
   */
  currency?: string | null | undefined;
  /**
   * The exchange rate applied to the purchase order
   */
  exchangeRate?: string | null | undefined;
  /**
   * The UUIDs of the tracking categories associated with the purchase order
   */
  trackingCategories?: Array<string> | null | undefined;
  /**
   * The UUID of the associated accounting period
   */
  accountingPeriodId?: string | null | undefined;
  /**
   * The line items associated with this purchase order
   */
  lineItems?: Array<LineItem> | undefined;
  /**
   * The custom field mappings of the object between the remote 3rd party & Panora
   */
  fieldMappings?:
    | UnifiedAccountingPurchaseorderOutputFieldMappings
    | null
    | undefined;
  /**
   * The UUID of the purchase order record
   */
  id?: string | null | undefined;
  /**
   * The remote ID of the purchase order in the context of the 3rd Party
   */
  remoteId?: string | null | undefined;
  /**
   * The date when the purchase order was created in the remote system
   */
  remoteCreatedAt?: Date | null | undefined;
  /**
   * The date when the purchase order was last updated in the remote system
   */
  remoteUpdatedAt?: Date | null | undefined;
  /**
   * The remote data of the purchase order in the context of the 3rd Party
   */
  remoteData?:
    | UnifiedAccountingPurchaseorderOutputRemoteData
    | null
    | undefined;
  /**
   * The created date of the purchase order record
   */
  createdAt?: Date | null | undefined;
  /**
   * The last modified date of the purchase order record
   */
  modifiedAt?: Date | null | undefined;
};

/** @internal */
export const UnifiedAccountingPurchaseorderOutputFieldMappings$inboundSchema:
  z.ZodType<
    UnifiedAccountingPurchaseorderOutputFieldMappings,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type UnifiedAccountingPurchaseorderOutputFieldMappings$Outbound = {};

/** @internal */
export const UnifiedAccountingPurchaseorderOutputFieldMappings$outboundSchema:
  z.ZodType<
    UnifiedAccountingPurchaseorderOutputFieldMappings$Outbound,
    z.ZodTypeDef,
    UnifiedAccountingPurchaseorderOutputFieldMappings
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedAccountingPurchaseorderOutputFieldMappings$ {
  /** @deprecated use `UnifiedAccountingPurchaseorderOutputFieldMappings$inboundSchema` instead. */
  export const inboundSchema =
    UnifiedAccountingPurchaseorderOutputFieldMappings$inboundSchema;
  /** @deprecated use `UnifiedAccountingPurchaseorderOutputFieldMappings$outboundSchema` instead. */
  export const outboundSchema =
    UnifiedAccountingPurchaseorderOutputFieldMappings$outboundSchema;
  /** @deprecated use `UnifiedAccountingPurchaseorderOutputFieldMappings$Outbound` instead. */
  export type Outbound =
    UnifiedAccountingPurchaseorderOutputFieldMappings$Outbound;
}

/** @internal */
export const UnifiedAccountingPurchaseorderOutputRemoteData$inboundSchema:
  z.ZodType<
    UnifiedAccountingPurchaseorderOutputRemoteData,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type UnifiedAccountingPurchaseorderOutputRemoteData$Outbound = {};

/** @internal */
export const UnifiedAccountingPurchaseorderOutputRemoteData$outboundSchema:
  z.ZodType<
    UnifiedAccountingPurchaseorderOutputRemoteData$Outbound,
    z.ZodTypeDef,
    UnifiedAccountingPurchaseorderOutputRemoteData
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedAccountingPurchaseorderOutputRemoteData$ {
  /** @deprecated use `UnifiedAccountingPurchaseorderOutputRemoteData$inboundSchema` instead. */
  export const inboundSchema =
    UnifiedAccountingPurchaseorderOutputRemoteData$inboundSchema;
  /** @deprecated use `UnifiedAccountingPurchaseorderOutputRemoteData$outboundSchema` instead. */
  export const outboundSchema =
    UnifiedAccountingPurchaseorderOutputRemoteData$outboundSchema;
  /** @deprecated use `UnifiedAccountingPurchaseorderOutputRemoteData$Outbound` instead. */
  export type Outbound =
    UnifiedAccountingPurchaseorderOutputRemoteData$Outbound;
}

/** @internal */
export const UnifiedAccountingPurchaseorderOutput$inboundSchema: z.ZodType<
  UnifiedAccountingPurchaseorderOutput,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.nullable(z.string()).optional(),
  issue_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  purchase_order_number: z.nullable(z.string()).optional(),
  delivery_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  delivery_address: z.nullable(z.string()).optional(),
  customer: z.nullable(z.string()).optional(),
  vendor: z.nullable(z.string()).optional(),
  memo: z.nullable(z.string()).optional(),
  company_id: z.nullable(z.string()).optional(),
  total_amount: z.nullable(z.number()).optional(),
  currency: z.nullable(z.string()).optional(),
  exchange_rate: z.nullable(z.string()).optional(),
  tracking_categories: z.nullable(z.array(z.string())).optional(),
  accounting_period_id: z.nullable(z.string()).optional(),
  line_items: z.array(LineItem$inboundSchema).optional(),
  field_mappings: z.nullable(
    z.lazy(() =>
      UnifiedAccountingPurchaseorderOutputFieldMappings$inboundSchema
    ),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  remote_id: z.nullable(z.string()).optional(),
  remote_created_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  remote_updated_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  remote_data: z.nullable(
    z.lazy(() => UnifiedAccountingPurchaseorderOutputRemoteData$inboundSchema),
  ).optional(),
  created_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  modified_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "issue_date": "issueDate",
    "purchase_order_number": "purchaseOrderNumber",
    "delivery_date": "deliveryDate",
    "delivery_address": "deliveryAddress",
    "company_id": "companyId",
    "total_amount": "totalAmount",
    "exchange_rate": "exchangeRate",
    "tracking_categories": "trackingCategories",
    "accounting_period_id": "accountingPeriodId",
    "line_items": "lineItems",
    "field_mappings": "fieldMappings",
    "remote_id": "remoteId",
    "remote_created_at": "remoteCreatedAt",
    "remote_updated_at": "remoteUpdatedAt",
    "remote_data": "remoteData",
    "created_at": "createdAt",
    "modified_at": "modifiedAt",
  });
});

/** @internal */
export type UnifiedAccountingPurchaseorderOutput$Outbound = {
  status?: string | null | undefined;
  issue_date?: string | null | undefined;
  purchase_order_number?: string | null | undefined;
  delivery_date?: string | null | undefined;
  delivery_address?: string | null | undefined;
  customer?: string | null | undefined;
  vendor?: string | null | undefined;
  memo?: string | null | undefined;
  company_id?: string | null | undefined;
  total_amount?: number | null | undefined;
  currency?: string | null | undefined;
  exchange_rate?: string | null | undefined;
  tracking_categories?: Array<string> | null | undefined;
  accounting_period_id?: string | null | undefined;
  line_items?: Array<LineItem$Outbound> | undefined;
  field_mappings?:
    | UnifiedAccountingPurchaseorderOutputFieldMappings$Outbound
    | null
    | undefined;
  id?: string | null | undefined;
  remote_id?: string | null | undefined;
  remote_created_at?: string | null | undefined;
  remote_updated_at?: string | null | undefined;
  remote_data?:
    | UnifiedAccountingPurchaseorderOutputRemoteData$Outbound
    | null
    | undefined;
  created_at?: string | null | undefined;
  modified_at?: string | null | undefined;
};

/** @internal */
export const UnifiedAccountingPurchaseorderOutput$outboundSchema: z.ZodType<
  UnifiedAccountingPurchaseorderOutput$Outbound,
  z.ZodTypeDef,
  UnifiedAccountingPurchaseorderOutput
> = z.object({
  status: z.nullable(z.string()).optional(),
  issueDate: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  purchaseOrderNumber: z.nullable(z.string()).optional(),
  deliveryDate: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  deliveryAddress: z.nullable(z.string()).optional(),
  customer: z.nullable(z.string()).optional(),
  vendor: z.nullable(z.string()).optional(),
  memo: z.nullable(z.string()).optional(),
  companyId: z.nullable(z.string()).optional(),
  totalAmount: z.nullable(z.number()).optional(),
  currency: z.nullable(z.string()).optional(),
  exchangeRate: z.nullable(z.string()).optional(),
  trackingCategories: z.nullable(z.array(z.string())).optional(),
  accountingPeriodId: z.nullable(z.string()).optional(),
  lineItems: z.array(LineItem$outboundSchema).optional(),
  fieldMappings: z.nullable(
    z.lazy(() =>
      UnifiedAccountingPurchaseorderOutputFieldMappings$outboundSchema
    ),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  remoteId: z.nullable(z.string()).optional(),
  remoteCreatedAt: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  remoteUpdatedAt: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  remoteData: z.nullable(
    z.lazy(() => UnifiedAccountingPurchaseorderOutputRemoteData$outboundSchema),
  ).optional(),
  createdAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
}).transform((v) => {
  return remap$(v, {
    issueDate: "issue_date",
    purchaseOrderNumber: "purchase_order_number",
    deliveryDate: "delivery_date",
    deliveryAddress: "delivery_address",
    companyId: "company_id",
    totalAmount: "total_amount",
    exchangeRate: "exchange_rate",
    trackingCategories: "tracking_categories",
    accountingPeriodId: "accounting_period_id",
    lineItems: "line_items",
    fieldMappings: "field_mappings",
    remoteId: "remote_id",
    remoteCreatedAt: "remote_created_at",
    remoteUpdatedAt: "remote_updated_at",
    remoteData: "remote_data",
    createdAt: "created_at",
    modifiedAt: "modified_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedAccountingPurchaseorderOutput$ {
  /** @deprecated use `UnifiedAccountingPurchaseorderOutput$inboundSchema` instead. */
  export const inboundSchema =
    UnifiedAccountingPurchaseorderOutput$inboundSchema;
  /** @deprecated use `UnifiedAccountingPurchaseorderOutput$outboundSchema` instead. */
  export const outboundSchema =
    UnifiedAccountingPurchaseorderOutput$outboundSchema;
  /** @deprecated use `UnifiedAccountingPurchaseorderOutput$Outbound` instead. */
  export type Outbound = UnifiedAccountingPurchaseorderOutput$Outbound;
}
