/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type WebhookResponse = {
    /**
     * The unique UUID of the webhook.
     */
    idWebhookEndpoint: string;
    /**
     * The description of the webhook.
     */
    endpointDescription: string;
    /**
     * The endpoint url of the webhook.
     */
    url: string;
    /**
     * The secret of the webhook.
     */
    secret: string;
    /**
     * The status of the webhook.
     */
    active: boolean;
    /**
     * The created date  of the webhook.
     */
    createdAt: Date;
    /**
     * The events that the webhook listen to.
     */
    scope: Array<string>;
    /**
     * The project id tied to the webhook.
     */
    idProject: string;
    /**
     * The last update date of the webhook.
     */
    lastUpdate: Date;
};

/** @internal */
export namespace WebhookResponse$ {
    export const inboundSchema: z.ZodType<WebhookResponse, z.ZodTypeDef, unknown> = z
        .object({
            id_webhook_endpoint: z.string(),
            endpoint_description: z.string(),
            url: z.string(),
            secret: z.string(),
            active: z.boolean(),
            created_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v)),
            scope: z.array(z.string()),
            id_project: z.string(),
            last_update: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v)),
        })
        .transform((v) => {
            return remap$(v, {
                id_webhook_endpoint: "idWebhookEndpoint",
                endpoint_description: "endpointDescription",
                created_at: "createdAt",
                id_project: "idProject",
                last_update: "lastUpdate",
            });
        });

    export type Outbound = {
        id_webhook_endpoint: string;
        endpoint_description: string;
        url: string;
        secret: string;
        active: boolean;
        created_at: string;
        scope: Array<string>;
        id_project: string;
        last_update: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WebhookResponse> = z
        .object({
            idWebhookEndpoint: z.string(),
            endpointDescription: z.string(),
            url: z.string(),
            secret: z.string(),
            active: z.boolean(),
            createdAt: z.date().transform((v) => v.toISOString()),
            scope: z.array(z.string()),
            idProject: z.string(),
            lastUpdate: z.date().transform((v) => v.toISOString()),
        })
        .transform((v) => {
            return remap$(v, {
                idWebhookEndpoint: "id_webhook_endpoint",
                endpointDescription: "endpoint_description",
                createdAt: "created_at",
                idProject: "id_project",
                lastUpdate: "last_update",
            });
        });
}
