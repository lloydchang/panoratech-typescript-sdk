/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ResyncStatusDto = {
    timestamp: Date | null;
    vertical: string | null;
    provider: string | null;
    status: string | null;
};

/** @internal */
export const ResyncStatusDto$inboundSchema: z.ZodType<ResyncStatusDto, z.ZodTypeDef, unknown> =
    z.object({
        timestamp: z.nullable(
            z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
        ),
        vertical: z.nullable(z.string()),
        provider: z.nullable(z.string()),
        status: z.nullable(z.string()),
    });

/** @internal */
export type ResyncStatusDto$Outbound = {
    timestamp: string | null;
    vertical: string | null;
    provider: string | null;
    status: string | null;
};

/** @internal */
export const ResyncStatusDto$outboundSchema: z.ZodType<
    ResyncStatusDto$Outbound,
    z.ZodTypeDef,
    ResyncStatusDto
> = z.object({
    timestamp: z.nullable(z.date().transform((v) => v.toISOString())),
    vertical: z.nullable(z.string()),
    provider: z.nullable(z.string()),
    status: z.nullable(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResyncStatusDto$ {
    /** @deprecated use `ResyncStatusDto$inboundSchema` instead. */
    export const inboundSchema = ResyncStatusDto$inboundSchema;
    /** @deprecated use `ResyncStatusDto$outboundSchema` instead. */
    export const outboundSchema = ResyncStatusDto$outboundSchema;
    /** @deprecated use `ResyncStatusDto$Outbound` instead. */
    export type Outbound = ResyncStatusDto$Outbound;
}
