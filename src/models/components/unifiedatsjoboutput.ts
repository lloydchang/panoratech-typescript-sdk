/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type UnifiedAtsJobOutput = {
    /**
     * The name of the job
     */
    name?: string | null | undefined;
    /**
     * The description of the job
     */
    description?: string | null | undefined;
    /**
     * The code of the job
     */
    code?: string | null | undefined;
    /**
     * The status of the job
     */
    status?: string | null | undefined;
    /**
     * The type of the job
     */
    type?: string | null | undefined;
    /**
     * Whether the job is confidential
     */
    confidential?: boolean | null | undefined;
    /**
     * The departments UUIDs associated with the job
     */
    departments?: Array<string> | null | undefined;
    /**
     * The offices UUIDs associated with the job
     */
    offices?: Array<string> | null | undefined;
    /**
     * The managers UUIDs associated with the job
     */
    managers?: Array<string> | null | undefined;
    /**
     * The recruiters UUIDs associated with the job
     */
    recruiters?: Array<string> | null | undefined;
    /**
     * The remote creation date of the job
     */
    remoteCreatedAt?: Date | null | undefined;
    /**
     * The remote modification date of the job
     */
    remoteUpdatedAt?: Date | null | undefined;
    /**
     * The custom field mappings of the object between the remote 3rd party & Panora
     */
    fieldMappings?: { [k: string]: any } | null | undefined;
    /**
     * The UUID of the job
     */
    id?: string | null | undefined;
    /**
     * The remote ID of the job in the context of the 3rd Party
     */
    remoteId?: string | null | undefined;
    /**
     * The remote data of the job in the context of the 3rd Party
     */
    remoteData?: { [k: string]: any } | null | undefined;
    /**
     * The created date of the object
     */
    createdAt?: Date | null | undefined;
    /**
     * The modified date of the object
     */
    modifiedAt?: Date | null | undefined;
};

/** @internal */
export const UnifiedAtsJobOutput$inboundSchema: z.ZodType<
    UnifiedAtsJobOutput,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        name: z.nullable(z.string()).optional(),
        description: z.nullable(z.string()).optional(),
        code: z.nullable(z.string()).optional(),
        status: z.nullable(z.string()).optional(),
        type: z.nullable(z.string()).optional(),
        confidential: z.nullable(z.boolean()).optional(),
        departments: z.nullable(z.array(z.string())).optional(),
        offices: z.nullable(z.array(z.string())).optional(),
        managers: z.nullable(z.array(z.string())).optional(),
        recruiters: z.nullable(z.array(z.string())).optional(),
        remote_created_at: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        remote_updated_at: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        field_mappings: z.nullable(z.record(z.any())).optional(),
        id: z.nullable(z.string()).optional(),
        remote_id: z.nullable(z.string()).optional(),
        remote_data: z.nullable(z.record(z.any())).optional(),
        created_at: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        modified_at: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
    })
    .transform((v) => {
        return remap$(v, {
            remote_created_at: "remoteCreatedAt",
            remote_updated_at: "remoteUpdatedAt",
            field_mappings: "fieldMappings",
            remote_id: "remoteId",
            remote_data: "remoteData",
            created_at: "createdAt",
            modified_at: "modifiedAt",
        });
    });

/** @internal */
export type UnifiedAtsJobOutput$Outbound = {
    name?: string | null | undefined;
    description?: string | null | undefined;
    code?: string | null | undefined;
    status?: string | null | undefined;
    type?: string | null | undefined;
    confidential?: boolean | null | undefined;
    departments?: Array<string> | null | undefined;
    offices?: Array<string> | null | undefined;
    managers?: Array<string> | null | undefined;
    recruiters?: Array<string> | null | undefined;
    remote_created_at?: string | null | undefined;
    remote_updated_at?: string | null | undefined;
    field_mappings?: { [k: string]: any } | null | undefined;
    id?: string | null | undefined;
    remote_id?: string | null | undefined;
    remote_data?: { [k: string]: any } | null | undefined;
    created_at?: string | null | undefined;
    modified_at?: string | null | undefined;
};

/** @internal */
export const UnifiedAtsJobOutput$outboundSchema: z.ZodType<
    UnifiedAtsJobOutput$Outbound,
    z.ZodTypeDef,
    UnifiedAtsJobOutput
> = z
    .object({
        name: z.nullable(z.string()).optional(),
        description: z.nullable(z.string()).optional(),
        code: z.nullable(z.string()).optional(),
        status: z.nullable(z.string()).optional(),
        type: z.nullable(z.string()).optional(),
        confidential: z.nullable(z.boolean()).optional(),
        departments: z.nullable(z.array(z.string())).optional(),
        offices: z.nullable(z.array(z.string())).optional(),
        managers: z.nullable(z.array(z.string())).optional(),
        recruiters: z.nullable(z.array(z.string())).optional(),
        remoteCreatedAt: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        remoteUpdatedAt: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        fieldMappings: z.nullable(z.record(z.any())).optional(),
        id: z.nullable(z.string()).optional(),
        remoteId: z.nullable(z.string()).optional(),
        remoteData: z.nullable(z.record(z.any())).optional(),
        createdAt: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        modifiedAt: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            remoteCreatedAt: "remote_created_at",
            remoteUpdatedAt: "remote_updated_at",
            fieldMappings: "field_mappings",
            remoteId: "remote_id",
            remoteData: "remote_data",
            createdAt: "created_at",
            modifiedAt: "modified_at",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedAtsJobOutput$ {
    /** @deprecated use `UnifiedAtsJobOutput$inboundSchema` instead. */
    export const inboundSchema = UnifiedAtsJobOutput$inboundSchema;
    /** @deprecated use `UnifiedAtsJobOutput$outboundSchema` instead. */
    export const outboundSchema = UnifiedAtsJobOutput$outboundSchema;
    /** @deprecated use `UnifiedAtsJobOutput$Outbound` instead. */
    export type Outbound = UnifiedAtsJobOutput$Outbound;
}
