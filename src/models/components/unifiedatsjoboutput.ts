/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type UnifiedAtsJobOutputFieldMappings = {};

export type UnifiedAtsJobOutputRemoteData = {};

export type UnifiedAtsJobOutputCreatedAt = {};

export type UnifiedAtsJobOutputModifiedAt = {};

export type UnifiedAtsJobOutput = {
    /**
     * The name of the job
     */
    name?: string | undefined;
    /**
     * The description of the job
     */
    description?: string | undefined;
    /**
     * The code of the job
     */
    code?: string | undefined;
    /**
     * The status of the job
     */
    status?: string | undefined;
    /**
     * The type of the job
     */
    type?: string | undefined;
    /**
     * Whether the job is confidential
     */
    confidential?: boolean | undefined;
    /**
     * The departments UUIDs associated with the job
     */
    departments?: Array<string> | undefined;
    /**
     * The offices UUIDs associated with the job
     */
    offices?: Array<string> | undefined;
    /**
     * The managers UUIDs associated with the job
     */
    managers?: Array<string> | undefined;
    /**
     * The recruiters UUIDs associated with the job
     */
    recruiters?: Array<string> | undefined;
    /**
     * The remote creation date of the job
     */
    remoteCreatedAt?: Date | undefined;
    /**
     * The remote modification date of the job
     */
    remoteUpdatedAt?: Date | undefined;
    fieldMappings: UnifiedAtsJobOutputFieldMappings;
    /**
     * The UUID of the job
     */
    id?: string | undefined;
    /**
     * The remote ID of the job in the context of the 3rd Party
     */
    remoteId?: string | undefined;
    remoteData: UnifiedAtsJobOutputRemoteData;
    createdAt: UnifiedAtsJobOutputCreatedAt;
    modifiedAt: UnifiedAtsJobOutputModifiedAt;
};

/** @internal */
export namespace UnifiedAtsJobOutputFieldMappings$ {
    export const inboundSchema: z.ZodType<UnifiedAtsJobOutputFieldMappings, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UnifiedAtsJobOutputFieldMappings
    > = z.object({});
}

/** @internal */
export namespace UnifiedAtsJobOutputRemoteData$ {
    export const inboundSchema: z.ZodType<UnifiedAtsJobOutputRemoteData, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnifiedAtsJobOutputRemoteData> =
        z.object({});
}

/** @internal */
export namespace UnifiedAtsJobOutputCreatedAt$ {
    export const inboundSchema: z.ZodType<UnifiedAtsJobOutputCreatedAt, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnifiedAtsJobOutputCreatedAt> =
        z.object({});
}

/** @internal */
export namespace UnifiedAtsJobOutputModifiedAt$ {
    export const inboundSchema: z.ZodType<UnifiedAtsJobOutputModifiedAt, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnifiedAtsJobOutputModifiedAt> =
        z.object({});
}

/** @internal */
export namespace UnifiedAtsJobOutput$ {
    export const inboundSchema: z.ZodType<UnifiedAtsJobOutput, z.ZodTypeDef, unknown> = z
        .object({
            name: z.string().optional(),
            description: z.string().optional(),
            code: z.string().optional(),
            status: z.string().optional(),
            type: z.string().optional(),
            confidential: z.boolean().optional(),
            departments: z.array(z.string()).optional(),
            offices: z.array(z.string()).optional(),
            managers: z.array(z.string()).optional(),
            recruiters: z.array(z.string()).optional(),
            remote_created_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            remote_updated_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            field_mappings: z.lazy(() => UnifiedAtsJobOutputFieldMappings$.inboundSchema),
            id: z.string().optional(),
            remote_id: z.string().optional(),
            remote_data: z.lazy(() => UnifiedAtsJobOutputRemoteData$.inboundSchema),
            created_at: z.lazy(() => UnifiedAtsJobOutputCreatedAt$.inboundSchema),
            modified_at: z.lazy(() => UnifiedAtsJobOutputModifiedAt$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                remote_created_at: "remoteCreatedAt",
                remote_updated_at: "remoteUpdatedAt",
                field_mappings: "fieldMappings",
                remote_id: "remoteId",
                remote_data: "remoteData",
                created_at: "createdAt",
                modified_at: "modifiedAt",
            });
        });

    export type Outbound = {
        name?: string | undefined;
        description?: string | undefined;
        code?: string | undefined;
        status?: string | undefined;
        type?: string | undefined;
        confidential?: boolean | undefined;
        departments?: Array<string> | undefined;
        offices?: Array<string> | undefined;
        managers?: Array<string> | undefined;
        recruiters?: Array<string> | undefined;
        remote_created_at?: string | undefined;
        remote_updated_at?: string | undefined;
        field_mappings: UnifiedAtsJobOutputFieldMappings$.Outbound;
        id?: string | undefined;
        remote_id?: string | undefined;
        remote_data: UnifiedAtsJobOutputRemoteData$.Outbound;
        created_at: UnifiedAtsJobOutputCreatedAt$.Outbound;
        modified_at: UnifiedAtsJobOutputModifiedAt$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnifiedAtsJobOutput> = z
        .object({
            name: z.string().optional(),
            description: z.string().optional(),
            code: z.string().optional(),
            status: z.string().optional(),
            type: z.string().optional(),
            confidential: z.boolean().optional(),
            departments: z.array(z.string()).optional(),
            offices: z.array(z.string()).optional(),
            managers: z.array(z.string()).optional(),
            recruiters: z.array(z.string()).optional(),
            remoteCreatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            remoteUpdatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            fieldMappings: z.lazy(() => UnifiedAtsJobOutputFieldMappings$.outboundSchema),
            id: z.string().optional(),
            remoteId: z.string().optional(),
            remoteData: z.lazy(() => UnifiedAtsJobOutputRemoteData$.outboundSchema),
            createdAt: z.lazy(() => UnifiedAtsJobOutputCreatedAt$.outboundSchema),
            modifiedAt: z.lazy(() => UnifiedAtsJobOutputModifiedAt$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                remoteCreatedAt: "remote_created_at",
                remoteUpdatedAt: "remote_updated_at",
                fieldMappings: "field_mappings",
                remoteId: "remote_id",
                remoteData: "remote_data",
                createdAt: "created_at",
                modifiedAt: "modified_at",
            });
        });
}
