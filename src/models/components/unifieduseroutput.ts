/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type UnifiedUserOutputFieldMappings = {};

export type UnifiedUserOutputRemoteData = {};

export type UnifiedUserOutputCreatedAt = {};

export type UnifiedUserOutputModifiedAt = {};

export type UnifiedUserOutput = {
    /**
     * The name of the user
     */
    name: string;
    /**
     * The email of the user
     */
    email: string;
    /**
     * Whether the user is the one who linked this account.
     */
    isMe: boolean;
    fieldMappings: UnifiedUserOutputFieldMappings;
    /**
     * The UUID of the user
     */
    id?: string | undefined;
    /**
     * The id of the user in the context of the 3rd Party
     */
    remoteId?: string | undefined;
    remoteData: UnifiedUserOutputRemoteData;
    createdAt: UnifiedUserOutputCreatedAt;
    modifiedAt: UnifiedUserOutputModifiedAt;
};

/** @internal */
export const UnifiedUserOutputFieldMappings$inboundSchema: z.ZodType<
    UnifiedUserOutputFieldMappings,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UnifiedUserOutputFieldMappings$Outbound = {};

/** @internal */
export const UnifiedUserOutputFieldMappings$outboundSchema: z.ZodType<
    UnifiedUserOutputFieldMappings$Outbound,
    z.ZodTypeDef,
    UnifiedUserOutputFieldMappings
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedUserOutputFieldMappings$ {
    /** @deprecated use `UnifiedUserOutputFieldMappings$inboundSchema` instead. */
    export const inboundSchema = UnifiedUserOutputFieldMappings$inboundSchema;
    /** @deprecated use `UnifiedUserOutputFieldMappings$outboundSchema` instead. */
    export const outboundSchema = UnifiedUserOutputFieldMappings$outboundSchema;
    /** @deprecated use `UnifiedUserOutputFieldMappings$Outbound` instead. */
    export type Outbound = UnifiedUserOutputFieldMappings$Outbound;
}

/** @internal */
export const UnifiedUserOutputRemoteData$inboundSchema: z.ZodType<
    UnifiedUserOutputRemoteData,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UnifiedUserOutputRemoteData$Outbound = {};

/** @internal */
export const UnifiedUserOutputRemoteData$outboundSchema: z.ZodType<
    UnifiedUserOutputRemoteData$Outbound,
    z.ZodTypeDef,
    UnifiedUserOutputRemoteData
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedUserOutputRemoteData$ {
    /** @deprecated use `UnifiedUserOutputRemoteData$inboundSchema` instead. */
    export const inboundSchema = UnifiedUserOutputRemoteData$inboundSchema;
    /** @deprecated use `UnifiedUserOutputRemoteData$outboundSchema` instead. */
    export const outboundSchema = UnifiedUserOutputRemoteData$outboundSchema;
    /** @deprecated use `UnifiedUserOutputRemoteData$Outbound` instead. */
    export type Outbound = UnifiedUserOutputRemoteData$Outbound;
}

/** @internal */
export const UnifiedUserOutputCreatedAt$inboundSchema: z.ZodType<
    UnifiedUserOutputCreatedAt,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UnifiedUserOutputCreatedAt$Outbound = {};

/** @internal */
export const UnifiedUserOutputCreatedAt$outboundSchema: z.ZodType<
    UnifiedUserOutputCreatedAt$Outbound,
    z.ZodTypeDef,
    UnifiedUserOutputCreatedAt
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedUserOutputCreatedAt$ {
    /** @deprecated use `UnifiedUserOutputCreatedAt$inboundSchema` instead. */
    export const inboundSchema = UnifiedUserOutputCreatedAt$inboundSchema;
    /** @deprecated use `UnifiedUserOutputCreatedAt$outboundSchema` instead. */
    export const outboundSchema = UnifiedUserOutputCreatedAt$outboundSchema;
    /** @deprecated use `UnifiedUserOutputCreatedAt$Outbound` instead. */
    export type Outbound = UnifiedUserOutputCreatedAt$Outbound;
}

/** @internal */
export const UnifiedUserOutputModifiedAt$inboundSchema: z.ZodType<
    UnifiedUserOutputModifiedAt,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UnifiedUserOutputModifiedAt$Outbound = {};

/** @internal */
export const UnifiedUserOutputModifiedAt$outboundSchema: z.ZodType<
    UnifiedUserOutputModifiedAt$Outbound,
    z.ZodTypeDef,
    UnifiedUserOutputModifiedAt
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedUserOutputModifiedAt$ {
    /** @deprecated use `UnifiedUserOutputModifiedAt$inboundSchema` instead. */
    export const inboundSchema = UnifiedUserOutputModifiedAt$inboundSchema;
    /** @deprecated use `UnifiedUserOutputModifiedAt$outboundSchema` instead. */
    export const outboundSchema = UnifiedUserOutputModifiedAt$outboundSchema;
    /** @deprecated use `UnifiedUserOutputModifiedAt$Outbound` instead. */
    export type Outbound = UnifiedUserOutputModifiedAt$Outbound;
}

/** @internal */
export const UnifiedUserOutput$inboundSchema: z.ZodType<UnifiedUserOutput, z.ZodTypeDef, unknown> =
    z
        .object({
            name: z.string(),
            email: z.string(),
            is_me: z.boolean(),
            field_mappings: z.lazy(() => UnifiedUserOutputFieldMappings$inboundSchema),
            id: z.string().optional(),
            remote_id: z.string().optional(),
            remote_data: z.lazy(() => UnifiedUserOutputRemoteData$inboundSchema),
            created_at: z.lazy(() => UnifiedUserOutputCreatedAt$inboundSchema),
            modified_at: z.lazy(() => UnifiedUserOutputModifiedAt$inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                is_me: "isMe",
                field_mappings: "fieldMappings",
                remote_id: "remoteId",
                remote_data: "remoteData",
                created_at: "createdAt",
                modified_at: "modifiedAt",
            });
        });

/** @internal */
export type UnifiedUserOutput$Outbound = {
    name: string;
    email: string;
    is_me: boolean;
    field_mappings: UnifiedUserOutputFieldMappings$Outbound;
    id?: string | undefined;
    remote_id?: string | undefined;
    remote_data: UnifiedUserOutputRemoteData$Outbound;
    created_at: UnifiedUserOutputCreatedAt$Outbound;
    modified_at: UnifiedUserOutputModifiedAt$Outbound;
};

/** @internal */
export const UnifiedUserOutput$outboundSchema: z.ZodType<
    UnifiedUserOutput$Outbound,
    z.ZodTypeDef,
    UnifiedUserOutput
> = z
    .object({
        name: z.string(),
        email: z.string(),
        isMe: z.boolean(),
        fieldMappings: z.lazy(() => UnifiedUserOutputFieldMappings$outboundSchema),
        id: z.string().optional(),
        remoteId: z.string().optional(),
        remoteData: z.lazy(() => UnifiedUserOutputRemoteData$outboundSchema),
        createdAt: z.lazy(() => UnifiedUserOutputCreatedAt$outboundSchema),
        modifiedAt: z.lazy(() => UnifiedUserOutputModifiedAt$outboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            isMe: "is_me",
            fieldMappings: "field_mappings",
            remoteId: "remote_id",
            remoteData: "remote_data",
            createdAt: "created_at",
            modifiedAt: "modified_at",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedUserOutput$ {
    /** @deprecated use `UnifiedUserOutput$inboundSchema` instead. */
    export const inboundSchema = UnifiedUserOutput$inboundSchema;
    /** @deprecated use `UnifiedUserOutput$outboundSchema` instead. */
    export const outboundSchema = UnifiedUserOutput$outboundSchema;
    /** @deprecated use `UnifiedUserOutput$Outbound` instead. */
    export type Outbound = UnifiedUserOutput$Outbound;
}
