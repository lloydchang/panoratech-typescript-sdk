/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type UnifiedAtsAttachmentInputFieldMappings = {};

export type UnifiedAtsAttachmentInput = {
    /**
     * The URL of the file
     */
    fileUrl?: string | undefined;
    /**
     * The name of the file
     */
    fileName?: string | undefined;
    /**
     * The type of the file
     */
    attachmentType?: string | undefined;
    /**
     * The remote creation date of the attachment
     */
    remoteCreatedAt?: Date | undefined;
    /**
     * The remote modification date of the attachment
     */
    remoteModifiedAt?: Date | undefined;
    /**
     * The UUID of the candidate
     */
    candidateId?: string | undefined;
    fieldMappings: UnifiedAtsAttachmentInputFieldMappings;
};

/** @internal */
export namespace UnifiedAtsAttachmentInputFieldMappings$ {
    export const inboundSchema: z.ZodType<
        UnifiedAtsAttachmentInputFieldMappings,
        z.ZodTypeDef,
        unknown
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UnifiedAtsAttachmentInputFieldMappings
    > = z.object({});
}

/** @internal */
export namespace UnifiedAtsAttachmentInput$ {
    export const inboundSchema: z.ZodType<UnifiedAtsAttachmentInput, z.ZodTypeDef, unknown> = z
        .object({
            file_url: z.string().optional(),
            file_name: z.string().optional(),
            attachment_type: z.string().optional(),
            remote_created_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            remote_modified_at: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            candidate_id: z.string().optional(),
            field_mappings: z.lazy(() => UnifiedAtsAttachmentInputFieldMappings$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                file_url: "fileUrl",
                file_name: "fileName",
                attachment_type: "attachmentType",
                remote_created_at: "remoteCreatedAt",
                remote_modified_at: "remoteModifiedAt",
                candidate_id: "candidateId",
                field_mappings: "fieldMappings",
            });
        });

    export type Outbound = {
        file_url?: string | undefined;
        file_name?: string | undefined;
        attachment_type?: string | undefined;
        remote_created_at?: string | undefined;
        remote_modified_at?: string | undefined;
        candidate_id?: string | undefined;
        field_mappings: UnifiedAtsAttachmentInputFieldMappings$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnifiedAtsAttachmentInput> = z
        .object({
            fileUrl: z.string().optional(),
            fileName: z.string().optional(),
            attachmentType: z.string().optional(),
            remoteCreatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            remoteModifiedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            candidateId: z.string().optional(),
            fieldMappings: z.lazy(() => UnifiedAtsAttachmentInputFieldMappings$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                fileUrl: "file_url",
                fileName: "file_name",
                attachmentType: "attachment_type",
                remoteCreatedAt: "remote_created_at",
                remoteModifiedAt: "remote_modified_at",
                candidateId: "candidate_id",
                fieldMappings: "field_mappings",
            });
        });
}
