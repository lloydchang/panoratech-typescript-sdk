/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

/**
 * The custom field mappings of the object between the remote 3rd party & Panora
 */
export type UnifiedHrisEmployerbenefitOutputFieldMappings = {};

/**
 * The remote data of the employer benefit in the context of the 3rd Party
 */
export type UnifiedHrisEmployerbenefitOutputRemoteData = {};

export type UnifiedHrisEmployerbenefitOutput = {
  /**
   * The type of the benefit plan
   */
  benefitPlanType?: string | null | undefined;
  /**
   * The name of the employer benefit
   */
  name?: string | null | undefined;
  /**
   * The description of the employer benefit
   */
  description?: string | null | undefined;
  /**
   * The deduction code for the employer benefit
   */
  deductionCode?: string | null | undefined;
  /**
   * The custom field mappings of the object between the remote 3rd party & Panora
   */
  fieldMappings?:
    | UnifiedHrisEmployerbenefitOutputFieldMappings
    | null
    | undefined;
  /**
   * The UUID of the employer benefit record
   */
  id?: string | null | undefined;
  /**
   * The remote ID of the employer benefit in the context of the 3rd Party
   */
  remoteId?: string | null | undefined;
  /**
   * The remote data of the employer benefit in the context of the 3rd Party
   */
  remoteData?: UnifiedHrisEmployerbenefitOutputRemoteData | null | undefined;
  /**
   * The date when the employer benefit was created in the 3rd party system
   */
  remoteCreatedAt?: Date | null | undefined;
  /**
   * The created date of the employer benefit record
   */
  createdAt?: Date | null | undefined;
  /**
   * The last modified date of the employer benefit record
   */
  modifiedAt?: Date | null | undefined;
  /**
   * Indicates if the employer benefit was deleted in the remote system
   */
  remoteWasDeleted?: boolean | null | undefined;
};

/** @internal */
export const UnifiedHrisEmployerbenefitOutputFieldMappings$inboundSchema:
  z.ZodType<
    UnifiedHrisEmployerbenefitOutputFieldMappings,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type UnifiedHrisEmployerbenefitOutputFieldMappings$Outbound = {};

/** @internal */
export const UnifiedHrisEmployerbenefitOutputFieldMappings$outboundSchema:
  z.ZodType<
    UnifiedHrisEmployerbenefitOutputFieldMappings$Outbound,
    z.ZodTypeDef,
    UnifiedHrisEmployerbenefitOutputFieldMappings
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisEmployerbenefitOutputFieldMappings$ {
  /** @deprecated use `UnifiedHrisEmployerbenefitOutputFieldMappings$inboundSchema` instead. */
  export const inboundSchema =
    UnifiedHrisEmployerbenefitOutputFieldMappings$inboundSchema;
  /** @deprecated use `UnifiedHrisEmployerbenefitOutputFieldMappings$outboundSchema` instead. */
  export const outboundSchema =
    UnifiedHrisEmployerbenefitOutputFieldMappings$outboundSchema;
  /** @deprecated use `UnifiedHrisEmployerbenefitOutputFieldMappings$Outbound` instead. */
  export type Outbound = UnifiedHrisEmployerbenefitOutputFieldMappings$Outbound;
}

/** @internal */
export const UnifiedHrisEmployerbenefitOutputRemoteData$inboundSchema:
  z.ZodType<UnifiedHrisEmployerbenefitOutputRemoteData, z.ZodTypeDef, unknown> =
    z.object({});

/** @internal */
export type UnifiedHrisEmployerbenefitOutputRemoteData$Outbound = {};

/** @internal */
export const UnifiedHrisEmployerbenefitOutputRemoteData$outboundSchema:
  z.ZodType<
    UnifiedHrisEmployerbenefitOutputRemoteData$Outbound,
    z.ZodTypeDef,
    UnifiedHrisEmployerbenefitOutputRemoteData
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisEmployerbenefitOutputRemoteData$ {
  /** @deprecated use `UnifiedHrisEmployerbenefitOutputRemoteData$inboundSchema` instead. */
  export const inboundSchema =
    UnifiedHrisEmployerbenefitOutputRemoteData$inboundSchema;
  /** @deprecated use `UnifiedHrisEmployerbenefitOutputRemoteData$outboundSchema` instead. */
  export const outboundSchema =
    UnifiedHrisEmployerbenefitOutputRemoteData$outboundSchema;
  /** @deprecated use `UnifiedHrisEmployerbenefitOutputRemoteData$Outbound` instead. */
  export type Outbound = UnifiedHrisEmployerbenefitOutputRemoteData$Outbound;
}

/** @internal */
export const UnifiedHrisEmployerbenefitOutput$inboundSchema: z.ZodType<
  UnifiedHrisEmployerbenefitOutput,
  z.ZodTypeDef,
  unknown
> = z.object({
  benefit_plan_type: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  deduction_code: z.nullable(z.string()).optional(),
  field_mappings: z.nullable(
    z.lazy(() => UnifiedHrisEmployerbenefitOutputFieldMappings$inboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  remote_id: z.nullable(z.string()).optional(),
  remote_data: z.nullable(
    z.lazy(() => UnifiedHrisEmployerbenefitOutputRemoteData$inboundSchema),
  ).optional(),
  remote_created_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  created_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  modified_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  remote_was_deleted: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    "benefit_plan_type": "benefitPlanType",
    "deduction_code": "deductionCode",
    "field_mappings": "fieldMappings",
    "remote_id": "remoteId",
    "remote_data": "remoteData",
    "remote_created_at": "remoteCreatedAt",
    "created_at": "createdAt",
    "modified_at": "modifiedAt",
    "remote_was_deleted": "remoteWasDeleted",
  });
});

/** @internal */
export type UnifiedHrisEmployerbenefitOutput$Outbound = {
  benefit_plan_type?: string | null | undefined;
  name?: string | null | undefined;
  description?: string | null | undefined;
  deduction_code?: string | null | undefined;
  field_mappings?:
    | UnifiedHrisEmployerbenefitOutputFieldMappings$Outbound
    | null
    | undefined;
  id?: string | null | undefined;
  remote_id?: string | null | undefined;
  remote_data?:
    | UnifiedHrisEmployerbenefitOutputRemoteData$Outbound
    | null
    | undefined;
  remote_created_at?: string | null | undefined;
  created_at?: string | null | undefined;
  modified_at?: string | null | undefined;
  remote_was_deleted?: boolean | null | undefined;
};

/** @internal */
export const UnifiedHrisEmployerbenefitOutput$outboundSchema: z.ZodType<
  UnifiedHrisEmployerbenefitOutput$Outbound,
  z.ZodTypeDef,
  UnifiedHrisEmployerbenefitOutput
> = z.object({
  benefitPlanType: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  deductionCode: z.nullable(z.string()).optional(),
  fieldMappings: z.nullable(
    z.lazy(() => UnifiedHrisEmployerbenefitOutputFieldMappings$outboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  remoteId: z.nullable(z.string()).optional(),
  remoteData: z.nullable(
    z.lazy(() => UnifiedHrisEmployerbenefitOutputRemoteData$outboundSchema),
  ).optional(),
  remoteCreatedAt: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  createdAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  remoteWasDeleted: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    benefitPlanType: "benefit_plan_type",
    deductionCode: "deduction_code",
    fieldMappings: "field_mappings",
    remoteId: "remote_id",
    remoteData: "remote_data",
    remoteCreatedAt: "remote_created_at",
    createdAt: "created_at",
    modifiedAt: "modified_at",
    remoteWasDeleted: "remote_was_deleted",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisEmployerbenefitOutput$ {
  /** @deprecated use `UnifiedHrisEmployerbenefitOutput$inboundSchema` instead. */
  export const inboundSchema = UnifiedHrisEmployerbenefitOutput$inboundSchema;
  /** @deprecated use `UnifiedHrisEmployerbenefitOutput$outboundSchema` instead. */
  export const outboundSchema = UnifiedHrisEmployerbenefitOutput$outboundSchema;
  /** @deprecated use `UnifiedHrisEmployerbenefitOutput$Outbound` instead. */
  export type Outbound = UnifiedHrisEmployerbenefitOutput$Outbound;
}
