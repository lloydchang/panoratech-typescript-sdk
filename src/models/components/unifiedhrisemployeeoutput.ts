/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

/**
 * The gender of the employee
 */
export enum UnifiedHrisEmployeeOutputGender {
    Male = "MALE",
    Female = "FEMALE",
    NonBinary = "NON-BINARY",
    Other = "OTHER",
    PreferNotToDisclose = "PREFER_NOT_TO_DISCLOSE",
}

/**
 * The ethnicity of the employee
 */
export enum Ethnicity {
    AmericanIndianOrAlaskaNative = "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
    AsianOrIndianSubcontinent = "ASIAN_OR_INDIAN_SUBCONTINENT",
    BlackOrAfricanAmerican = "BLACK_OR_AFRICAN_AMERICAN",
    HispanicOrLatino = "HISPANIC_OR_LATINO",
    NativeHawaiianOrOtherPacificIslander = "NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER",
    TwoOrMoreRaces = "TWO_OR_MORE_RACES",
    White = "WHITE",
    PreferNotToDisclose = "PREFER_NOT_TO_DISCLOSE",
}

/**
 * The marital status of the employee
 */
export enum MaritalStatus {
    Single = "SINGLE",
    MarriedFilingJointly = "MARRIED_FILING_JOINTLY",
    MarriedFilingSeparately = "MARRIED_FILING_SEPARATELY",
    HeadOfHousehold = "HEAD_OF_HOUSEHOLD",
    QualifyingWidowOrWidowerWithDependentChild = "QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
}

/**
 * The employment status of the employee
 */
export enum EmploymentStatus {
    Active = "ACTIVE",
    Pending = "PENDING",
    Inactive = "INACTIVE",
}

/**
 * The custom field mappings of the object between the remote 3rd party & Panora
 */
export type UnifiedHrisEmployeeOutputFieldMappings = {};

/**
 * The remote data of the employee in the context of the 3rd Party
 */
export type UnifiedHrisEmployeeOutputRemoteData = {};

export type UnifiedHrisEmployeeOutput = {
    /**
     * The groups the employee belongs to
     */
    groups?: Array<string> | null | undefined;
    /**
     * UUIDs of the of the Location associated with the company
     */
    locations?: Array<string> | null | undefined;
    /**
     * The employee number
     */
    employeeNumber?: string | null | undefined;
    /**
     * The UUID of the associated company
     */
    companyId?: string | null | undefined;
    /**
     * The first name of the employee
     */
    firstName?: string | null | undefined;
    /**
     * The last name of the employee
     */
    lastName?: string | null | undefined;
    /**
     * The preferred name of the employee
     */
    preferredName?: string | null | undefined;
    /**
     * The full display name of the employee
     */
    displayFullName?: string | null | undefined;
    /**
     * The username of the employee
     */
    username?: string | null | undefined;
    /**
     * The work email of the employee
     */
    workEmail?: string | null | undefined;
    /**
     * The personal email of the employee
     */
    personalEmail?: string | null | undefined;
    /**
     * The mobile phone number of the employee
     */
    mobilePhoneNumber?: string | null | undefined;
    /**
     * The employments of the employee
     */
    employments?: Array<string> | null | undefined;
    /**
     * The Social Security Number of the employee
     */
    ssn?: string | null | undefined;
    /**
     * The gender of the employee
     */
    gender?: UnifiedHrisEmployeeOutputGender | null | undefined;
    /**
     * The ethnicity of the employee
     */
    ethnicity?: Ethnicity | null | undefined;
    /**
     * The marital status of the employee
     */
    maritalStatus?: MaritalStatus | null | undefined;
    /**
     * The date of birth of the employee
     */
    dateOfBirth?: Date | null | undefined;
    /**
     * The start date of the employee
     */
    startDate?: Date | null | undefined;
    /**
     * The employment status of the employee
     */
    employmentStatus?: EmploymentStatus | null | undefined;
    /**
     * The termination date of the employee
     */
    terminationDate?: Date | null | undefined;
    /**
     * The URL of the employee's avatar
     */
    avatarUrl?: string | null | undefined;
    /**
     * UUID of the manager (employee) of the employee
     */
    managerId?: string | null | undefined;
    /**
     * The custom field mappings of the object between the remote 3rd party & Panora
     */
    fieldMappings?: UnifiedHrisEmployeeOutputFieldMappings | null | undefined;
    /**
     * The UUID of the employee record
     */
    id?: string | null | undefined;
    /**
     * The remote ID of the employee in the context of the 3rd Party
     */
    remoteId?: string | null | undefined;
    /**
     * The remote data of the employee in the context of the 3rd Party
     */
    remoteData?: UnifiedHrisEmployeeOutputRemoteData | null | undefined;
    /**
     * The date when the employee was created in the 3rd party system
     */
    remoteCreatedAt?: Date | null | undefined;
    /**
     * The created date of the employee record
     */
    createdAt?: Date | null | undefined;
    /**
     * The last modified date of the employee record
     */
    modifiedAt?: Date | null | undefined;
    /**
     * Indicates if the employee was deleted in the remote system
     */
    remoteWasDeleted?: boolean | null | undefined;
};

/** @internal */
export const UnifiedHrisEmployeeOutputGender$inboundSchema: z.ZodNativeEnum<
    typeof UnifiedHrisEmployeeOutputGender
> = z.nativeEnum(UnifiedHrisEmployeeOutputGender);

/** @internal */
export const UnifiedHrisEmployeeOutputGender$outboundSchema: z.ZodNativeEnum<
    typeof UnifiedHrisEmployeeOutputGender
> = UnifiedHrisEmployeeOutputGender$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisEmployeeOutputGender$ {
    /** @deprecated use `UnifiedHrisEmployeeOutputGender$inboundSchema` instead. */
    export const inboundSchema = UnifiedHrisEmployeeOutputGender$inboundSchema;
    /** @deprecated use `UnifiedHrisEmployeeOutputGender$outboundSchema` instead. */
    export const outboundSchema = UnifiedHrisEmployeeOutputGender$outboundSchema;
}

/** @internal */
export const Ethnicity$inboundSchema: z.ZodNativeEnum<typeof Ethnicity> = z.nativeEnum(Ethnicity);

/** @internal */
export const Ethnicity$outboundSchema: z.ZodNativeEnum<typeof Ethnicity> = Ethnicity$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Ethnicity$ {
    /** @deprecated use `Ethnicity$inboundSchema` instead. */
    export const inboundSchema = Ethnicity$inboundSchema;
    /** @deprecated use `Ethnicity$outboundSchema` instead. */
    export const outboundSchema = Ethnicity$outboundSchema;
}

/** @internal */
export const MaritalStatus$inboundSchema: z.ZodNativeEnum<typeof MaritalStatus> =
    z.nativeEnum(MaritalStatus);

/** @internal */
export const MaritalStatus$outboundSchema: z.ZodNativeEnum<typeof MaritalStatus> =
    MaritalStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MaritalStatus$ {
    /** @deprecated use `MaritalStatus$inboundSchema` instead. */
    export const inboundSchema = MaritalStatus$inboundSchema;
    /** @deprecated use `MaritalStatus$outboundSchema` instead. */
    export const outboundSchema = MaritalStatus$outboundSchema;
}

/** @internal */
export const EmploymentStatus$inboundSchema: z.ZodNativeEnum<typeof EmploymentStatus> =
    z.nativeEnum(EmploymentStatus);

/** @internal */
export const EmploymentStatus$outboundSchema: z.ZodNativeEnum<typeof EmploymentStatus> =
    EmploymentStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EmploymentStatus$ {
    /** @deprecated use `EmploymentStatus$inboundSchema` instead. */
    export const inboundSchema = EmploymentStatus$inboundSchema;
    /** @deprecated use `EmploymentStatus$outboundSchema` instead. */
    export const outboundSchema = EmploymentStatus$outboundSchema;
}

/** @internal */
export const UnifiedHrisEmployeeOutputFieldMappings$inboundSchema: z.ZodType<
    UnifiedHrisEmployeeOutputFieldMappings,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UnifiedHrisEmployeeOutputFieldMappings$Outbound = {};

/** @internal */
export const UnifiedHrisEmployeeOutputFieldMappings$outboundSchema: z.ZodType<
    UnifiedHrisEmployeeOutputFieldMappings$Outbound,
    z.ZodTypeDef,
    UnifiedHrisEmployeeOutputFieldMappings
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisEmployeeOutputFieldMappings$ {
    /** @deprecated use `UnifiedHrisEmployeeOutputFieldMappings$inboundSchema` instead. */
    export const inboundSchema = UnifiedHrisEmployeeOutputFieldMappings$inboundSchema;
    /** @deprecated use `UnifiedHrisEmployeeOutputFieldMappings$outboundSchema` instead. */
    export const outboundSchema = UnifiedHrisEmployeeOutputFieldMappings$outboundSchema;
    /** @deprecated use `UnifiedHrisEmployeeOutputFieldMappings$Outbound` instead. */
    export type Outbound = UnifiedHrisEmployeeOutputFieldMappings$Outbound;
}

/** @internal */
export const UnifiedHrisEmployeeOutputRemoteData$inboundSchema: z.ZodType<
    UnifiedHrisEmployeeOutputRemoteData,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UnifiedHrisEmployeeOutputRemoteData$Outbound = {};

/** @internal */
export const UnifiedHrisEmployeeOutputRemoteData$outboundSchema: z.ZodType<
    UnifiedHrisEmployeeOutputRemoteData$Outbound,
    z.ZodTypeDef,
    UnifiedHrisEmployeeOutputRemoteData
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisEmployeeOutputRemoteData$ {
    /** @deprecated use `UnifiedHrisEmployeeOutputRemoteData$inboundSchema` instead. */
    export const inboundSchema = UnifiedHrisEmployeeOutputRemoteData$inboundSchema;
    /** @deprecated use `UnifiedHrisEmployeeOutputRemoteData$outboundSchema` instead. */
    export const outboundSchema = UnifiedHrisEmployeeOutputRemoteData$outboundSchema;
    /** @deprecated use `UnifiedHrisEmployeeOutputRemoteData$Outbound` instead. */
    export type Outbound = UnifiedHrisEmployeeOutputRemoteData$Outbound;
}

/** @internal */
export const UnifiedHrisEmployeeOutput$inboundSchema: z.ZodType<
    UnifiedHrisEmployeeOutput,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        groups: z.nullable(z.array(z.string())).optional(),
        locations: z.nullable(z.array(z.string())).optional(),
        employee_number: z.nullable(z.string()).optional(),
        company_id: z.nullable(z.string()).optional(),
        first_name: z.nullable(z.string()).optional(),
        last_name: z.nullable(z.string()).optional(),
        preferred_name: z.nullable(z.string()).optional(),
        display_full_name: z.nullable(z.string()).optional(),
        username: z.nullable(z.string()).optional(),
        work_email: z.nullable(z.string()).optional(),
        personal_email: z.nullable(z.string()).optional(),
        mobile_phone_number: z.nullable(z.string()).optional(),
        employments: z.nullable(z.array(z.string())).optional(),
        ssn: z.nullable(z.string()).optional(),
        gender: z.nullable(UnifiedHrisEmployeeOutputGender$inboundSchema).optional(),
        ethnicity: z.nullable(Ethnicity$inboundSchema).optional(),
        marital_status: z.nullable(MaritalStatus$inboundSchema).optional(),
        date_of_birth: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        start_date: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        employment_status: z.nullable(EmploymentStatus$inboundSchema).optional(),
        termination_date: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        avatar_url: z.nullable(z.string()).optional(),
        manager_id: z.nullable(z.string()).optional(),
        field_mappings: z
            .nullable(z.lazy(() => UnifiedHrisEmployeeOutputFieldMappings$inboundSchema))
            .optional(),
        id: z.nullable(z.string()).optional(),
        remote_id: z.nullable(z.string()).optional(),
        remote_data: z
            .nullable(z.lazy(() => UnifiedHrisEmployeeOutputRemoteData$inboundSchema))
            .optional(),
        remote_created_at: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        created_at: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        modified_at: z
            .nullable(
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v))
            )
            .optional(),
        remote_was_deleted: z.nullable(z.boolean()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            employee_number: "employeeNumber",
            company_id: "companyId",
            first_name: "firstName",
            last_name: "lastName",
            preferred_name: "preferredName",
            display_full_name: "displayFullName",
            work_email: "workEmail",
            personal_email: "personalEmail",
            mobile_phone_number: "mobilePhoneNumber",
            marital_status: "maritalStatus",
            date_of_birth: "dateOfBirth",
            start_date: "startDate",
            employment_status: "employmentStatus",
            termination_date: "terminationDate",
            avatar_url: "avatarUrl",
            manager_id: "managerId",
            field_mappings: "fieldMappings",
            remote_id: "remoteId",
            remote_data: "remoteData",
            remote_created_at: "remoteCreatedAt",
            created_at: "createdAt",
            modified_at: "modifiedAt",
            remote_was_deleted: "remoteWasDeleted",
        });
    });

/** @internal */
export type UnifiedHrisEmployeeOutput$Outbound = {
    groups?: Array<string> | null | undefined;
    locations?: Array<string> | null | undefined;
    employee_number?: string | null | undefined;
    company_id?: string | null | undefined;
    first_name?: string | null | undefined;
    last_name?: string | null | undefined;
    preferred_name?: string | null | undefined;
    display_full_name?: string | null | undefined;
    username?: string | null | undefined;
    work_email?: string | null | undefined;
    personal_email?: string | null | undefined;
    mobile_phone_number?: string | null | undefined;
    employments?: Array<string> | null | undefined;
    ssn?: string | null | undefined;
    gender?: string | null | undefined;
    ethnicity?: string | null | undefined;
    marital_status?: string | null | undefined;
    date_of_birth?: string | null | undefined;
    start_date?: string | null | undefined;
    employment_status?: string | null | undefined;
    termination_date?: string | null | undefined;
    avatar_url?: string | null | undefined;
    manager_id?: string | null | undefined;
    field_mappings?: UnifiedHrisEmployeeOutputFieldMappings$Outbound | null | undefined;
    id?: string | null | undefined;
    remote_id?: string | null | undefined;
    remote_data?: UnifiedHrisEmployeeOutputRemoteData$Outbound | null | undefined;
    remote_created_at?: string | null | undefined;
    created_at?: string | null | undefined;
    modified_at?: string | null | undefined;
    remote_was_deleted?: boolean | null | undefined;
};

/** @internal */
export const UnifiedHrisEmployeeOutput$outboundSchema: z.ZodType<
    UnifiedHrisEmployeeOutput$Outbound,
    z.ZodTypeDef,
    UnifiedHrisEmployeeOutput
> = z
    .object({
        groups: z.nullable(z.array(z.string())).optional(),
        locations: z.nullable(z.array(z.string())).optional(),
        employeeNumber: z.nullable(z.string()).optional(),
        companyId: z.nullable(z.string()).optional(),
        firstName: z.nullable(z.string()).optional(),
        lastName: z.nullable(z.string()).optional(),
        preferredName: z.nullable(z.string()).optional(),
        displayFullName: z.nullable(z.string()).optional(),
        username: z.nullable(z.string()).optional(),
        workEmail: z.nullable(z.string()).optional(),
        personalEmail: z.nullable(z.string()).optional(),
        mobilePhoneNumber: z.nullable(z.string()).optional(),
        employments: z.nullable(z.array(z.string())).optional(),
        ssn: z.nullable(z.string()).optional(),
        gender: z.nullable(UnifiedHrisEmployeeOutputGender$outboundSchema).optional(),
        ethnicity: z.nullable(Ethnicity$outboundSchema).optional(),
        maritalStatus: z.nullable(MaritalStatus$outboundSchema).optional(),
        dateOfBirth: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        startDate: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        employmentStatus: z.nullable(EmploymentStatus$outboundSchema).optional(),
        terminationDate: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        avatarUrl: z.nullable(z.string()).optional(),
        managerId: z.nullable(z.string()).optional(),
        fieldMappings: z
            .nullable(z.lazy(() => UnifiedHrisEmployeeOutputFieldMappings$outboundSchema))
            .optional(),
        id: z.nullable(z.string()).optional(),
        remoteId: z.nullable(z.string()).optional(),
        remoteData: z
            .nullable(z.lazy(() => UnifiedHrisEmployeeOutputRemoteData$outboundSchema))
            .optional(),
        remoteCreatedAt: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        createdAt: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        modifiedAt: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        remoteWasDeleted: z.nullable(z.boolean()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            employeeNumber: "employee_number",
            companyId: "company_id",
            firstName: "first_name",
            lastName: "last_name",
            preferredName: "preferred_name",
            displayFullName: "display_full_name",
            workEmail: "work_email",
            personalEmail: "personal_email",
            mobilePhoneNumber: "mobile_phone_number",
            maritalStatus: "marital_status",
            dateOfBirth: "date_of_birth",
            startDate: "start_date",
            employmentStatus: "employment_status",
            terminationDate: "termination_date",
            avatarUrl: "avatar_url",
            managerId: "manager_id",
            fieldMappings: "field_mappings",
            remoteId: "remote_id",
            remoteData: "remote_data",
            remoteCreatedAt: "remote_created_at",
            createdAt: "created_at",
            modifiedAt: "modified_at",
            remoteWasDeleted: "remote_was_deleted",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisEmployeeOutput$ {
    /** @deprecated use `UnifiedHrisEmployeeOutput$inboundSchema` instead. */
    export const inboundSchema = UnifiedHrisEmployeeOutput$inboundSchema;
    /** @deprecated use `UnifiedHrisEmployeeOutput$outboundSchema` instead. */
    export const outboundSchema = UnifiedHrisEmployeeOutput$outboundSchema;
    /** @deprecated use `UnifiedHrisEmployeeOutput$Outbound` instead. */
    export type Outbound = UnifiedHrisEmployeeOutput$Outbound;
}
