/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

/**
 * The custom field mappings of the object between the remote 3rd party & Panora
 */
export type UnifiedHrisTimesheetEntryOutputFieldMappings = {};

/**
 * The remote data of the timesheet entry in the context of the 3rd Party
 */
export type UnifiedHrisTimesheetEntryOutputRemoteData = {};

export type UnifiedHrisTimesheetEntryOutput = {
  /**
   * The number of hours worked
   */
  hoursWorked?: number | null | undefined;
  /**
   * The start time of the timesheet entry
   */
  startTime?: Date | null | undefined;
  /**
   * The end time of the timesheet entry
   */
  endTime?: Date | null | undefined;
  /**
   * The UUID of the associated employee
   */
  employeeId?: string | null | undefined;
  /**
   * Indicates if the timesheet entry was deleted in the remote system
   */
  remoteWasDeleted?: boolean | undefined;
  /**
   * The custom field mappings of the object between the remote 3rd party & Panora
   */
  fieldMappings?:
    | UnifiedHrisTimesheetEntryOutputFieldMappings
    | null
    | undefined;
  /**
   * The UUID of the timesheet entry record
   */
  id?: string | null | undefined;
  /**
   * The remote ID of the timesheet entry
   */
  remoteId?: string | null | undefined;
  /**
   * The date when the timesheet entry was created in the remote system
   */
  remoteCreatedAt?: Date | null | undefined;
  /**
   * The created date of the timesheet entry
   */
  createdAt?: Date | undefined;
  /**
   * The last modified date of the timesheet entry
   */
  modifiedAt?: Date | undefined;
  /**
   * The remote data of the timesheet entry in the context of the 3rd Party
   */
  remoteData?: UnifiedHrisTimesheetEntryOutputRemoteData | null | undefined;
};

/** @internal */
export const UnifiedHrisTimesheetEntryOutputFieldMappings$inboundSchema:
  z.ZodType<
    UnifiedHrisTimesheetEntryOutputFieldMappings,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type UnifiedHrisTimesheetEntryOutputFieldMappings$Outbound = {};

/** @internal */
export const UnifiedHrisTimesheetEntryOutputFieldMappings$outboundSchema:
  z.ZodType<
    UnifiedHrisTimesheetEntryOutputFieldMappings$Outbound,
    z.ZodTypeDef,
    UnifiedHrisTimesheetEntryOutputFieldMappings
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisTimesheetEntryOutputFieldMappings$ {
  /** @deprecated use `UnifiedHrisTimesheetEntryOutputFieldMappings$inboundSchema` instead. */
  export const inboundSchema =
    UnifiedHrisTimesheetEntryOutputFieldMappings$inboundSchema;
  /** @deprecated use `UnifiedHrisTimesheetEntryOutputFieldMappings$outboundSchema` instead. */
  export const outboundSchema =
    UnifiedHrisTimesheetEntryOutputFieldMappings$outboundSchema;
  /** @deprecated use `UnifiedHrisTimesheetEntryOutputFieldMappings$Outbound` instead. */
  export type Outbound = UnifiedHrisTimesheetEntryOutputFieldMappings$Outbound;
}

/** @internal */
export const UnifiedHrisTimesheetEntryOutputRemoteData$inboundSchema: z.ZodType<
  UnifiedHrisTimesheetEntryOutputRemoteData,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type UnifiedHrisTimesheetEntryOutputRemoteData$Outbound = {};

/** @internal */
export const UnifiedHrisTimesheetEntryOutputRemoteData$outboundSchema:
  z.ZodType<
    UnifiedHrisTimesheetEntryOutputRemoteData$Outbound,
    z.ZodTypeDef,
    UnifiedHrisTimesheetEntryOutputRemoteData
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisTimesheetEntryOutputRemoteData$ {
  /** @deprecated use `UnifiedHrisTimesheetEntryOutputRemoteData$inboundSchema` instead. */
  export const inboundSchema =
    UnifiedHrisTimesheetEntryOutputRemoteData$inboundSchema;
  /** @deprecated use `UnifiedHrisTimesheetEntryOutputRemoteData$outboundSchema` instead. */
  export const outboundSchema =
    UnifiedHrisTimesheetEntryOutputRemoteData$outboundSchema;
  /** @deprecated use `UnifiedHrisTimesheetEntryOutputRemoteData$Outbound` instead. */
  export type Outbound = UnifiedHrisTimesheetEntryOutputRemoteData$Outbound;
}

/** @internal */
export const UnifiedHrisTimesheetEntryOutput$inboundSchema: z.ZodType<
  UnifiedHrisTimesheetEntryOutput,
  z.ZodTypeDef,
  unknown
> = z.object({
  hours_worked: z.nullable(z.number()).optional(),
  start_time: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  end_time: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  employee_id: z.nullable(z.string()).optional(),
  remote_was_deleted: z.boolean().optional(),
  field_mappings: z.nullable(
    z.lazy(() => UnifiedHrisTimesheetEntryOutputFieldMappings$inboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  remote_id: z.nullable(z.string()).optional(),
  remote_created_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  modified_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  remote_data: z.nullable(
    z.lazy(() => UnifiedHrisTimesheetEntryOutputRemoteData$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "hours_worked": "hoursWorked",
    "start_time": "startTime",
    "end_time": "endTime",
    "employee_id": "employeeId",
    "remote_was_deleted": "remoteWasDeleted",
    "field_mappings": "fieldMappings",
    "remote_id": "remoteId",
    "remote_created_at": "remoteCreatedAt",
    "created_at": "createdAt",
    "modified_at": "modifiedAt",
    "remote_data": "remoteData",
  });
});

/** @internal */
export type UnifiedHrisTimesheetEntryOutput$Outbound = {
  hours_worked?: number | null | undefined;
  start_time?: string | null | undefined;
  end_time?: string | null | undefined;
  employee_id?: string | null | undefined;
  remote_was_deleted?: boolean | undefined;
  field_mappings?:
    | UnifiedHrisTimesheetEntryOutputFieldMappings$Outbound
    | null
    | undefined;
  id?: string | null | undefined;
  remote_id?: string | null | undefined;
  remote_created_at?: string | null | undefined;
  created_at?: string | undefined;
  modified_at?: string | undefined;
  remote_data?:
    | UnifiedHrisTimesheetEntryOutputRemoteData$Outbound
    | null
    | undefined;
};

/** @internal */
export const UnifiedHrisTimesheetEntryOutput$outboundSchema: z.ZodType<
  UnifiedHrisTimesheetEntryOutput$Outbound,
  z.ZodTypeDef,
  UnifiedHrisTimesheetEntryOutput
> = z.object({
  hoursWorked: z.nullable(z.number()).optional(),
  startTime: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  endTime: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  employeeId: z.nullable(z.string()).optional(),
  remoteWasDeleted: z.boolean().optional(),
  fieldMappings: z.nullable(
    z.lazy(() => UnifiedHrisTimesheetEntryOutputFieldMappings$outboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  remoteId: z.nullable(z.string()).optional(),
  remoteCreatedAt: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  modifiedAt: z.date().transform(v => v.toISOString()).optional(),
  remoteData: z.nullable(
    z.lazy(() => UnifiedHrisTimesheetEntryOutputRemoteData$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    hoursWorked: "hours_worked",
    startTime: "start_time",
    endTime: "end_time",
    employeeId: "employee_id",
    remoteWasDeleted: "remote_was_deleted",
    fieldMappings: "field_mappings",
    remoteId: "remote_id",
    remoteCreatedAt: "remote_created_at",
    createdAt: "created_at",
    modifiedAt: "modified_at",
    remoteData: "remote_data",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisTimesheetEntryOutput$ {
  /** @deprecated use `UnifiedHrisTimesheetEntryOutput$inboundSchema` instead. */
  export const inboundSchema = UnifiedHrisTimesheetEntryOutput$inboundSchema;
  /** @deprecated use `UnifiedHrisTimesheetEntryOutput$outboundSchema` instead. */
  export const outboundSchema = UnifiedHrisTimesheetEntryOutput$outboundSchema;
  /** @deprecated use `UnifiedHrisTimesheetEntryOutput$Outbound` instead. */
  export type Outbound = UnifiedHrisTimesheetEntryOutput$Outbound;
}
