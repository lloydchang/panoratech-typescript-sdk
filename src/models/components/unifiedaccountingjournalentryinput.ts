/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  LineItem,
  LineItem$inboundSchema,
  LineItem$Outbound,
  LineItem$outboundSchema,
} from "./lineitem.js";

/**
 * The custom field mappings of the object between the remote 3rd party & Panora
 */
export type UnifiedAccountingJournalentryInputFieldMappings = {};

export type UnifiedAccountingJournalentryInput = {
  /**
   * The date of the transaction
   */
  transactionDate?: Date | null | undefined;
  /**
   * The payments associated with the journal entry
   */
  payments?: Array<string> | null | undefined;
  /**
   * The applied payments for the journal entry
   */
  appliedPayments?: Array<string> | null | undefined;
  /**
   * A memo or note for the journal entry
   */
  memo?: string | null | undefined;
  /**
   * The currency of the journal entry
   */
  currency?: string | null | undefined;
  /**
   * The exchange rate applied to the journal entry
   */
  exchangeRate?: string | null | undefined;
  /**
   * The UUID of the associated company info
   */
  idAccCompanyInfo?: string | undefined;
  /**
   * The journal number
   */
  journalNumber?: string | null | undefined;
  /**
   * The UUIDs of the tracking categories associated with the journal entry
   */
  trackingCategories?: Array<string> | null | undefined;
  /**
   * The UUID of the associated accounting period
   */
  idAccAccountingPeriod?: string | null | undefined;
  /**
   * The posting status of the journal entry
   */
  postingStatus?: string | null | undefined;
  /**
   * The line items associated with this journal entry
   */
  lineItems?: Array<LineItem> | undefined;
  /**
   * The custom field mappings of the object between the remote 3rd party & Panora
   */
  fieldMappings?:
    | UnifiedAccountingJournalentryInputFieldMappings
    | null
    | undefined;
};

/** @internal */
export const UnifiedAccountingJournalentryInputFieldMappings$inboundSchema:
  z.ZodType<
    UnifiedAccountingJournalentryInputFieldMappings,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type UnifiedAccountingJournalentryInputFieldMappings$Outbound = {};

/** @internal */
export const UnifiedAccountingJournalentryInputFieldMappings$outboundSchema:
  z.ZodType<
    UnifiedAccountingJournalentryInputFieldMappings$Outbound,
    z.ZodTypeDef,
    UnifiedAccountingJournalentryInputFieldMappings
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedAccountingJournalentryInputFieldMappings$ {
  /** @deprecated use `UnifiedAccountingJournalentryInputFieldMappings$inboundSchema` instead. */
  export const inboundSchema =
    UnifiedAccountingJournalentryInputFieldMappings$inboundSchema;
  /** @deprecated use `UnifiedAccountingJournalentryInputFieldMappings$outboundSchema` instead. */
  export const outboundSchema =
    UnifiedAccountingJournalentryInputFieldMappings$outboundSchema;
  /** @deprecated use `UnifiedAccountingJournalentryInputFieldMappings$Outbound` instead. */
  export type Outbound =
    UnifiedAccountingJournalentryInputFieldMappings$Outbound;
}

/** @internal */
export const UnifiedAccountingJournalentryInput$inboundSchema: z.ZodType<
  UnifiedAccountingJournalentryInput,
  z.ZodTypeDef,
  unknown
> = z.object({
  transaction_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  payments: z.nullable(z.array(z.string())).optional(),
  applied_payments: z.nullable(z.array(z.string())).optional(),
  memo: z.nullable(z.string()).optional(),
  currency: z.nullable(z.string()).optional(),
  exchange_rate: z.nullable(z.string()).optional(),
  id_acc_company_info: z.string().optional(),
  journal_number: z.nullable(z.string()).optional(),
  tracking_categories: z.nullable(z.array(z.string())).optional(),
  id_acc_accounting_period: z.nullable(z.string()).optional(),
  posting_status: z.nullable(z.string()).optional(),
  line_items: z.array(LineItem$inboundSchema).optional(),
  field_mappings: z.nullable(
    z.lazy(() => UnifiedAccountingJournalentryInputFieldMappings$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "transaction_date": "transactionDate",
    "applied_payments": "appliedPayments",
    "exchange_rate": "exchangeRate",
    "id_acc_company_info": "idAccCompanyInfo",
    "journal_number": "journalNumber",
    "tracking_categories": "trackingCategories",
    "id_acc_accounting_period": "idAccAccountingPeriod",
    "posting_status": "postingStatus",
    "line_items": "lineItems",
    "field_mappings": "fieldMappings",
  });
});

/** @internal */
export type UnifiedAccountingJournalentryInput$Outbound = {
  transaction_date?: string | null | undefined;
  payments?: Array<string> | null | undefined;
  applied_payments?: Array<string> | null | undefined;
  memo?: string | null | undefined;
  currency?: string | null | undefined;
  exchange_rate?: string | null | undefined;
  id_acc_company_info?: string | undefined;
  journal_number?: string | null | undefined;
  tracking_categories?: Array<string> | null | undefined;
  id_acc_accounting_period?: string | null | undefined;
  posting_status?: string | null | undefined;
  line_items?: Array<LineItem$Outbound> | undefined;
  field_mappings?:
    | UnifiedAccountingJournalentryInputFieldMappings$Outbound
    | null
    | undefined;
};

/** @internal */
export const UnifiedAccountingJournalentryInput$outboundSchema: z.ZodType<
  UnifiedAccountingJournalentryInput$Outbound,
  z.ZodTypeDef,
  UnifiedAccountingJournalentryInput
> = z.object({
  transactionDate: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  payments: z.nullable(z.array(z.string())).optional(),
  appliedPayments: z.nullable(z.array(z.string())).optional(),
  memo: z.nullable(z.string()).optional(),
  currency: z.nullable(z.string()).optional(),
  exchangeRate: z.nullable(z.string()).optional(),
  idAccCompanyInfo: z.string().optional(),
  journalNumber: z.nullable(z.string()).optional(),
  trackingCategories: z.nullable(z.array(z.string())).optional(),
  idAccAccountingPeriod: z.nullable(z.string()).optional(),
  postingStatus: z.nullable(z.string()).optional(),
  lineItems: z.array(LineItem$outboundSchema).optional(),
  fieldMappings: z.nullable(
    z.lazy(() =>
      UnifiedAccountingJournalentryInputFieldMappings$outboundSchema
    ),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    transactionDate: "transaction_date",
    appliedPayments: "applied_payments",
    exchangeRate: "exchange_rate",
    idAccCompanyInfo: "id_acc_company_info",
    journalNumber: "journal_number",
    trackingCategories: "tracking_categories",
    idAccAccountingPeriod: "id_acc_accounting_period",
    postingStatus: "posting_status",
    lineItems: "line_items",
    fieldMappings: "field_mappings",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedAccountingJournalentryInput$ {
  /** @deprecated use `UnifiedAccountingJournalentryInput$inboundSchema` instead. */
  export const inboundSchema = UnifiedAccountingJournalentryInput$inboundSchema;
  /** @deprecated use `UnifiedAccountingJournalentryInput$outboundSchema` instead. */
  export const outboundSchema =
    UnifiedAccountingJournalentryInput$outboundSchema;
  /** @deprecated use `UnifiedAccountingJournalentryInput$Outbound` instead. */
  export type Outbound = UnifiedAccountingJournalentryInput$Outbound;
}
