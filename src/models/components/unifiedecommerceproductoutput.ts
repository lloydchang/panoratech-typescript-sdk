/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Variant,
  Variant$inboundSchema,
  Variant$Outbound,
  Variant$outboundSchema,
} from "./variant.js";

/**
 * The custom field mappings of the object between the remote 3rd party & Panora
 */
export type UnifiedEcommerceProductOutputFieldMappings = {};

/**
 * The remote data of the customer in the context of the 3rd Party
 */
export type UnifiedEcommerceProductOutputRemoteData = {};

export type UnifiedEcommerceProductOutput = {
  /**
   * The URL of the product
   */
  productUrl?: string | null | undefined;
  /**
   * The type of the product
   */
  productType?: string | null | undefined;
  /**
   * The status of the product. Either ACTIVE, DRAFT OR ARCHIVED.
   */
  productStatus?: string | null | undefined;
  /**
   * The URLs of the product images
   */
  imagesUrls?: Array<string> | null | undefined;
  /**
   * The description of the product
   */
  description?: string | null | undefined;
  /**
   * The vendor of the product
   */
  vendor?: string | null | undefined;
  /**
   * The variants of the product
   */
  variants?: Array<Variant> | undefined;
  /**
   * The tags associated with the product
   */
  tags?: Array<string> | null | undefined;
  /**
   * The custom field mappings of the object between the remote 3rd party & Panora
   */
  fieldMappings?: UnifiedEcommerceProductOutputFieldMappings | null | undefined;
  /**
   * The UUID of the product
   */
  id?: string | null | undefined;
  /**
   * The remote ID of the product in the context of the 3rd Party
   */
  remoteId?: string | null | undefined;
  /**
   * The remote data of the customer in the context of the 3rd Party
   */
  remoteData?: UnifiedEcommerceProductOutputRemoteData | null | undefined;
  /**
   * The created date of the object
   */
  createdAt?: string | null | undefined;
  /**
   * The modified date of the object
   */
  modifiedAt?: string | null | undefined;
};

/** @internal */
export const UnifiedEcommerceProductOutputFieldMappings$inboundSchema:
  z.ZodType<UnifiedEcommerceProductOutputFieldMappings, z.ZodTypeDef, unknown> =
    z.object({});

/** @internal */
export type UnifiedEcommerceProductOutputFieldMappings$Outbound = {};

/** @internal */
export const UnifiedEcommerceProductOutputFieldMappings$outboundSchema:
  z.ZodType<
    UnifiedEcommerceProductOutputFieldMappings$Outbound,
    z.ZodTypeDef,
    UnifiedEcommerceProductOutputFieldMappings
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceProductOutputFieldMappings$ {
  /** @deprecated use `UnifiedEcommerceProductOutputFieldMappings$inboundSchema` instead. */
  export const inboundSchema =
    UnifiedEcommerceProductOutputFieldMappings$inboundSchema;
  /** @deprecated use `UnifiedEcommerceProductOutputFieldMappings$outboundSchema` instead. */
  export const outboundSchema =
    UnifiedEcommerceProductOutputFieldMappings$outboundSchema;
  /** @deprecated use `UnifiedEcommerceProductOutputFieldMappings$Outbound` instead. */
  export type Outbound = UnifiedEcommerceProductOutputFieldMappings$Outbound;
}

export function unifiedEcommerceProductOutputFieldMappingsToJSON(
  unifiedEcommerceProductOutputFieldMappings:
    UnifiedEcommerceProductOutputFieldMappings,
): string {
  return JSON.stringify(
    UnifiedEcommerceProductOutputFieldMappings$outboundSchema.parse(
      unifiedEcommerceProductOutputFieldMappings,
    ),
  );
}

export function unifiedEcommerceProductOutputFieldMappingsFromJSON(
  jsonString: string,
): SafeParseResult<
  UnifiedEcommerceProductOutputFieldMappings,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UnifiedEcommerceProductOutputFieldMappings$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UnifiedEcommerceProductOutputFieldMappings' from JSON`,
  );
}

/** @internal */
export const UnifiedEcommerceProductOutputRemoteData$inboundSchema: z.ZodType<
  UnifiedEcommerceProductOutputRemoteData,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type UnifiedEcommerceProductOutputRemoteData$Outbound = {};

/** @internal */
export const UnifiedEcommerceProductOutputRemoteData$outboundSchema: z.ZodType<
  UnifiedEcommerceProductOutputRemoteData$Outbound,
  z.ZodTypeDef,
  UnifiedEcommerceProductOutputRemoteData
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceProductOutputRemoteData$ {
  /** @deprecated use `UnifiedEcommerceProductOutputRemoteData$inboundSchema` instead. */
  export const inboundSchema =
    UnifiedEcommerceProductOutputRemoteData$inboundSchema;
  /** @deprecated use `UnifiedEcommerceProductOutputRemoteData$outboundSchema` instead. */
  export const outboundSchema =
    UnifiedEcommerceProductOutputRemoteData$outboundSchema;
  /** @deprecated use `UnifiedEcommerceProductOutputRemoteData$Outbound` instead. */
  export type Outbound = UnifiedEcommerceProductOutputRemoteData$Outbound;
}

export function unifiedEcommerceProductOutputRemoteDataToJSON(
  unifiedEcommerceProductOutputRemoteData:
    UnifiedEcommerceProductOutputRemoteData,
): string {
  return JSON.stringify(
    UnifiedEcommerceProductOutputRemoteData$outboundSchema.parse(
      unifiedEcommerceProductOutputRemoteData,
    ),
  );
}

export function unifiedEcommerceProductOutputRemoteDataFromJSON(
  jsonString: string,
): SafeParseResult<
  UnifiedEcommerceProductOutputRemoteData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UnifiedEcommerceProductOutputRemoteData$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UnifiedEcommerceProductOutputRemoteData' from JSON`,
  );
}

/** @internal */
export const UnifiedEcommerceProductOutput$inboundSchema: z.ZodType<
  UnifiedEcommerceProductOutput,
  z.ZodTypeDef,
  unknown
> = z.object({
  product_url: z.nullable(z.string()).optional(),
  product_type: z.nullable(z.string()).optional(),
  product_status: z.nullable(z.string()).optional(),
  images_urls: z.nullable(z.array(z.string())).optional(),
  description: z.nullable(z.string()).optional(),
  vendor: z.nullable(z.string()).optional(),
  variants: z.array(Variant$inboundSchema).optional(),
  tags: z.nullable(z.array(z.string())).optional(),
  field_mappings: z.nullable(
    z.lazy(() => UnifiedEcommerceProductOutputFieldMappings$inboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  remote_id: z.nullable(z.string()).optional(),
  remote_data: z.nullable(
    z.lazy(() => UnifiedEcommerceProductOutputRemoteData$inboundSchema),
  ).optional(),
  created_at: z.nullable(z.string()).optional(),
  modified_at: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "product_url": "productUrl",
    "product_type": "productType",
    "product_status": "productStatus",
    "images_urls": "imagesUrls",
    "field_mappings": "fieldMappings",
    "remote_id": "remoteId",
    "remote_data": "remoteData",
    "created_at": "createdAt",
    "modified_at": "modifiedAt",
  });
});

/** @internal */
export type UnifiedEcommerceProductOutput$Outbound = {
  product_url?: string | null | undefined;
  product_type?: string | null | undefined;
  product_status?: string | null | undefined;
  images_urls?: Array<string> | null | undefined;
  description?: string | null | undefined;
  vendor?: string | null | undefined;
  variants?: Array<Variant$Outbound> | undefined;
  tags?: Array<string> | null | undefined;
  field_mappings?:
    | UnifiedEcommerceProductOutputFieldMappings$Outbound
    | null
    | undefined;
  id?: string | null | undefined;
  remote_id?: string | null | undefined;
  remote_data?:
    | UnifiedEcommerceProductOutputRemoteData$Outbound
    | null
    | undefined;
  created_at?: string | null | undefined;
  modified_at?: string | null | undefined;
};

/** @internal */
export const UnifiedEcommerceProductOutput$outboundSchema: z.ZodType<
  UnifiedEcommerceProductOutput$Outbound,
  z.ZodTypeDef,
  UnifiedEcommerceProductOutput
> = z.object({
  productUrl: z.nullable(z.string()).optional(),
  productType: z.nullable(z.string()).optional(),
  productStatus: z.nullable(z.string()).optional(),
  imagesUrls: z.nullable(z.array(z.string())).optional(),
  description: z.nullable(z.string()).optional(),
  vendor: z.nullable(z.string()).optional(),
  variants: z.array(Variant$outboundSchema).optional(),
  tags: z.nullable(z.array(z.string())).optional(),
  fieldMappings: z.nullable(
    z.lazy(() => UnifiedEcommerceProductOutputFieldMappings$outboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  remoteId: z.nullable(z.string()).optional(),
  remoteData: z.nullable(
    z.lazy(() => UnifiedEcommerceProductOutputRemoteData$outboundSchema),
  ).optional(),
  createdAt: z.nullable(z.string()).optional(),
  modifiedAt: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    productUrl: "product_url",
    productType: "product_type",
    productStatus: "product_status",
    imagesUrls: "images_urls",
    fieldMappings: "field_mappings",
    remoteId: "remote_id",
    remoteData: "remote_data",
    createdAt: "created_at",
    modifiedAt: "modified_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceProductOutput$ {
  /** @deprecated use `UnifiedEcommerceProductOutput$inboundSchema` instead. */
  export const inboundSchema = UnifiedEcommerceProductOutput$inboundSchema;
  /** @deprecated use `UnifiedEcommerceProductOutput$outboundSchema` instead. */
  export const outboundSchema = UnifiedEcommerceProductOutput$outboundSchema;
  /** @deprecated use `UnifiedEcommerceProductOutput$Outbound` instead. */
  export type Outbound = UnifiedEcommerceProductOutput$Outbound;
}

export function unifiedEcommerceProductOutputToJSON(
  unifiedEcommerceProductOutput: UnifiedEcommerceProductOutput,
): string {
  return JSON.stringify(
    UnifiedEcommerceProductOutput$outboundSchema.parse(
      unifiedEcommerceProductOutput,
    ),
  );
}

export function unifiedEcommerceProductOutputFromJSON(
  jsonString: string,
): SafeParseResult<UnifiedEcommerceProductOutput, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UnifiedEcommerceProductOutput$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UnifiedEcommerceProductOutput' from JSON`,
  );
}
