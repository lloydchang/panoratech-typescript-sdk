/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type Addresses = {};

/**
 * The custom field mappings of the object between the remote 3rd party & Panora
 */
export type UnifiedEcommerceCustomerOutputFieldMappings = {};

/**
 * The remote data of the customer in the context of the 3rd Party
 */
export type UnifiedEcommerceCustomerOutputRemoteData = {};

export type UnifiedEcommerceCustomerOutput = {
    /**
     * The email of the customer
     */
    email?: string | undefined;
    /**
     * The first name of the customer
     */
    firstName?: string | undefined;
    /**
     * The last name of the customer
     */
    lastName?: string | undefined;
    /**
     * The phone number of the customer
     */
    phoneNumber?: string | undefined;
    /**
     * The addresses of the customer
     */
    addresses?: Array<Addresses> | undefined;
    /**
     * The custom field mappings of the object between the remote 3rd party & Panora
     */
    fieldMappings?: UnifiedEcommerceCustomerOutputFieldMappings | undefined;
    /**
     * The UUID of the customer
     */
    id?: string | undefined;
    /**
     * The remote ID of the customer in the context of the 3rd Party
     */
    remoteId?: string | undefined;
    /**
     * The remote data of the customer in the context of the 3rd Party
     */
    remoteData?: UnifiedEcommerceCustomerOutputRemoteData | undefined;
    /**
     * The created date of the object
     */
    createdAt?: string | undefined;
    /**
     * The modified date of the object
     */
    modifiedAt?: string | undefined;
};

/** @internal */
export const Addresses$inboundSchema: z.ZodType<Addresses, z.ZodTypeDef, unknown> = z.object({});

/** @internal */
export type Addresses$Outbound = {};

/** @internal */
export const Addresses$outboundSchema: z.ZodType<Addresses$Outbound, z.ZodTypeDef, Addresses> =
    z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Addresses$ {
    /** @deprecated use `Addresses$inboundSchema` instead. */
    export const inboundSchema = Addresses$inboundSchema;
    /** @deprecated use `Addresses$outboundSchema` instead. */
    export const outboundSchema = Addresses$outboundSchema;
    /** @deprecated use `Addresses$Outbound` instead. */
    export type Outbound = Addresses$Outbound;
}

/** @internal */
export const UnifiedEcommerceCustomerOutputFieldMappings$inboundSchema: z.ZodType<
    UnifiedEcommerceCustomerOutputFieldMappings,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UnifiedEcommerceCustomerOutputFieldMappings$Outbound = {};

/** @internal */
export const UnifiedEcommerceCustomerOutputFieldMappings$outboundSchema: z.ZodType<
    UnifiedEcommerceCustomerOutputFieldMappings$Outbound,
    z.ZodTypeDef,
    UnifiedEcommerceCustomerOutputFieldMappings
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceCustomerOutputFieldMappings$ {
    /** @deprecated use `UnifiedEcommerceCustomerOutputFieldMappings$inboundSchema` instead. */
    export const inboundSchema = UnifiedEcommerceCustomerOutputFieldMappings$inboundSchema;
    /** @deprecated use `UnifiedEcommerceCustomerOutputFieldMappings$outboundSchema` instead. */
    export const outboundSchema = UnifiedEcommerceCustomerOutputFieldMappings$outboundSchema;
    /** @deprecated use `UnifiedEcommerceCustomerOutputFieldMappings$Outbound` instead. */
    export type Outbound = UnifiedEcommerceCustomerOutputFieldMappings$Outbound;
}

/** @internal */
export const UnifiedEcommerceCustomerOutputRemoteData$inboundSchema: z.ZodType<
    UnifiedEcommerceCustomerOutputRemoteData,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UnifiedEcommerceCustomerOutputRemoteData$Outbound = {};

/** @internal */
export const UnifiedEcommerceCustomerOutputRemoteData$outboundSchema: z.ZodType<
    UnifiedEcommerceCustomerOutputRemoteData$Outbound,
    z.ZodTypeDef,
    UnifiedEcommerceCustomerOutputRemoteData
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceCustomerOutputRemoteData$ {
    /** @deprecated use `UnifiedEcommerceCustomerOutputRemoteData$inboundSchema` instead. */
    export const inboundSchema = UnifiedEcommerceCustomerOutputRemoteData$inboundSchema;
    /** @deprecated use `UnifiedEcommerceCustomerOutputRemoteData$outboundSchema` instead. */
    export const outboundSchema = UnifiedEcommerceCustomerOutputRemoteData$outboundSchema;
    /** @deprecated use `UnifiedEcommerceCustomerOutputRemoteData$Outbound` instead. */
    export type Outbound = UnifiedEcommerceCustomerOutputRemoteData$Outbound;
}

/** @internal */
export const UnifiedEcommerceCustomerOutput$inboundSchema: z.ZodType<
    UnifiedEcommerceCustomerOutput,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        email: z.string().optional(),
        first_name: z.string().optional(),
        last_name: z.string().optional(),
        phone_number: z.string().optional(),
        addresses: z.array(z.lazy(() => Addresses$inboundSchema)).optional(),
        field_mappings: z
            .lazy(() => UnifiedEcommerceCustomerOutputFieldMappings$inboundSchema)
            .optional(),
        id: z.string().optional(),
        remote_id: z.string().optional(),
        remote_data: z
            .lazy(() => UnifiedEcommerceCustomerOutputRemoteData$inboundSchema)
            .optional(),
        created_at: z.string().optional(),
        modified_at: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            first_name: "firstName",
            last_name: "lastName",
            phone_number: "phoneNumber",
            field_mappings: "fieldMappings",
            remote_id: "remoteId",
            remote_data: "remoteData",
            created_at: "createdAt",
            modified_at: "modifiedAt",
        });
    });

/** @internal */
export type UnifiedEcommerceCustomerOutput$Outbound = {
    email?: string | undefined;
    first_name?: string | undefined;
    last_name?: string | undefined;
    phone_number?: string | undefined;
    addresses?: Array<Addresses$Outbound> | undefined;
    field_mappings?: UnifiedEcommerceCustomerOutputFieldMappings$Outbound | undefined;
    id?: string | undefined;
    remote_id?: string | undefined;
    remote_data?: UnifiedEcommerceCustomerOutputRemoteData$Outbound | undefined;
    created_at?: string | undefined;
    modified_at?: string | undefined;
};

/** @internal */
export const UnifiedEcommerceCustomerOutput$outboundSchema: z.ZodType<
    UnifiedEcommerceCustomerOutput$Outbound,
    z.ZodTypeDef,
    UnifiedEcommerceCustomerOutput
> = z
    .object({
        email: z.string().optional(),
        firstName: z.string().optional(),
        lastName: z.string().optional(),
        phoneNumber: z.string().optional(),
        addresses: z.array(z.lazy(() => Addresses$outboundSchema)).optional(),
        fieldMappings: z
            .lazy(() => UnifiedEcommerceCustomerOutputFieldMappings$outboundSchema)
            .optional(),
        id: z.string().optional(),
        remoteId: z.string().optional(),
        remoteData: z
            .lazy(() => UnifiedEcommerceCustomerOutputRemoteData$outboundSchema)
            .optional(),
        createdAt: z.string().optional(),
        modifiedAt: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            firstName: "first_name",
            lastName: "last_name",
            phoneNumber: "phone_number",
            fieldMappings: "field_mappings",
            remoteId: "remote_id",
            remoteData: "remote_data",
            createdAt: "created_at",
            modifiedAt: "modified_at",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceCustomerOutput$ {
    /** @deprecated use `UnifiedEcommerceCustomerOutput$inboundSchema` instead. */
    export const inboundSchema = UnifiedEcommerceCustomerOutput$inboundSchema;
    /** @deprecated use `UnifiedEcommerceCustomerOutput$outboundSchema` instead. */
    export const outboundSchema = UnifiedEcommerceCustomerOutput$outboundSchema;
    /** @deprecated use `UnifiedEcommerceCustomerOutput$Outbound` instead. */
    export type Outbound = UnifiedEcommerceCustomerOutput$Outbound;
}
