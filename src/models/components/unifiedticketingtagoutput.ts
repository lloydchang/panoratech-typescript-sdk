/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type UnifiedTicketingTagOutputFieldMappings = {};

export type UnifiedTicketingTagOutputRemoteData = {};

export type UnifiedTicketingTagOutputCreatedAt = {};

export type UnifiedTicketingTagOutputModifiedAt = {};

export type UnifiedTicketingTagOutput = {
    /**
     * The name of the tag
     */
    name: string;
    fieldMappings: UnifiedTicketingTagOutputFieldMappings;
    /**
     * The UUID of the tag
     */
    id?: string | undefined;
    /**
     * The id of the tag in the context of the 3rd Party
     */
    remoteId?: string | undefined;
    remoteData: UnifiedTicketingTagOutputRemoteData;
    createdAt: UnifiedTicketingTagOutputCreatedAt;
    modifiedAt: UnifiedTicketingTagOutputModifiedAt;
};

/** @internal */
export namespace UnifiedTicketingTagOutputFieldMappings$ {
    export const inboundSchema: z.ZodType<
        UnifiedTicketingTagOutputFieldMappings,
        z.ZodTypeDef,
        unknown
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UnifiedTicketingTagOutputFieldMappings
    > = z.object({});
}

/** @internal */
export namespace UnifiedTicketingTagOutputRemoteData$ {
    export const inboundSchema: z.ZodType<
        UnifiedTicketingTagOutputRemoteData,
        z.ZodTypeDef,
        unknown
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UnifiedTicketingTagOutputRemoteData
    > = z.object({});
}

/** @internal */
export namespace UnifiedTicketingTagOutputCreatedAt$ {
    export const inboundSchema: z.ZodType<
        UnifiedTicketingTagOutputCreatedAt,
        z.ZodTypeDef,
        unknown
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UnifiedTicketingTagOutputCreatedAt
    > = z.object({});
}

/** @internal */
export namespace UnifiedTicketingTagOutputModifiedAt$ {
    export const inboundSchema: z.ZodType<
        UnifiedTicketingTagOutputModifiedAt,
        z.ZodTypeDef,
        unknown
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UnifiedTicketingTagOutputModifiedAt
    > = z.object({});
}

/** @internal */
export namespace UnifiedTicketingTagOutput$ {
    export const inboundSchema: z.ZodType<UnifiedTicketingTagOutput, z.ZodTypeDef, unknown> = z
        .object({
            name: z.string(),
            field_mappings: z.lazy(() => UnifiedTicketingTagOutputFieldMappings$.inboundSchema),
            id: z.string().optional(),
            remote_id: z.string().optional(),
            remote_data: z.lazy(() => UnifiedTicketingTagOutputRemoteData$.inboundSchema),
            created_at: z.lazy(() => UnifiedTicketingTagOutputCreatedAt$.inboundSchema),
            modified_at: z.lazy(() => UnifiedTicketingTagOutputModifiedAt$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                field_mappings: "fieldMappings",
                remote_id: "remoteId",
                remote_data: "remoteData",
                created_at: "createdAt",
                modified_at: "modifiedAt",
            });
        });

    export type Outbound = {
        name: string;
        field_mappings: UnifiedTicketingTagOutputFieldMappings$.Outbound;
        id?: string | undefined;
        remote_id?: string | undefined;
        remote_data: UnifiedTicketingTagOutputRemoteData$.Outbound;
        created_at: UnifiedTicketingTagOutputCreatedAt$.Outbound;
        modified_at: UnifiedTicketingTagOutputModifiedAt$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnifiedTicketingTagOutput> = z
        .object({
            name: z.string(),
            fieldMappings: z.lazy(() => UnifiedTicketingTagOutputFieldMappings$.outboundSchema),
            id: z.string().optional(),
            remoteId: z.string().optional(),
            remoteData: z.lazy(() => UnifiedTicketingTagOutputRemoteData$.outboundSchema),
            createdAt: z.lazy(() => UnifiedTicketingTagOutputCreatedAt$.outboundSchema),
            modifiedAt: z.lazy(() => UnifiedTicketingTagOutputModifiedAt$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                fieldMappings: "field_mappings",
                remoteId: "remote_id",
                remoteData: "remote_data",
                createdAt: "created_at",
                modifiedAt: "modified_at",
            });
        });
}
