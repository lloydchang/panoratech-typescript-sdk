/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  LineItem,
  LineItem$inboundSchema,
  LineItem$Outbound,
  LineItem$outboundSchema,
} from "./lineitem.js";

/**
 * The custom field mappings of the object between the remote 3rd party & Panora
 */
export type UnifiedEcommerceOrderOutputFieldMappings = {};

/**
 * The remote data of the customer in the context of the 3rd Party
 */
export type UnifiedEcommerceOrderOutputRemoteData = {};

export type UnifiedEcommerceOrderOutput = {
  /**
   * The status of the order
   */
  orderStatus?: string | null | undefined;
  /**
   * The number of the order
   */
  orderNumber?: string | null | undefined;
  /**
   * The payment status of the order
   */
  paymentStatus?: string | null | undefined;
  /**
   * The currency of the order. Authorized value must be of type CurrencyCode (ISO 4217)
   */
  currency?: string | null | undefined;
  /**
   * The total price of the order
   */
  totalPrice?: number | null | undefined;
  /**
   * The total discount on the order
   */
  totalDiscount?: number | null | undefined;
  /**
   * The total shipping cost of the order
   */
  totalShipping?: number | null | undefined;
  /**
   * The total tax on the order
   */
  totalTax?: number | null | undefined;
  /**
   * The fulfillment status of the order
   */
  fulfillmentStatus?: string | null | undefined;
  /**
   * The UUID of the customer associated with the order
   */
  customerId?: string | null | undefined;
  /**
   * The items in the order
   */
  items?: Array<LineItem> | null | undefined;
  /**
   * The custom field mappings of the object between the remote 3rd party & Panora
   */
  fieldMappings?: UnifiedEcommerceOrderOutputFieldMappings | null | undefined;
  /**
   * The UUID of the order
   */
  id?: string | null | undefined;
  /**
   * The remote ID of the order in the context of the 3rd Party
   */
  remoteId?: string | null | undefined;
  /**
   * The remote data of the customer in the context of the 3rd Party
   */
  remoteData?: UnifiedEcommerceOrderOutputRemoteData | null | undefined;
  /**
   * The created date of the object
   */
  createdAt?: string | null | undefined;
  /**
   * The modified date of the object
   */
  modifiedAt?: string | null | undefined;
};

/** @internal */
export const UnifiedEcommerceOrderOutputFieldMappings$inboundSchema: z.ZodType<
  UnifiedEcommerceOrderOutputFieldMappings,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type UnifiedEcommerceOrderOutputFieldMappings$Outbound = {};

/** @internal */
export const UnifiedEcommerceOrderOutputFieldMappings$outboundSchema: z.ZodType<
  UnifiedEcommerceOrderOutputFieldMappings$Outbound,
  z.ZodTypeDef,
  UnifiedEcommerceOrderOutputFieldMappings
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceOrderOutputFieldMappings$ {
  /** @deprecated use `UnifiedEcommerceOrderOutputFieldMappings$inboundSchema` instead. */
  export const inboundSchema =
    UnifiedEcommerceOrderOutputFieldMappings$inboundSchema;
  /** @deprecated use `UnifiedEcommerceOrderOutputFieldMappings$outboundSchema` instead. */
  export const outboundSchema =
    UnifiedEcommerceOrderOutputFieldMappings$outboundSchema;
  /** @deprecated use `UnifiedEcommerceOrderOutputFieldMappings$Outbound` instead. */
  export type Outbound = UnifiedEcommerceOrderOutputFieldMappings$Outbound;
}

/** @internal */
export const UnifiedEcommerceOrderOutputRemoteData$inboundSchema: z.ZodType<
  UnifiedEcommerceOrderOutputRemoteData,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type UnifiedEcommerceOrderOutputRemoteData$Outbound = {};

/** @internal */
export const UnifiedEcommerceOrderOutputRemoteData$outboundSchema: z.ZodType<
  UnifiedEcommerceOrderOutputRemoteData$Outbound,
  z.ZodTypeDef,
  UnifiedEcommerceOrderOutputRemoteData
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceOrderOutputRemoteData$ {
  /** @deprecated use `UnifiedEcommerceOrderOutputRemoteData$inboundSchema` instead. */
  export const inboundSchema =
    UnifiedEcommerceOrderOutputRemoteData$inboundSchema;
  /** @deprecated use `UnifiedEcommerceOrderOutputRemoteData$outboundSchema` instead. */
  export const outboundSchema =
    UnifiedEcommerceOrderOutputRemoteData$outboundSchema;
  /** @deprecated use `UnifiedEcommerceOrderOutputRemoteData$Outbound` instead. */
  export type Outbound = UnifiedEcommerceOrderOutputRemoteData$Outbound;
}

/** @internal */
export const UnifiedEcommerceOrderOutput$inboundSchema: z.ZodType<
  UnifiedEcommerceOrderOutput,
  z.ZodTypeDef,
  unknown
> = z.object({
  order_status: z.nullable(z.string()).optional(),
  order_number: z.nullable(z.string()).optional(),
  payment_status: z.nullable(z.string()).optional(),
  currency: z.nullable(z.string()).optional(),
  total_price: z.nullable(z.number()).optional(),
  total_discount: z.nullable(z.number()).optional(),
  total_shipping: z.nullable(z.number()).optional(),
  total_tax: z.nullable(z.number()).optional(),
  fulfillment_status: z.nullable(z.string()).optional(),
  customer_id: z.nullable(z.string()).optional(),
  items: z.nullable(z.array(LineItem$inboundSchema)).optional(),
  field_mappings: z.nullable(
    z.lazy(() => UnifiedEcommerceOrderOutputFieldMappings$inboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  remote_id: z.nullable(z.string()).optional(),
  remote_data: z.nullable(
    z.lazy(() => UnifiedEcommerceOrderOutputRemoteData$inboundSchema),
  ).optional(),
  created_at: z.nullable(z.string()).optional(),
  modified_at: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "order_status": "orderStatus",
    "order_number": "orderNumber",
    "payment_status": "paymentStatus",
    "total_price": "totalPrice",
    "total_discount": "totalDiscount",
    "total_shipping": "totalShipping",
    "total_tax": "totalTax",
    "fulfillment_status": "fulfillmentStatus",
    "customer_id": "customerId",
    "field_mappings": "fieldMappings",
    "remote_id": "remoteId",
    "remote_data": "remoteData",
    "created_at": "createdAt",
    "modified_at": "modifiedAt",
  });
});

/** @internal */
export type UnifiedEcommerceOrderOutput$Outbound = {
  order_status?: string | null | undefined;
  order_number?: string | null | undefined;
  payment_status?: string | null | undefined;
  currency?: string | null | undefined;
  total_price?: number | null | undefined;
  total_discount?: number | null | undefined;
  total_shipping?: number | null | undefined;
  total_tax?: number | null | undefined;
  fulfillment_status?: string | null | undefined;
  customer_id?: string | null | undefined;
  items?: Array<LineItem$Outbound> | null | undefined;
  field_mappings?:
    | UnifiedEcommerceOrderOutputFieldMappings$Outbound
    | null
    | undefined;
  id?: string | null | undefined;
  remote_id?: string | null | undefined;
  remote_data?:
    | UnifiedEcommerceOrderOutputRemoteData$Outbound
    | null
    | undefined;
  created_at?: string | null | undefined;
  modified_at?: string | null | undefined;
};

/** @internal */
export const UnifiedEcommerceOrderOutput$outboundSchema: z.ZodType<
  UnifiedEcommerceOrderOutput$Outbound,
  z.ZodTypeDef,
  UnifiedEcommerceOrderOutput
> = z.object({
  orderStatus: z.nullable(z.string()).optional(),
  orderNumber: z.nullable(z.string()).optional(),
  paymentStatus: z.nullable(z.string()).optional(),
  currency: z.nullable(z.string()).optional(),
  totalPrice: z.nullable(z.number()).optional(),
  totalDiscount: z.nullable(z.number()).optional(),
  totalShipping: z.nullable(z.number()).optional(),
  totalTax: z.nullable(z.number()).optional(),
  fulfillmentStatus: z.nullable(z.string()).optional(),
  customerId: z.nullable(z.string()).optional(),
  items: z.nullable(z.array(LineItem$outboundSchema)).optional(),
  fieldMappings: z.nullable(
    z.lazy(() => UnifiedEcommerceOrderOutputFieldMappings$outboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  remoteId: z.nullable(z.string()).optional(),
  remoteData: z.nullable(
    z.lazy(() => UnifiedEcommerceOrderOutputRemoteData$outboundSchema),
  ).optional(),
  createdAt: z.nullable(z.string()).optional(),
  modifiedAt: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    orderStatus: "order_status",
    orderNumber: "order_number",
    paymentStatus: "payment_status",
    totalPrice: "total_price",
    totalDiscount: "total_discount",
    totalShipping: "total_shipping",
    totalTax: "total_tax",
    fulfillmentStatus: "fulfillment_status",
    customerId: "customer_id",
    fieldMappings: "field_mappings",
    remoteId: "remote_id",
    remoteData: "remote_data",
    createdAt: "created_at",
    modifiedAt: "modified_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceOrderOutput$ {
  /** @deprecated use `UnifiedEcommerceOrderOutput$inboundSchema` instead. */
  export const inboundSchema = UnifiedEcommerceOrderOutput$inboundSchema;
  /** @deprecated use `UnifiedEcommerceOrderOutput$outboundSchema` instead. */
  export const outboundSchema = UnifiedEcommerceOrderOutput$outboundSchema;
  /** @deprecated use `UnifiedEcommerceOrderOutput$Outbound` instead. */
  export type Outbound = UnifiedEcommerceOrderOutput$Outbound;
}
