/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

/**
 * The items in the order
 */
export type Items = {};

/**
 * The custom field mappings of the object between the remote 3rd party & Panora
 */
export type UnifiedEcommerceOrderOutputFieldMappings = {};

/**
 * The remote data of the customer in the context of the 3rd Party
 */
export type UnifiedEcommerceOrderOutputRemoteData = {};

export type UnifiedEcommerceOrderOutput = {
    /**
     * The status of the order
     */
    orderStatus?: string | undefined;
    /**
     * The number of the order
     */
    orderNumber?: string | undefined;
    /**
     * The payment status of the order
     */
    paymentStatus?: string | undefined;
    /**
     * The currency of the order. Authorized value must be of type CurrencyCode (ISO 4217)
     */
    currency?: string | undefined;
    /**
     * The total price of the order
     */
    totalPrice?: number | undefined;
    /**
     * The total discount on the order
     */
    totalDiscount?: number | undefined;
    /**
     * The total shipping cost of the order
     */
    totalShipping?: number | undefined;
    /**
     * The total tax on the order
     */
    totalTax?: number | undefined;
    /**
     * The fulfillment status of the order
     */
    fulfillmentStatus?: string | undefined;
    /**
     * The UUID of the customer associated with the order
     */
    customerId?: string | undefined;
    /**
     * The items in the order
     */
    items?: Items | undefined;
    /**
     * The custom field mappings of the object between the remote 3rd party & Panora
     */
    fieldMappings?: UnifiedEcommerceOrderOutputFieldMappings | undefined;
    /**
     * The UUID of the order
     */
    id?: string | undefined;
    /**
     * The remote ID of the order in the context of the 3rd Party
     */
    remoteId?: string | undefined;
    /**
     * The remote data of the customer in the context of the 3rd Party
     */
    remoteData?: UnifiedEcommerceOrderOutputRemoteData | undefined;
    /**
     * The created date of the object
     */
    createdAt?: string | undefined;
    /**
     * The modified date of the object
     */
    modifiedAt?: string | undefined;
};

/** @internal */
export const Items$inboundSchema: z.ZodType<Items, z.ZodTypeDef, unknown> = z.object({});

/** @internal */
export type Items$Outbound = {};

/** @internal */
export const Items$outboundSchema: z.ZodType<Items$Outbound, z.ZodTypeDef, Items> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Items$ {
    /** @deprecated use `Items$inboundSchema` instead. */
    export const inboundSchema = Items$inboundSchema;
    /** @deprecated use `Items$outboundSchema` instead. */
    export const outboundSchema = Items$outboundSchema;
    /** @deprecated use `Items$Outbound` instead. */
    export type Outbound = Items$Outbound;
}

/** @internal */
export const UnifiedEcommerceOrderOutputFieldMappings$inboundSchema: z.ZodType<
    UnifiedEcommerceOrderOutputFieldMappings,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UnifiedEcommerceOrderOutputFieldMappings$Outbound = {};

/** @internal */
export const UnifiedEcommerceOrderOutputFieldMappings$outboundSchema: z.ZodType<
    UnifiedEcommerceOrderOutputFieldMappings$Outbound,
    z.ZodTypeDef,
    UnifiedEcommerceOrderOutputFieldMappings
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceOrderOutputFieldMappings$ {
    /** @deprecated use `UnifiedEcommerceOrderOutputFieldMappings$inboundSchema` instead. */
    export const inboundSchema = UnifiedEcommerceOrderOutputFieldMappings$inboundSchema;
    /** @deprecated use `UnifiedEcommerceOrderOutputFieldMappings$outboundSchema` instead. */
    export const outboundSchema = UnifiedEcommerceOrderOutputFieldMappings$outboundSchema;
    /** @deprecated use `UnifiedEcommerceOrderOutputFieldMappings$Outbound` instead. */
    export type Outbound = UnifiedEcommerceOrderOutputFieldMappings$Outbound;
}

/** @internal */
export const UnifiedEcommerceOrderOutputRemoteData$inboundSchema: z.ZodType<
    UnifiedEcommerceOrderOutputRemoteData,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UnifiedEcommerceOrderOutputRemoteData$Outbound = {};

/** @internal */
export const UnifiedEcommerceOrderOutputRemoteData$outboundSchema: z.ZodType<
    UnifiedEcommerceOrderOutputRemoteData$Outbound,
    z.ZodTypeDef,
    UnifiedEcommerceOrderOutputRemoteData
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceOrderOutputRemoteData$ {
    /** @deprecated use `UnifiedEcommerceOrderOutputRemoteData$inboundSchema` instead. */
    export const inboundSchema = UnifiedEcommerceOrderOutputRemoteData$inboundSchema;
    /** @deprecated use `UnifiedEcommerceOrderOutputRemoteData$outboundSchema` instead. */
    export const outboundSchema = UnifiedEcommerceOrderOutputRemoteData$outboundSchema;
    /** @deprecated use `UnifiedEcommerceOrderOutputRemoteData$Outbound` instead. */
    export type Outbound = UnifiedEcommerceOrderOutputRemoteData$Outbound;
}

/** @internal */
export const UnifiedEcommerceOrderOutput$inboundSchema: z.ZodType<
    UnifiedEcommerceOrderOutput,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        order_status: z.string().optional(),
        order_number: z.string().optional(),
        payment_status: z.string().optional(),
        currency: z.string().optional(),
        total_price: z.number().optional(),
        total_discount: z.number().optional(),
        total_shipping: z.number().optional(),
        total_tax: z.number().optional(),
        fulfillment_status: z.string().optional(),
        customer_id: z.string().optional(),
        items: z.lazy(() => Items$inboundSchema).optional(),
        field_mappings: z
            .lazy(() => UnifiedEcommerceOrderOutputFieldMappings$inboundSchema)
            .optional(),
        id: z.string().optional(),
        remote_id: z.string().optional(),
        remote_data: z.lazy(() => UnifiedEcommerceOrderOutputRemoteData$inboundSchema).optional(),
        created_at: z.string().optional(),
        modified_at: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            order_status: "orderStatus",
            order_number: "orderNumber",
            payment_status: "paymentStatus",
            total_price: "totalPrice",
            total_discount: "totalDiscount",
            total_shipping: "totalShipping",
            total_tax: "totalTax",
            fulfillment_status: "fulfillmentStatus",
            customer_id: "customerId",
            field_mappings: "fieldMappings",
            remote_id: "remoteId",
            remote_data: "remoteData",
            created_at: "createdAt",
            modified_at: "modifiedAt",
        });
    });

/** @internal */
export type UnifiedEcommerceOrderOutput$Outbound = {
    order_status?: string | undefined;
    order_number?: string | undefined;
    payment_status?: string | undefined;
    currency?: string | undefined;
    total_price?: number | undefined;
    total_discount?: number | undefined;
    total_shipping?: number | undefined;
    total_tax?: number | undefined;
    fulfillment_status?: string | undefined;
    customer_id?: string | undefined;
    items?: Items$Outbound | undefined;
    field_mappings?: UnifiedEcommerceOrderOutputFieldMappings$Outbound | undefined;
    id?: string | undefined;
    remote_id?: string | undefined;
    remote_data?: UnifiedEcommerceOrderOutputRemoteData$Outbound | undefined;
    created_at?: string | undefined;
    modified_at?: string | undefined;
};

/** @internal */
export const UnifiedEcommerceOrderOutput$outboundSchema: z.ZodType<
    UnifiedEcommerceOrderOutput$Outbound,
    z.ZodTypeDef,
    UnifiedEcommerceOrderOutput
> = z
    .object({
        orderStatus: z.string().optional(),
        orderNumber: z.string().optional(),
        paymentStatus: z.string().optional(),
        currency: z.string().optional(),
        totalPrice: z.number().optional(),
        totalDiscount: z.number().optional(),
        totalShipping: z.number().optional(),
        totalTax: z.number().optional(),
        fulfillmentStatus: z.string().optional(),
        customerId: z.string().optional(),
        items: z.lazy(() => Items$outboundSchema).optional(),
        fieldMappings: z
            .lazy(() => UnifiedEcommerceOrderOutputFieldMappings$outboundSchema)
            .optional(),
        id: z.string().optional(),
        remoteId: z.string().optional(),
        remoteData: z.lazy(() => UnifiedEcommerceOrderOutputRemoteData$outboundSchema).optional(),
        createdAt: z.string().optional(),
        modifiedAt: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            orderStatus: "order_status",
            orderNumber: "order_number",
            paymentStatus: "payment_status",
            totalPrice: "total_price",
            totalDiscount: "total_discount",
            totalShipping: "total_shipping",
            totalTax: "total_tax",
            fulfillmentStatus: "fulfillment_status",
            customerId: "customer_id",
            fieldMappings: "field_mappings",
            remoteId: "remote_id",
            remoteData: "remote_data",
            createdAt: "created_at",
            modifiedAt: "modified_at",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedEcommerceOrderOutput$ {
    /** @deprecated use `UnifiedEcommerceOrderOutput$inboundSchema` instead. */
    export const inboundSchema = UnifiedEcommerceOrderOutput$inboundSchema;
    /** @deprecated use `UnifiedEcommerceOrderOutput$outboundSchema` instead. */
    export const outboundSchema = UnifiedEcommerceOrderOutput$outboundSchema;
    /** @deprecated use `UnifiedEcommerceOrderOutput$Outbound` instead. */
    export type Outbound = UnifiedEcommerceOrderOutput$Outbound;
}
