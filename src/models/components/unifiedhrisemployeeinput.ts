/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

/**
 * The custom field mappings of the object between the remote 3rd party & Panora
 */
export type UnifiedHrisEmployeeInputFieldMappings = {};

export type UnifiedHrisEmployeeInput = {
  /**
   * The groups the employee belongs to
   */
  groups?: Array<string> | null | undefined;
  /**
   * UUIDs of the of the Location associated with the company
   */
  locations?: Array<string> | null | undefined;
  /**
   * The employee number
   */
  employeeNumber?: string | null | undefined;
  /**
   * The UUID of the associated company
   */
  companyId?: string | null | undefined;
  /**
   * The first name of the employee
   */
  firstName?: string | null | undefined;
  /**
   * The last name of the employee
   */
  lastName?: string | null | undefined;
  /**
   * The preferred name of the employee
   */
  preferredName?: string | null | undefined;
  /**
   * The full display name of the employee
   */
  displayFullName?: string | null | undefined;
  /**
   * The username of the employee
   */
  username?: string | null | undefined;
  /**
   * The work email of the employee
   */
  workEmail?: string | null | undefined;
  /**
   * The personal email of the employee
   */
  personalEmail?: string | null | undefined;
  /**
   * The mobile phone number of the employee
   */
  mobilePhoneNumber?: string | null | undefined;
  /**
   * The employments of the employee
   */
  employments?: Array<string> | null | undefined;
  /**
   * The Social Security Number of the employee
   */
  ssn?: string | null | undefined;
  /**
   * The gender of the employee
   */
  gender?: string | null | undefined;
  /**
   * The ethnicity of the employee
   */
  ethnicity?: string | null | undefined;
  /**
   * The marital status of the employee
   */
  maritalStatus?: string | null | undefined;
  /**
   * The date of birth of the employee
   */
  dateOfBirth?: Date | null | undefined;
  /**
   * The start date of the employee
   */
  startDate?: Date | null | undefined;
  /**
   * The employment status of the employee
   */
  employmentStatus?: string | null | undefined;
  /**
   * The termination date of the employee
   */
  terminationDate?: Date | null | undefined;
  /**
   * The URL of the employee's avatar
   */
  avatarUrl?: string | null | undefined;
  /**
   * UUID of the manager (employee) of the employee
   */
  managerId?: string | null | undefined;
  /**
   * The custom field mappings of the object between the remote 3rd party & Panora
   */
  fieldMappings?: UnifiedHrisEmployeeInputFieldMappings | null | undefined;
};

/** @internal */
export const UnifiedHrisEmployeeInputFieldMappings$inboundSchema: z.ZodType<
  UnifiedHrisEmployeeInputFieldMappings,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type UnifiedHrisEmployeeInputFieldMappings$Outbound = {};

/** @internal */
export const UnifiedHrisEmployeeInputFieldMappings$outboundSchema: z.ZodType<
  UnifiedHrisEmployeeInputFieldMappings$Outbound,
  z.ZodTypeDef,
  UnifiedHrisEmployeeInputFieldMappings
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisEmployeeInputFieldMappings$ {
  /** @deprecated use `UnifiedHrisEmployeeInputFieldMappings$inboundSchema` instead. */
  export const inboundSchema =
    UnifiedHrisEmployeeInputFieldMappings$inboundSchema;
  /** @deprecated use `UnifiedHrisEmployeeInputFieldMappings$outboundSchema` instead. */
  export const outboundSchema =
    UnifiedHrisEmployeeInputFieldMappings$outboundSchema;
  /** @deprecated use `UnifiedHrisEmployeeInputFieldMappings$Outbound` instead. */
  export type Outbound = UnifiedHrisEmployeeInputFieldMappings$Outbound;
}

/** @internal */
export const UnifiedHrisEmployeeInput$inboundSchema: z.ZodType<
  UnifiedHrisEmployeeInput,
  z.ZodTypeDef,
  unknown
> = z.object({
  groups: z.nullable(z.array(z.string())).optional(),
  locations: z.nullable(z.array(z.string())).optional(),
  employee_number: z.nullable(z.string()).optional(),
  company_id: z.nullable(z.string()).optional(),
  first_name: z.nullable(z.string()).optional(),
  last_name: z.nullable(z.string()).optional(),
  preferred_name: z.nullable(z.string()).optional(),
  display_full_name: z.nullable(z.string()).optional(),
  username: z.nullable(z.string()).optional(),
  work_email: z.nullable(z.string()).optional(),
  personal_email: z.nullable(z.string()).optional(),
  mobile_phone_number: z.nullable(z.string()).optional(),
  employments: z.nullable(z.array(z.string())).optional(),
  ssn: z.nullable(z.string()).optional(),
  gender: z.nullable(z.string()).optional(),
  ethnicity: z.nullable(z.string()).optional(),
  marital_status: z.nullable(z.string()).optional(),
  date_of_birth: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  start_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  employment_status: z.nullable(z.string()).optional(),
  termination_date: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  avatar_url: z.nullable(z.string()).optional(),
  manager_id: z.nullable(z.string()).optional(),
  field_mappings: z.nullable(
    z.lazy(() => UnifiedHrisEmployeeInputFieldMappings$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "employee_number": "employeeNumber",
    "company_id": "companyId",
    "first_name": "firstName",
    "last_name": "lastName",
    "preferred_name": "preferredName",
    "display_full_name": "displayFullName",
    "work_email": "workEmail",
    "personal_email": "personalEmail",
    "mobile_phone_number": "mobilePhoneNumber",
    "marital_status": "maritalStatus",
    "date_of_birth": "dateOfBirth",
    "start_date": "startDate",
    "employment_status": "employmentStatus",
    "termination_date": "terminationDate",
    "avatar_url": "avatarUrl",
    "manager_id": "managerId",
    "field_mappings": "fieldMappings",
  });
});

/** @internal */
export type UnifiedHrisEmployeeInput$Outbound = {
  groups?: Array<string> | null | undefined;
  locations?: Array<string> | null | undefined;
  employee_number?: string | null | undefined;
  company_id?: string | null | undefined;
  first_name?: string | null | undefined;
  last_name?: string | null | undefined;
  preferred_name?: string | null | undefined;
  display_full_name?: string | null | undefined;
  username?: string | null | undefined;
  work_email?: string | null | undefined;
  personal_email?: string | null | undefined;
  mobile_phone_number?: string | null | undefined;
  employments?: Array<string> | null | undefined;
  ssn?: string | null | undefined;
  gender?: string | null | undefined;
  ethnicity?: string | null | undefined;
  marital_status?: string | null | undefined;
  date_of_birth?: string | null | undefined;
  start_date?: string | null | undefined;
  employment_status?: string | null | undefined;
  termination_date?: string | null | undefined;
  avatar_url?: string | null | undefined;
  manager_id?: string | null | undefined;
  field_mappings?:
    | UnifiedHrisEmployeeInputFieldMappings$Outbound
    | null
    | undefined;
};

/** @internal */
export const UnifiedHrisEmployeeInput$outboundSchema: z.ZodType<
  UnifiedHrisEmployeeInput$Outbound,
  z.ZodTypeDef,
  UnifiedHrisEmployeeInput
> = z.object({
  groups: z.nullable(z.array(z.string())).optional(),
  locations: z.nullable(z.array(z.string())).optional(),
  employeeNumber: z.nullable(z.string()).optional(),
  companyId: z.nullable(z.string()).optional(),
  firstName: z.nullable(z.string()).optional(),
  lastName: z.nullable(z.string()).optional(),
  preferredName: z.nullable(z.string()).optional(),
  displayFullName: z.nullable(z.string()).optional(),
  username: z.nullable(z.string()).optional(),
  workEmail: z.nullable(z.string()).optional(),
  personalEmail: z.nullable(z.string()).optional(),
  mobilePhoneNumber: z.nullable(z.string()).optional(),
  employments: z.nullable(z.array(z.string())).optional(),
  ssn: z.nullable(z.string()).optional(),
  gender: z.nullable(z.string()).optional(),
  ethnicity: z.nullable(z.string()).optional(),
  maritalStatus: z.nullable(z.string()).optional(),
  dateOfBirth: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  startDate: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  employmentStatus: z.nullable(z.string()).optional(),
  terminationDate: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  avatarUrl: z.nullable(z.string()).optional(),
  managerId: z.nullable(z.string()).optional(),
  fieldMappings: z.nullable(
    z.lazy(() => UnifiedHrisEmployeeInputFieldMappings$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    employeeNumber: "employee_number",
    companyId: "company_id",
    firstName: "first_name",
    lastName: "last_name",
    preferredName: "preferred_name",
    displayFullName: "display_full_name",
    workEmail: "work_email",
    personalEmail: "personal_email",
    mobilePhoneNumber: "mobile_phone_number",
    maritalStatus: "marital_status",
    dateOfBirth: "date_of_birth",
    startDate: "start_date",
    employmentStatus: "employment_status",
    terminationDate: "termination_date",
    avatarUrl: "avatar_url",
    managerId: "manager_id",
    fieldMappings: "field_mappings",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisEmployeeInput$ {
  /** @deprecated use `UnifiedHrisEmployeeInput$inboundSchema` instead. */
  export const inboundSchema = UnifiedHrisEmployeeInput$inboundSchema;
  /** @deprecated use `UnifiedHrisEmployeeInput$outboundSchema` instead. */
  export const outboundSchema = UnifiedHrisEmployeeInput$outboundSchema;
  /** @deprecated use `UnifiedHrisEmployeeInput$Outbound` instead. */
  export type Outbound = UnifiedHrisEmployeeInput$Outbound;
}
