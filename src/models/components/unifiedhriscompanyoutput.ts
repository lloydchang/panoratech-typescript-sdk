/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

/**
 * The custom field mappings of the object between the remote 3rd party & Panora
 */
export type UnifiedHrisCompanyOutputFieldMappings = {};

/**
 * The remote data of the company in the context of the 3rd Party
 */
export type UnifiedHrisCompanyOutputRemoteData = {};

export type UnifiedHrisCompanyOutput = {
  /**
   * The legal name of the company
   */
  legalName?: string | null | undefined;
  /**
   * UUIDs of the of the Location associated with the company
   */
  locations?: Array<string> | null | undefined;
  /**
   * The display name of the company
   */
  displayName?: string | null | undefined;
  /**
   * The Employer Identification Numbers (EINs) of the company
   */
  eins?: Array<string> | null | undefined;
  /**
   * The custom field mappings of the object between the remote 3rd party & Panora
   */
  fieldMappings?: UnifiedHrisCompanyOutputFieldMappings | null | undefined;
  /**
   * The UUID of the company record
   */
  id?: string | null | undefined;
  /**
   * The remote ID of the company in the context of the 3rd Party
   */
  remoteId?: string | null | undefined;
  /**
   * The remote data of the company in the context of the 3rd Party
   */
  remoteData?: UnifiedHrisCompanyOutputRemoteData | null | undefined;
  /**
   * The date when the company was created in the 3rd party system
   */
  remoteCreatedAt?: Date | null | undefined;
  /**
   * The created date of the company record
   */
  createdAt?: Date | null | undefined;
  /**
   * The last modified date of the company record
   */
  modifiedAt?: Date | null | undefined;
  /**
   * Indicates if the company was deleted in the remote system
   */
  remoteWasDeleted?: boolean | null | undefined;
};

/** @internal */
export const UnifiedHrisCompanyOutputFieldMappings$inboundSchema: z.ZodType<
  UnifiedHrisCompanyOutputFieldMappings,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type UnifiedHrisCompanyOutputFieldMappings$Outbound = {};

/** @internal */
export const UnifiedHrisCompanyOutputFieldMappings$outboundSchema: z.ZodType<
  UnifiedHrisCompanyOutputFieldMappings$Outbound,
  z.ZodTypeDef,
  UnifiedHrisCompanyOutputFieldMappings
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisCompanyOutputFieldMappings$ {
  /** @deprecated use `UnifiedHrisCompanyOutputFieldMappings$inboundSchema` instead. */
  export const inboundSchema =
    UnifiedHrisCompanyOutputFieldMappings$inboundSchema;
  /** @deprecated use `UnifiedHrisCompanyOutputFieldMappings$outboundSchema` instead. */
  export const outboundSchema =
    UnifiedHrisCompanyOutputFieldMappings$outboundSchema;
  /** @deprecated use `UnifiedHrisCompanyOutputFieldMappings$Outbound` instead. */
  export type Outbound = UnifiedHrisCompanyOutputFieldMappings$Outbound;
}

/** @internal */
export const UnifiedHrisCompanyOutputRemoteData$inboundSchema: z.ZodType<
  UnifiedHrisCompanyOutputRemoteData,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type UnifiedHrisCompanyOutputRemoteData$Outbound = {};

/** @internal */
export const UnifiedHrisCompanyOutputRemoteData$outboundSchema: z.ZodType<
  UnifiedHrisCompanyOutputRemoteData$Outbound,
  z.ZodTypeDef,
  UnifiedHrisCompanyOutputRemoteData
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisCompanyOutputRemoteData$ {
  /** @deprecated use `UnifiedHrisCompanyOutputRemoteData$inboundSchema` instead. */
  export const inboundSchema = UnifiedHrisCompanyOutputRemoteData$inboundSchema;
  /** @deprecated use `UnifiedHrisCompanyOutputRemoteData$outboundSchema` instead. */
  export const outboundSchema =
    UnifiedHrisCompanyOutputRemoteData$outboundSchema;
  /** @deprecated use `UnifiedHrisCompanyOutputRemoteData$Outbound` instead. */
  export type Outbound = UnifiedHrisCompanyOutputRemoteData$Outbound;
}

/** @internal */
export const UnifiedHrisCompanyOutput$inboundSchema: z.ZodType<
  UnifiedHrisCompanyOutput,
  z.ZodTypeDef,
  unknown
> = z.object({
  legal_name: z.nullable(z.string()).optional(),
  locations: z.nullable(z.array(z.string())).optional(),
  display_name: z.nullable(z.string()).optional(),
  eins: z.nullable(z.array(z.string())).optional(),
  field_mappings: z.nullable(
    z.lazy(() => UnifiedHrisCompanyOutputFieldMappings$inboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  remote_id: z.nullable(z.string()).optional(),
  remote_data: z.nullable(
    z.lazy(() => UnifiedHrisCompanyOutputRemoteData$inboundSchema),
  ).optional(),
  remote_created_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  created_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  modified_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  remote_was_deleted: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    "legal_name": "legalName",
    "display_name": "displayName",
    "field_mappings": "fieldMappings",
    "remote_id": "remoteId",
    "remote_data": "remoteData",
    "remote_created_at": "remoteCreatedAt",
    "created_at": "createdAt",
    "modified_at": "modifiedAt",
    "remote_was_deleted": "remoteWasDeleted",
  });
});

/** @internal */
export type UnifiedHrisCompanyOutput$Outbound = {
  legal_name?: string | null | undefined;
  locations?: Array<string> | null | undefined;
  display_name?: string | null | undefined;
  eins?: Array<string> | null | undefined;
  field_mappings?:
    | UnifiedHrisCompanyOutputFieldMappings$Outbound
    | null
    | undefined;
  id?: string | null | undefined;
  remote_id?: string | null | undefined;
  remote_data?: UnifiedHrisCompanyOutputRemoteData$Outbound | null | undefined;
  remote_created_at?: string | null | undefined;
  created_at?: string | null | undefined;
  modified_at?: string | null | undefined;
  remote_was_deleted?: boolean | null | undefined;
};

/** @internal */
export const UnifiedHrisCompanyOutput$outboundSchema: z.ZodType<
  UnifiedHrisCompanyOutput$Outbound,
  z.ZodTypeDef,
  UnifiedHrisCompanyOutput
> = z.object({
  legalName: z.nullable(z.string()).optional(),
  locations: z.nullable(z.array(z.string())).optional(),
  displayName: z.nullable(z.string()).optional(),
  eins: z.nullable(z.array(z.string())).optional(),
  fieldMappings: z.nullable(
    z.lazy(() => UnifiedHrisCompanyOutputFieldMappings$outboundSchema),
  ).optional(),
  id: z.nullable(z.string()).optional(),
  remoteId: z.nullable(z.string()).optional(),
  remoteData: z.nullable(
    z.lazy(() => UnifiedHrisCompanyOutputRemoteData$outboundSchema),
  ).optional(),
  remoteCreatedAt: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  createdAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  remoteWasDeleted: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    legalName: "legal_name",
    displayName: "display_name",
    fieldMappings: "field_mappings",
    remoteId: "remote_id",
    remoteData: "remote_data",
    remoteCreatedAt: "remote_created_at",
    createdAt: "created_at",
    modifiedAt: "modified_at",
    remoteWasDeleted: "remote_was_deleted",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnifiedHrisCompanyOutput$ {
  /** @deprecated use `UnifiedHrisCompanyOutput$inboundSchema` instead. */
  export const inboundSchema = UnifiedHrisCompanyOutput$inboundSchema;
  /** @deprecated use `UnifiedHrisCompanyOutput$outboundSchema` instead. */
  export const outboundSchema = UnifiedHrisCompanyOutput$outboundSchema;
  /** @deprecated use `UnifiedHrisCompanyOutput$Outbound` instead. */
  export type Outbound = UnifiedHrisCompanyOutput$Outbound;
}
