/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type Url = {
    /**
     * The url.
     */
    url: string | null;
    /**
     * The url type. It takes [WEBSITE | BLOG | LINKEDIN | GITHUB | OTHER]
     */
    urlType: string | null;
};

/** @internal */
export const Url$inboundSchema: z.ZodType<Url, z.ZodTypeDef, unknown> = z
    .object({
        url: z.nullable(z.string()),
        url_type: z.nullable(z.string()),
    })
    .transform((v) => {
        return remap$(v, {
            url_type: "urlType",
        });
    });

/** @internal */
export type Url$Outbound = {
    url: string | null;
    url_type: string | null;
};

/** @internal */
export const Url$outboundSchema: z.ZodType<Url$Outbound, z.ZodTypeDef, Url> = z
    .object({
        url: z.nullable(z.string()),
        urlType: z.nullable(z.string()),
    })
    .transform((v) => {
        return remap$(v, {
            urlType: "url_type",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Url$ {
    /** @deprecated use `Url$inboundSchema` instead. */
    export const inboundSchema = Url$inboundSchema;
    /** @deprecated use `Url$outboundSchema` instead. */
    export const outboundSchema = Url$outboundSchema;
    /** @deprecated use `Url$Outbound` instead. */
    export type Outbound = Url$Outbound;
}
