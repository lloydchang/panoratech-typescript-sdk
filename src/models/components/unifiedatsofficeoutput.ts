/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type UnifiedAtsOfficeOutputFieldMappings = {};

export type UnifiedAtsOfficeOutputRemoteData = {};

export type UnifiedAtsOfficeOutputCreatedAt = {};

export type UnifiedAtsOfficeOutputModifiedAt = {};

export type UnifiedAtsOfficeOutput = {
    /**
     * The name of the office
     */
    name?: string | undefined;
    /**
     * The location of the office
     */
    location?: string | undefined;
    fieldMappings: UnifiedAtsOfficeOutputFieldMappings;
    /**
     * The UUID of the office
     */
    id?: string | undefined;
    /**
     * The remote ID of the office in the context of the 3rd Party
     */
    remoteId?: string | undefined;
    remoteData: UnifiedAtsOfficeOutputRemoteData;
    createdAt: UnifiedAtsOfficeOutputCreatedAt;
    modifiedAt: UnifiedAtsOfficeOutputModifiedAt;
};

/** @internal */
export namespace UnifiedAtsOfficeOutputFieldMappings$ {
    export const inboundSchema: z.ZodType<
        UnifiedAtsOfficeOutputFieldMappings,
        z.ZodTypeDef,
        unknown
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UnifiedAtsOfficeOutputFieldMappings
    > = z.object({});
}

/** @internal */
export namespace UnifiedAtsOfficeOutputRemoteData$ {
    export const inboundSchema: z.ZodType<UnifiedAtsOfficeOutputRemoteData, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UnifiedAtsOfficeOutputRemoteData
    > = z.object({});
}

/** @internal */
export namespace UnifiedAtsOfficeOutputCreatedAt$ {
    export const inboundSchema: z.ZodType<UnifiedAtsOfficeOutputCreatedAt, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UnifiedAtsOfficeOutputCreatedAt
    > = z.object({});
}

/** @internal */
export namespace UnifiedAtsOfficeOutputModifiedAt$ {
    export const inboundSchema: z.ZodType<UnifiedAtsOfficeOutputModifiedAt, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UnifiedAtsOfficeOutputModifiedAt
    > = z.object({});
}

/** @internal */
export namespace UnifiedAtsOfficeOutput$ {
    export const inboundSchema: z.ZodType<UnifiedAtsOfficeOutput, z.ZodTypeDef, unknown> = z
        .object({
            name: z.string().optional(),
            location: z.string().optional(),
            field_mappings: z.lazy(() => UnifiedAtsOfficeOutputFieldMappings$.inboundSchema),
            id: z.string().optional(),
            remote_id: z.string().optional(),
            remote_data: z.lazy(() => UnifiedAtsOfficeOutputRemoteData$.inboundSchema),
            created_at: z.lazy(() => UnifiedAtsOfficeOutputCreatedAt$.inboundSchema),
            modified_at: z.lazy(() => UnifiedAtsOfficeOutputModifiedAt$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                field_mappings: "fieldMappings",
                remote_id: "remoteId",
                remote_data: "remoteData",
                created_at: "createdAt",
                modified_at: "modifiedAt",
            });
        });

    export type Outbound = {
        name?: string | undefined;
        location?: string | undefined;
        field_mappings: UnifiedAtsOfficeOutputFieldMappings$.Outbound;
        id?: string | undefined;
        remote_id?: string | undefined;
        remote_data: UnifiedAtsOfficeOutputRemoteData$.Outbound;
        created_at: UnifiedAtsOfficeOutputCreatedAt$.Outbound;
        modified_at: UnifiedAtsOfficeOutputModifiedAt$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnifiedAtsOfficeOutput> = z
        .object({
            name: z.string().optional(),
            location: z.string().optional(),
            fieldMappings: z.lazy(() => UnifiedAtsOfficeOutputFieldMappings$.outboundSchema),
            id: z.string().optional(),
            remoteId: z.string().optional(),
            remoteData: z.lazy(() => UnifiedAtsOfficeOutputRemoteData$.outboundSchema),
            createdAt: z.lazy(() => UnifiedAtsOfficeOutputCreatedAt$.outboundSchema),
            modifiedAt: z.lazy(() => UnifiedAtsOfficeOutputModifiedAt$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                fieldMappings: "field_mappings",
                remoteId: "remote_id",
                remoteData: "remote_data",
                createdAt: "created_at",
                modifiedAt: "modified_at",
            });
        });
}
